{4:}{9:}{$MODE ISO}{$Q+}{$R+}{[$Q-][$R-]}{:9}PROGRAM TEX(INPUT,OUTPUT);
LABEL{6:}1,9998,9999;{:6}CONST{11:}MEMMAX=30000;MEMMIN=0;BUFSIZE=500;
ERRORLINE=72;HALFERRORLIN=42;MAXPRINTLINE=79;STACKSIZE=200;MAXINOPEN=6;
FONTMAX=75;FONTMEMSIZE=20000;PARAMSIZE=60;NESTSIZE=40;MAXSTRINGS=3000;
STRINGVACANC=8000;POOLSIZE=32000;SAVESIZE=600;TRIESIZE=8000;
TRIEOPSIZE=500;DVIBUFSIZE=800;FILENAMESIZE=40;
POOLNAME='TeXformats/tex.pool';{:11}TYPE{18:}ASCIICODE=0..255;
{:18}{25:}EIGHTBITS=0..255;ALPHAFILE=TEXT;
BYTEFILE=PACKED FILE OF EIGHTBITS;UNTYPEDFILE=FILE;
{:25}{38:}POOLPOINTER=0..POOLSIZE;STRNUMBER=0..MAXSTRINGS;
PACKEDASCIIC=0..255;{:38}{101:}SCALED=INTEGER;
NONNEGATIVEI=0..2147483647;SMALLNUMBER=0..63;
{:101}{109:}GLUERATIO=SINGLE;{:109}{113:}QUARTERWORD=0..255;
HALFWORD=0..65535;TWOCHOICES=1..2;FOURCHOICES=1..4;
TWOHALVES=PACKED RECORD RH:HALFWORD;CASE TWOCHOICES OF 1:(LH:HALFWORD);
2:(B0:QUARTERWORD;B1:QUARTERWORD);END;
FOURQUARTERS=PACKED RECORD B0:QUARTERWORD;B1:QUARTERWORD;B2:QUARTERWORD;
B3:QUARTERWORD;END;
MEMORYWORD=RECORD CASE FOURCHOICES OF 1:(INT:INTEGER);2:(GR:GLUERATIO);
3:(HH:TWOHALVES);4:(QQQQ:FOURQUARTERS);END;WORDFILE=FILE OF MEMORYWORD;
{:113}{150:}GLUEORD=0..3;
{:150}{212:}LISTSTATEREC=RECORD MODEFIELD:-203..203;
HEADFIELD,TAILFIELD:HALFWORD;PGFIELD,MLFIELD:INTEGER;
AUXFIELD:MEMORYWORD;END;{:212}{269:}GROUPCODE=0..16;
{:269}{300:}INSTATERECOR=RECORD STATEFIELD,INDEXFIELD:QUARTERWORD;
STARTFIELD,LOCFIELD,LIMITFIELD,NAMEFIELD:HALFWORD;END;
{:300}{548:}INTERNALFONT=0..FONTMAX;FONTINDEX=0..FONTMEMSIZE;
{:548}{594:}DVIINDEX=0..DVIBUFSIZE;{:594}{920:}TRIEPOINTER=0..TRIESIZE;
{:920}{925:}HYPHPOINTER=0..307;{:925}VAR{13:}BAD:INTEGER;
{:13}{20:}XORD:ARRAY[CHAR]OF ASCIICODE;XCHR:ARRAY[ASCIICODE]OF CHAR;
{:20}{26:}NAMEOFFILE:PACKED ARRAY[1..FILENAMESIZE]OF CHAR;
NAMELENGTH:0..FILENAMESIZE;
{:26}{30:}BUFFER:ARRAY[0..BUFSIZE]OF ASCIICODE;FIRST:0..BUFSIZE;
LAST:0..BUFSIZE;MAXBUFSTACK:0..BUFSIZE;
{:30}{39:}STRPOOL:PACKED ARRAY[POOLPOINTER]OF PACKEDASCIIC;
STRSTART:ARRAY[STRNUMBER]OF POOLPOINTER;POOLPTR:POOLPOINTER;
STRPTR:STRNUMBER;INITPOOLPTR:POOLPOINTER;INITSTRPTR:STRNUMBER;
{:39}{50:}POOLFILE:ALPHAFILE;{:50}{54:}LOGFILE:ALPHAFILE;SELECTOR:0..21;
DIG:ARRAY[0..22]OF 0..15;TALLY:INTEGER;TERMOFFSET:0..MAXPRINTLINE;
FILEOFFSET:0..MAXPRINTLINE;TRICKBUF:ARRAY[0..ERRORLINE]OF ASCIICODE;
TRICKCOUNT:INTEGER;FIRSTCOUNT:INTEGER;{:54}{73:}INTERACTION:0..3;
{:73}{76:}DELETIONSALL:BOOLEAN;SETBOXALLOWE:BOOLEAN;HISTORY:0..3;
ERRORCOUNT:-1..100;{:76}{79:}HELPLINE:ARRAY[0..5]OF STRNUMBER;
HELPPTR:0..6;USEERRHELP:BOOLEAN;WANTEDIT:BOOLEAN;
{:79}{96:}INTERRUPT:INTEGER;OKTOINTERRUP:BOOLEAN;
{:96}{104:}ARITHERROR:BOOLEAN;REMAINDER:SCALED;
{:104}{115:}TEMPPTR:HALFWORD;
{:115}{116:}MEM:ARRAY[MEMMIN..MEMMAX]OF MEMORYWORD;LOMEMMAX:HALFWORD;
HIMEMMIN:HALFWORD;{:116}{117:}VARUSED,DYNUSED:INTEGER;
{:117}{118:}AVAIL:HALFWORD;MEMEND:HALFWORD;{:118}{124:}ROVER:HALFWORD;
{:124}{165:}{FREE:PACKED ARRAY[MEMMIN..MEMMAX]OF BOOLEAN;
WASFREE:PACKED ARRAY[MEMMIN..MEMMAX]OF BOOLEAN;
WASMEMEND,WASLOMAX,WASHIMIN:HALFWORD;PANICKING:BOOLEAN;}
{:165}{173:}FONTINSHORTD:INTEGER;{:173}{181:}DEPTHTHRESHO:INTEGER;
BREADTHMAX:INTEGER;{:181}{213:}NEST:ARRAY[0..NESTSIZE]OF LISTSTATEREC;
NESTPTR:0..NESTSIZE;MAXNESTSTACK:0..NESTSIZE;CURLIST:LISTSTATEREC;
SHOWNMODE:-203..203;{:213}{246:}OLDSETTING:0..21;
SYSTIME,SYSDAY,SYSMONTH,SYSYEAR:INTEGER;
{:246}{253:}EQTB:ARRAY[1..6106]OF MEMORYWORD;
XEQLEVEL:ARRAY[5263..6106]OF QUARTERWORD;
{:253}{256:}HASH:ARRAY[514..2880]OF TWOHALVES;HASHUSED:HALFWORD;
NONEWCONTROL:BOOLEAN;CSCOUNT:INTEGER;
{:256}{271:}SAVESTACK:ARRAY[0..SAVESIZE]OF MEMORYWORD;
SAVEPTR:0..SAVESIZE;MAXSAVESTACK:0..SAVESIZE;CURLEVEL:QUARTERWORD;
CURGROUP:GROUPCODE;CURBOUNDARY:0..SAVESIZE;{:271}{286:}MAGSET:INTEGER;
{:286}{297:}CURCMD:EIGHTBITS;CURCHR:HALFWORD;CURCS:HALFWORD;
CURTOK:HALFWORD;
{:297}{301:}INPUTSTACK:ARRAY[0..STACKSIZE]OF INSTATERECOR;
INPUTPTR:0..STACKSIZE;MAXINSTACK:0..STACKSIZE;CURINPUT:INSTATERECOR;
{:301}{304:}INOPEN:0..MAXINOPEN;OPENPARENS:0..MAXINOPEN;
INPUTFILE:ARRAY[1..MAXINOPEN]OF ALPHAFILE;LINE:INTEGER;
LINESTACK:ARRAY[1..MAXINOPEN]OF INTEGER;{:304}{305:}SCANNERSTATU:0..5;
WARNINGINDEX:HALFWORD;DEFREF:HALFWORD;
{:305}{308:}PARAMSTACK:ARRAY[0..PARAMSIZE]OF HALFWORD;
PARAMPTR:0..PARAMSIZE;MAXPARAMSTAC:INTEGER;
{:308}{309:}ALIGNSTATE:INTEGER;{:309}{310:}BASEPTR:0..STACKSIZE;
{:310}{333:}PARLOC:HALFWORD;PARTOKEN:HALFWORD;
{:333}{361:}FORCEEOF:BOOLEAN;{:361}{382:}CURMARK:ARRAY[0..4]OF HALFWORD;
{:382}{387:}LONGSTATE:111..114;
{:387}{388:}PSTACK:ARRAY[0..8]OF HALFWORD;{:388}{410:}CURVAL:INTEGER;
CURVALLEVEL:0..5;{:410}{438:}RADIX:SMALLNUMBER;
{:438}{447:}CURORDER:GLUEORD;
{:447}{480:}READFILE:ARRAY[0..15]OF ALPHAFILE;
READOPEN:ARRAY[0..16]OF 0..2;{:480}{489:}CONDPTR:HALFWORD;IFLIMIT:0..4;
CURIF:SMALLNUMBER;IFLINE:INTEGER;{:489}{493:}SKIPLINE:INTEGER;
{:493}{512:}CURNAME:STRNUMBER;CURAREA:STRNUMBER;CUREXT:STRNUMBER;
{:512}{513:}AREADELIMITE:POOLPOINTER;EXTDELIMITER:POOLPOINTER;
{:513}{520:}TEXFORMATDEF:PACKED ARRAY[1..20]OF CHAR;
{:520}{527:}NAMEINPROGRE:BOOLEAN;JOBNAME:STRNUMBER;LOGOPENED:BOOLEAN;
{:527}{532:}DVIFILE:BYTEFILE;OUTPUTFILENA:STRNUMBER;LOGNAME:STRNUMBER;
{:532}{539:}TFMFILE:BYTEFILE;
{:539}{549:}FONTINFO:ARRAY[FONTINDEX]OF MEMORYWORD;FMEMPTR:FONTINDEX;
FONTPTR:INTERNALFONT;FONTCHECK:ARRAY[INTERNALFONT]OF FOURQUARTERS;
FONTSIZE:ARRAY[INTERNALFONT]OF SCALED;
FONTDSIZE:ARRAY[INTERNALFONT]OF SCALED;
FONTPARAMS:ARRAY[INTERNALFONT]OF FONTINDEX;
FONTNAME:ARRAY[INTERNALFONT]OF STRNUMBER;
FONTAREA:ARRAY[INTERNALFONT]OF STRNUMBER;
FONTBC:ARRAY[INTERNALFONT]OF EIGHTBITS;
FONTEC:ARRAY[INTERNALFONT]OF EIGHTBITS;
FONTGLUE:ARRAY[INTERNALFONT]OF HALFWORD;
FONTUSED:ARRAY[INTERNALFONT]OF BOOLEAN;
HYPHENCHAR:ARRAY[INTERNALFONT]OF INTEGER;
SKEWCHAR:ARRAY[INTERNALFONT]OF INTEGER;
BCHARLABEL:ARRAY[INTERNALFONT]OF FONTINDEX;
FONTBCHAR:ARRAY[INTERNALFONT]OF 0..256;
FONTFALSEBCH:ARRAY[INTERNALFONT]OF 0..256;
{:549}{550:}CHARBASE:ARRAY[INTERNALFONT]OF INTEGER;
WIDTHBASE:ARRAY[INTERNALFONT]OF INTEGER;
HEIGHTBASE:ARRAY[INTERNALFONT]OF INTEGER;
DEPTHBASE:ARRAY[INTERNALFONT]OF INTEGER;
ITALICBASE:ARRAY[INTERNALFONT]OF INTEGER;
LIGKERNBASE:ARRAY[INTERNALFONT]OF INTEGER;
KERNBASE:ARRAY[INTERNALFONT]OF INTEGER;
EXTENBASE:ARRAY[INTERNALFONT]OF INTEGER;
PARAMBASE:ARRAY[INTERNALFONT]OF INTEGER;
{:550}{555:}NULLCHARACTE:FOURQUARTERS;{:555}{592:}TOTALPAGES:INTEGER;
MAXV:SCALED;MAXH:SCALED;MAXPUSH:INTEGER;LASTBOP:INTEGER;
DEADCYCLES:INTEGER;DOINGLEADERS:BOOLEAN;C,F:QUARTERWORD;
RULEHT,RULEDP,RULEWD:SCALED;G:HALFWORD;LQ,LR:INTEGER;
{:592}{595:}DVIBUF:ARRAY[DVIINDEX]OF EIGHTBITS;HALFBUF:DVIINDEX;
DVILIMIT:DVIINDEX;DVIPTR:DVIINDEX;DVIOFFSET:INTEGER;DVIGONE:INTEGER;
{:595}{605:}DOWNPTR,RIGHTPTR:HALFWORD;{:605}{616:}DVIH,DVIV:SCALED;
CURH,CURV:SCALED;DVIF:INTERNALFONT;CURS:INTEGER;
{:616}{646:}TOTALSTRETCH,TOTALSHRINK:ARRAY[GLUEORD]OF SCALED;
LASTBADNESS:INTEGER;{:646}{647:}ADJUSTTAIL:HALFWORD;
{:647}{661:}PACKBEGINLIN:INTEGER;{:661}{684:}EMPTYFIELD:TWOHALVES;
NULLDELIMITE:FOURQUARTERS;{:684}{719:}CURMLIST:HALFWORD;
CURSTYLE:SMALLNUMBER;CURSIZE:SMALLNUMBER;CURMU:SCALED;
MLISTPENALTI:BOOLEAN;{:719}{724:}CURF:INTERNALFONT;CURC:QUARTERWORD;
CURI:FOURQUARTERS;{:724}{764:}MAGICOFFSET:INTEGER;
{:764}{770:}CURALIGN:HALFWORD;CURSPAN:HALFWORD;CURLOOP:HALFWORD;
ALIGNPTR:HALFWORD;CURHEAD,CURTAIL:HALFWORD;{:770}{814:}JUSTBOX:HALFWORD;
{:814}{821:}PASSIVE:HALFWORD;PRINTEDNODE:HALFWORD;PASSNUMBER:HALFWORD;
{:821}{823:}ACTIVEWIDTH:ARRAY[1..6]OF SCALED;
CURACTIVEWID:ARRAY[1..6]OF SCALED;BACKGROUND:ARRAY[1..6]OF SCALED;
BREAKWIDTH:ARRAY[1..6]OF SCALED;{:823}{825:}NOSHRINKERRO:BOOLEAN;
{:825}{828:}CURP:HALFWORD;SECONDPASS:BOOLEAN;FINALPASS:BOOLEAN;
THRESHOLD:INTEGER;{:828}{833:}MINIMALDEMER:ARRAY[0..3]OF INTEGER;
MINIMUMDEMER:INTEGER;BESTPLACE:ARRAY[0..3]OF HALFWORD;
BESTPLLINE:ARRAY[0..3]OF HALFWORD;{:833}{839:}DISCWIDTH:SCALED;
{:839}{847:}EASYLINE:HALFWORD;LASTSPECIALL:HALFWORD;FIRSTWIDTH:SCALED;
SECONDWIDTH:SCALED;FIRSTINDENT:SCALED;SECONDINDENT:SCALED;
{:847}{872:}BESTBET:HALFWORD;FEWESTDEMERI:INTEGER;BESTLINE:HALFWORD;
ACTUALLOOSEN:INTEGER;LINEDIFF:INTEGER;
{:872}{892:}HC:ARRAY[0..65]OF 0..256;HN:0..64;HA,HB:HALFWORD;
HF:INTERNALFONT;HU:ARRAY[0..63]OF 0..256;HYFCHAR:INTEGER;
CURLANG,INITCURLANG:ASCIICODE;LHYF,RHYF,INITLHYF,INITRHYF:INTEGER;
HYFBCHAR:HALFWORD;{:892}{900:}HYF:ARRAY[0..64]OF 0..9;INITLIST:HALFWORD;
INITLIG:BOOLEAN;INITLFT:BOOLEAN;{:900}{905:}HYPHENPASSED:SMALLNUMBER;
{:905}{907:}CURL,CURR:HALFWORD;CURQ:HALFWORD;LIGSTACK:HALFWORD;
LIGATUREPRES:BOOLEAN;LFTHIT,RTHIT:BOOLEAN;
{:907}{921:}TRIE:ARRAY[TRIEPOINTER]OF TWOHALVES;
HYFDISTANCE:ARRAY[1..TRIEOPSIZE]OF SMALLNUMBER;
HYFNUM:ARRAY[1..TRIEOPSIZE]OF SMALLNUMBER;
HYFNEXT:ARRAY[1..TRIEOPSIZE]OF QUARTERWORD;
OPSTART:ARRAY[ASCIICODE]OF 0..TRIEOPSIZE;
{:921}{926:}HYPHWORD:ARRAY[HYPHPOINTER]OF STRNUMBER;
HYPHLIST:ARRAY[HYPHPOINTER]OF HALFWORD;HYPHCOUNT:HYPHPOINTER;
{:926}{943:}TRIEOPHASH:ARRAY[-TRIEOPSIZE..TRIEOPSIZE]OF 0..TRIEOPSIZE;
TRIEUSED:ARRAY[ASCIICODE]OF QUARTERWORD;
TRIEOPLANG:ARRAY[1..TRIEOPSIZE]OF ASCIICODE;
TRIEOPVAL:ARRAY[1..TRIEOPSIZE]OF QUARTERWORD;TRIEOPPTR:0..TRIEOPSIZE;
{:943}{947:}TRIEC:PACKED ARRAY[TRIEPOINTER]OF PACKEDASCIIC;
TRIEO:PACKED ARRAY[TRIEPOINTER]OF QUARTERWORD;
TRIEL:PACKED ARRAY[TRIEPOINTER]OF TRIEPOINTER;
TRIER:PACKED ARRAY[TRIEPOINTER]OF TRIEPOINTER;TRIEPTR:TRIEPOINTER;
TRIEHASH:PACKED ARRAY[TRIEPOINTER]OF TRIEPOINTER;
{:947}{950:}TRIETAKEN:PACKED ARRAY[1..TRIESIZE]OF BOOLEAN;
TRIEMIN:ARRAY[ASCIICODE]OF TRIEPOINTER;TRIEMAX:TRIEPOINTER;
TRIENOTREADY:BOOLEAN;{:950}{971:}BESTHEIGHTPL:SCALED;
{:971}{980:}PAGETAIL:HALFWORD;PAGECONTENTS:0..2;PAGEMAXDEPTH:SCALED;
BESTPAGEBREA:HALFWORD;LEASTPAGECOS:INTEGER;BESTSIZE:SCALED;
{:980}{982:}PAGESOFAR:ARRAY[0..7]OF SCALED;LASTGLUE:HALFWORD;
LASTPENALTY:INTEGER;LASTKERN:SCALED;INSERTPENALT:INTEGER;
{:982}{989:}OUTPUTACTIVE:BOOLEAN;{:989}{1032:}MAINF:INTERNALFONT;
MAINI:FOURQUARTERS;MAINJ:FOURQUARTERS;MAINK:FONTINDEX;MAINP:HALFWORD;
MAINS:INTEGER;BCHAR:HALFWORD;FALSEBCHAR:HALFWORD;CANCELBOUNDA:BOOLEAN;
INSDISC:BOOLEAN;{:1032}{1074:}CURBOX:HALFWORD;
{:1074}{1266:}AFTERTOKEN:HALFWORD;{:1266}{1281:}LONGHELPSEEN:BOOLEAN;
{:1281}{1299:}FORMATIDENT:STRNUMBER;{:1299}{1305:}FMTFILE:WORDFILE;
{:1305}{1331:}READYALREADY:INTEGER;
{:1331}{1342:}WRITEFILE:ARRAY[0..15]OF ALPHAFILE;
WRITEOPEN:ARRAY[0..17]OF BOOLEAN;{:1342}{1345:}WRITELOC:HALFWORD;
{:1345}PROCEDURE CATCHSIGNAL(I:INTEGER);INTERRUPT FORWARD;
PROCEDURE INITIALIZE;VAR{19:}I:INTEGER;{:19}{163:}K:INTEGER;
{:163}{927:}Z:HYPHPOINTER;{:927}BEGIN{8:}{21:}XCHR[32]:=' ';
XCHR[33]:='!';XCHR[34]:='"';XCHR[35]:='#';XCHR[36]:='$';XCHR[37]:='%';
XCHR[38]:='&';XCHR[39]:='''';XCHR[40]:='(';XCHR[41]:=')';XCHR[42]:='*';
XCHR[43]:='+';XCHR[44]:=',';XCHR[45]:='-';XCHR[46]:='.';XCHR[47]:='/';
XCHR[48]:='0';XCHR[49]:='1';XCHR[50]:='2';XCHR[51]:='3';XCHR[52]:='4';
XCHR[53]:='5';XCHR[54]:='6';XCHR[55]:='7';XCHR[56]:='8';XCHR[57]:='9';
XCHR[58]:=':';XCHR[59]:=';';XCHR[60]:='<';XCHR[61]:='=';XCHR[62]:='>';
XCHR[63]:='?';XCHR[64]:='@';XCHR[65]:='A';XCHR[66]:='B';XCHR[67]:='C';
XCHR[68]:='D';XCHR[69]:='E';XCHR[70]:='F';XCHR[71]:='G';XCHR[72]:='H';
XCHR[73]:='I';XCHR[74]:='J';XCHR[75]:='K';XCHR[76]:='L';XCHR[77]:='M';
XCHR[78]:='N';XCHR[79]:='O';XCHR[80]:='P';XCHR[81]:='Q';XCHR[82]:='R';
XCHR[83]:='S';XCHR[84]:='T';XCHR[85]:='U';XCHR[86]:='V';XCHR[87]:='W';
XCHR[88]:='X';XCHR[89]:='Y';XCHR[90]:='Z';XCHR[91]:='[';XCHR[92]:='\';
XCHR[93]:=']';XCHR[94]:='^';XCHR[95]:='_';XCHR[96]:='`';XCHR[97]:='a';
XCHR[98]:='b';XCHR[99]:='c';XCHR[100]:='d';XCHR[101]:='e';
XCHR[102]:='f';XCHR[103]:='g';XCHR[104]:='h';XCHR[105]:='i';
XCHR[106]:='j';XCHR[107]:='k';XCHR[108]:='l';XCHR[109]:='m';
XCHR[110]:='n';XCHR[111]:='o';XCHR[112]:='p';XCHR[113]:='q';
XCHR[114]:='r';XCHR[115]:='s';XCHR[116]:='t';XCHR[117]:='u';
XCHR[118]:='v';XCHR[119]:='w';XCHR[120]:='x';XCHR[121]:='y';
XCHR[122]:='z';XCHR[123]:='{';XCHR[124]:='|';XCHR[125]:='}';
XCHR[126]:='~';{:21}{23:}FOR I:=0 TO 31 DO XCHR[I]:=' ';XCHR[9]:=CHR(9);
XCHR[12]:=CHR(12);FOR I:=127 TO 255 DO XCHR[I]:=' ';
{:23}{24:}FOR I:=0 TO 255 DO XORD[CHR(I)]:=127;
FOR I:=128 TO 255 DO XORD[XCHR[I]]:=I;
FOR I:=0 TO 126 DO XORD[XCHR[I]]:=I;{:24}{74:}INTERACTION:=3;
{:74}{77:}DELETIONSALL:=TRUE;SETBOXALLOWE:=TRUE;ERRORCOUNT:=0;
{:77}{80:}HELPPTR:=0;USEERRHELP:=FALSE;WANTEDIT:=FALSE;
{:80}{97:}INTERRUPT:=0;OKTOINTERRUP:=TRUE;{:97}{166:}{WASMEMEND:=MEMMIN;
WASLOMAX:=MEMMIN;WASHIMIN:=MEMMAX;PANICKING:=FALSE;}
{:166}{215:}NESTPTR:=0;MAXNESTSTACK:=0;CURLIST.MODEFIELD:=1;
CURLIST.HEADFIELD:=29999;CURLIST.TAILFIELD:=29999;
CURLIST.AUXFIELD.INT:=-65536000;CURLIST.MLFIELD:=0;CURLIST.PGFIELD:=0;
SHOWNMODE:=0;{991:}PAGECONTENTS:=0;PAGETAIL:=29998;MEM[29998].HH.RH:=0;
LASTGLUE:=65535;LASTPENALTY:=0;LASTKERN:=0;PAGESOFAR[7]:=0;
PAGEMAXDEPTH:=0{:991};{:215}{254:}FOR K:=5263 TO 6106 DO XEQLEVEL[K]:=1;
{:254}{257:}NONEWCONTROL:=TRUE;HASH[514].LH:=0;HASH[514].RH:=0;
FOR K:=515 TO 2880 DO HASH[K]:=HASH[514];{:257}{272:}SAVEPTR:=0;
CURLEVEL:=1;CURGROUP:=0;CURBOUNDARY:=0;MAXSAVESTACK:=0;
{:272}{287:}MAGSET:=0;{:287}{383:}CURMARK[0]:=0;CURMARK[1]:=0;
CURMARK[2]:=0;CURMARK[3]:=0;CURMARK[4]:=0;{:383}{439:}CURVAL:=0;
CURVALLEVEL:=0;RADIX:=0;CURORDER:=0;
{:439}{481:}FOR K:=0 TO 16 DO READOPEN[K]:=2;{:481}{490:}CONDPTR:=0;
IFLIMIT:=0;CURIF:=0;IFLINE:=0;
{:490}{521:}TEXFORMATDEF:='TeXformats/plain.fmt';
{:521}{551:}FOR K:=0 TO FONTMAX DO FONTUSED[K]:=FALSE;
{:551}{556:}NULLCHARACTE.B0:=0;NULLCHARACTE.B1:=0;NULLCHARACTE.B2:=0;
NULLCHARACTE.B3:=0;{:556}{593:}TOTALPAGES:=0;MAXV:=0;MAXH:=0;MAXPUSH:=0;
LASTBOP:=-1;DOINGLEADERS:=FALSE;DEADCYCLES:=0;CURS:=-1;
{:593}{596:}HALFBUF:=DVIBUFSIZE DIV 2;DVILIMIT:=DVIBUFSIZE;DVIPTR:=0;
DVIOFFSET:=0;DVIGONE:=0;{:596}{606:}DOWNPTR:=0;RIGHTPTR:=0;
{:606}{648:}ADJUSTTAIL:=0;LASTBADNESS:=0;{:648}{662:}PACKBEGINLIN:=0;
{:662}{685:}EMPTYFIELD.RH:=0;EMPTYFIELD.LH:=0;NULLDELIMITE.B0:=0;
NULLDELIMITE.B1:=0;NULLDELIMITE.B2:=0;NULLDELIMITE.B3:=0;
{:685}{771:}ALIGNPTR:=0;CURALIGN:=0;CURSPAN:=0;CURLOOP:=0;CURHEAD:=0;
CURTAIL:=0;{:771}{928:}FOR Z:=0 TO 307 DO BEGIN HYPHWORD[Z]:=0;
HYPHLIST[Z]:=0;END;HYPHCOUNT:=0;{:928}{990:}OUTPUTACTIVE:=FALSE;
INSERTPENALT:=0;{:990}{1033:}LIGATUREPRES:=FALSE;CANCELBOUNDA:=FALSE;
LFTHIT:=FALSE;RTHIT:=FALSE;INSDISC:=FALSE;{:1033}{1267:}AFTERTOKEN:=0;
{:1267}{1282:}LONGHELPSEEN:=FALSE;{:1282}{1300:}FORMATIDENT:=0;
{:1300}{1343:}FOR K:=0 TO 17 DO WRITEOPEN[K]:=FALSE;
{:1343}{1381:}FPSIGNAL(SIGINT,SIGNALHANDLER(CATCHSIGNAL));
IF FPGETERRNO<>0 THEN WRITELN('Could not install signal handler:',
FPGETERRNO);{:1381}{164:}FOR K:=1 TO 19 DO MEM[K].INT:=0;K:=0;
WHILE K<=19 DO BEGIN MEM[K].HH.RH:=1;MEM[K].HH.B0:=0;MEM[K].HH.B1:=0;
K:=K+4;END;MEM[6].INT:=65536;MEM[4].HH.B0:=1;MEM[10].INT:=65536;
MEM[8].HH.B0:=2;MEM[14].INT:=65536;MEM[12].HH.B0:=1;MEM[15].INT:=65536;
MEM[12].HH.B1:=1;MEM[18].INT:=-65536;MEM[16].HH.B0:=1;ROVER:=20;
MEM[ROVER].HH.RH:=65535;MEM[ROVER].HH.LH:=1000;
MEM[ROVER+1].HH.LH:=ROVER;MEM[ROVER+1].HH.RH:=ROVER;
LOMEMMAX:=ROVER+1000;MEM[LOMEMMAX].HH.RH:=0;MEM[LOMEMMAX].HH.LH:=0;
FOR K:=29987 TO 30000 DO MEM[K]:=MEM[LOMEMMAX];
{790:}MEM[29990].HH.LH:=6714;{:790}{797:}MEM[29991].HH.RH:=256;
MEM[29991].HH.LH:=0;{:797}{820:}MEM[29993].HH.B0:=1;
MEM[29994].HH.LH:=65535;MEM[29993].HH.B1:=0;
{:820}{981:}MEM[30000].HH.B1:=255;MEM[30000].HH.B0:=1;
MEM[30000].HH.RH:=30000;{:981}{988:}MEM[29998].HH.B0:=10;
MEM[29998].HH.B1:=0;{:988};AVAIL:=0;MEMEND:=30000;HIMEMMIN:=29987;
VARUSED:=20;DYNUSED:=14;{:164}{222:}EQTB[2881].HH.B0:=101;
EQTB[2881].HH.RH:=0;EQTB[2881].HH.B1:=0;
FOR K:=1 TO 2880 DO EQTB[K]:=EQTB[2881];{:222}{228:}EQTB[2882].HH.RH:=0;
EQTB[2882].HH.B1:=1;EQTB[2882].HH.B0:=117;
FOR K:=2883 TO 3411 DO EQTB[K]:=EQTB[2882];
MEM[0].HH.RH:=MEM[0].HH.RH+530;{:228}{232:}EQTB[3412].HH.RH:=0;
EQTB[3412].HH.B0:=118;EQTB[3412].HH.B1:=1;
FOR K:=3413 TO 3677 DO EQTB[K]:=EQTB[2881];EQTB[3678].HH.RH:=0;
EQTB[3678].HH.B0:=119;EQTB[3678].HH.B1:=1;
FOR K:=3679 TO 3933 DO EQTB[K]:=EQTB[3678];EQTB[3934].HH.RH:=0;
EQTB[3934].HH.B0:=120;EQTB[3934].HH.B1:=1;
FOR K:=3935 TO 3982 DO EQTB[K]:=EQTB[3934];EQTB[3983].HH.RH:=0;
EQTB[3983].HH.B0:=120;EQTB[3983].HH.B1:=1;
FOR K:=3984 TO 5262 DO EQTB[K]:=EQTB[3983];
FOR K:=0 TO 255 DO BEGIN EQTB[3983+K].HH.RH:=12;EQTB[5007+K].HH.RH:=K;
EQTB[4751+K].HH.RH:=1000;END;EQTB[3996].HH.RH:=5;EQTB[4015].HH.RH:=10;
EQTB[4075].HH.RH:=0;EQTB[4020].HH.RH:=14;EQTB[4110].HH.RH:=15;
EQTB[3983].HH.RH:=9;FOR K:=48 TO 57 DO EQTB[5007+K].HH.RH:=K+28672;
FOR K:=65 TO 90 DO BEGIN EQTB[3983+K].HH.RH:=11;
EQTB[3983+K+32].HH.RH:=11;EQTB[5007+K].HH.RH:=K+28928;
EQTB[5007+K+32].HH.RH:=K+28960;EQTB[4239+K].HH.RH:=K+32;
EQTB[4239+K+32].HH.RH:=K+32;EQTB[4495+K].HH.RH:=K;
EQTB[4495+K+32].HH.RH:=K;EQTB[4751+K].HH.RH:=999;END;
{:232}{240:}FOR K:=5263 TO 5573 DO EQTB[K].INT:=0;EQTB[5280].INT:=1000;
EQTB[5264].INT:=10000;EQTB[5304].INT:=1;EQTB[5303].INT:=25;
EQTB[5308].INT:=92;EQTB[5311].INT:=13;
FOR K:=0 TO 255 DO EQTB[5574+K].INT:=-1;EQTB[5620].INT:=0;
{:240}{250:}FOR K:=5830 TO 6106 DO EQTB[K].INT:=0;
{:250}{258:}HASHUSED:=2614;CSCOUNT:=0;EQTB[2623].HH.B0:=116;
HASH[2623].RH:=502;{:258}{552:}FONTPTR:=0;FMEMPTR:=7;FONTNAME[0]:=802;
FONTAREA[0]:=338;HYPHENCHAR[0]:=45;SKEWCHAR[0]:=-1;BCHARLABEL[0]:=0;
FONTBCHAR[0]:=256;FONTFALSEBCH[0]:=256;FONTBC[0]:=1;FONTEC[0]:=0;
FONTSIZE[0]:=0;FONTDSIZE[0]:=0;CHARBASE[0]:=0;WIDTHBASE[0]:=0;
HEIGHTBASE[0]:=0;DEPTHBASE[0]:=0;ITALICBASE[0]:=0;LIGKERNBASE[0]:=0;
KERNBASE[0]:=0;EXTENBASE[0]:=0;FONTGLUE[0]:=0;FONTPARAMS[0]:=7;
PARAMBASE[0]:=-1;FOR K:=0 TO 6 DO FONTINFO[K].INT:=0;
{:552}{946:}FOR K:=-TRIEOPSIZE TO TRIEOPSIZE DO TRIEOPHASH[K]:=0;
FOR K:=0 TO 255 DO TRIEUSED[K]:=0;TRIEOPPTR:=0;
{:946}{951:}TRIENOTREADY:=TRUE;TRIEL[0]:=0;TRIEC[0]:=0;TRIEPTR:=0;
{:951}{1216:}HASH[2614].RH:=1191;{:1216}{1301:}FORMATIDENT:=1258;
{:1301}{1369:}HASH[2622].RH:=1297;EQTB[2622].HH.B1:=1;
EQTB[2622].HH.B0:=113;EQTB[2622].HH.RH:=0;{:1369}{:8}END;
{57:}PROCEDURE PRINTLN;BEGIN CASE SELECTOR OF 19:BEGIN WRITELN(OUTPUT);
WRITELN(LOGFILE);TERMOFFSET:=0;FILEOFFSET:=0;END;
18:BEGIN WRITELN(LOGFILE);FILEOFFSET:=0;END;17:BEGIN WRITELN(OUTPUT);
TERMOFFSET:=0;END;16,20,21:;ELSE WRITELN(WRITEFILE[SELECTOR])END;END;
{:57}{58:}PROCEDURE PRINTCHAR(S:ASCIICODE);LABEL 10;
BEGIN IF{244:}S=EQTB[5312].INT{:244}THEN IF SELECTOR<20 THEN BEGIN
PRINTLN;GOTO 10;END;CASE SELECTOR OF 19:BEGIN WRITE(OUTPUT,XCHR[S]);
WRITE(LOGFILE,XCHR[S]);TERMOFFSET:=TERMOFFSET+1;
FILEOFFSET:=FILEOFFSET+1;
IF TERMOFFSET=MAXPRINTLINE THEN BEGIN WRITELN(OUTPUT);TERMOFFSET:=0;END;
IF FILEOFFSET=MAXPRINTLINE THEN BEGIN WRITELN(LOGFILE);FILEOFFSET:=0;
END;END;18:BEGIN WRITE(LOGFILE,XCHR[S]);FILEOFFSET:=FILEOFFSET+1;
IF FILEOFFSET=MAXPRINTLINE THEN PRINTLN;END;
17:BEGIN WRITE(OUTPUT,XCHR[S]);TERMOFFSET:=TERMOFFSET+1;
IF TERMOFFSET=MAXPRINTLINE THEN PRINTLN;END;16:;
20:IF TALLY<TRICKCOUNT THEN TRICKBUF[TALLY MOD ERRORLINE]:=S;
21:BEGIN IF POOLPTR<POOLSIZE THEN BEGIN STRPOOL[POOLPTR]:=S;
POOLPTR:=POOLPTR+1;END;END;ELSE WRITE(WRITEFILE[SELECTOR],XCHR[S])END;
TALLY:=TALLY+1;10:END;{:58}{59:}PROCEDURE PRINT(S:INTEGER);LABEL 10;
VAR J:POOLPOINTER;NL:INTEGER;
BEGIN IF S>=STRPTR THEN S:=259 ELSE IF S<256 THEN IF S<0 THEN S:=259
ELSE BEGIN IF SELECTOR>20 THEN BEGIN PRINTCHAR(S);GOTO 10;END;
IF({244:}S=EQTB[5312].INT{:244})THEN IF SELECTOR<20 THEN BEGIN PRINTLN;
GOTO 10;END;NL:=EQTB[5312].INT;EQTB[5312].INT:=-1;J:=STRSTART[S];
WHILE J<STRSTART[S+1]DO BEGIN PRINTCHAR(STRPOOL[J]);J:=J+1;END;
EQTB[5312].INT:=NL;GOTO 10;END;J:=STRSTART[S];
WHILE J<STRSTART[S+1]DO BEGIN PRINTCHAR(STRPOOL[J]);J:=J+1;END;10:END;
{:59}{60:}PROCEDURE SLOWPRINT(S:INTEGER);VAR J:POOLPOINTER;
BEGIN IF(S>=STRPTR)OR(S<256)THEN PRINT(S)ELSE BEGIN J:=STRSTART[S];
WHILE J<STRSTART[S+1]DO BEGIN PRINT(STRPOOL[J]);J:=J+1;END;END;END;
{:60}{62:}PROCEDURE PRINTNL(S:STRNUMBER);
BEGIN IF((TERMOFFSET>0)AND(ODD(SELECTOR)))OR((FILEOFFSET>0)AND(SELECTOR
>=18))THEN PRINTLN;PRINT(S);END;
{:62}{63:}PROCEDURE PRINTESC(S:STRNUMBER);VAR C:INTEGER;
BEGIN{243:}C:=EQTB[5308].INT{:243};IF C>=0 THEN IF C<256 THEN PRINT(C);
SLOWPRINT(S);END;{:63}{64:}PROCEDURE PRINTTHEDIGS(K:EIGHTBITS);
BEGIN WHILE K>0 DO BEGIN K:=K-1;
IF DIG[K]<10 THEN PRINTCHAR(48+DIG[K])ELSE PRINTCHAR(55+DIG[K]);END;END;
{:64}{65:}PROCEDURE PRINTINT(N:INTEGER);VAR K:0..23;M:INTEGER;
BEGIN K:=0;IF N<0 THEN BEGIN PRINTCHAR(45);
IF N>-100000000 THEN N:=-N ELSE BEGIN M:=-1-N;N:=M DIV 10;
M:=(M MOD 10)+1;K:=1;IF M<10 THEN DIG[0]:=M ELSE BEGIN DIG[0]:=0;N:=N+1;
END;END;END;REPEAT DIG[K]:=N MOD 10;N:=N DIV 10;K:=K+1;UNTIL N=0;
PRINTTHEDIGS(K);END;{:65}{262:}PROCEDURE PRINTCS(P:INTEGER);
BEGIN IF P<514 THEN IF P>=257 THEN IF P=513 THEN BEGIN PRINTESC(504);
PRINTESC(505);PRINTCHAR(32);END ELSE BEGIN PRINTESC(P-257);
IF EQTB[3983+P-257].HH.RH=11 THEN PRINTCHAR(32);
END ELSE IF P<1 THEN PRINTESC(506)ELSE PRINT(P-1)ELSE IF P>=2881 THEN
PRINTESC(506)ELSE IF(HASH[P].RH<0)OR(HASH[P].RH>=STRPTR)THEN PRINTESC(
507)ELSE BEGIN PRINTESC(HASH[P].RH);PRINTCHAR(32);END;END;
{:262}{263:}PROCEDURE SPRINTCS(P:HALFWORD);
BEGIN IF P<514 THEN IF P<257 THEN PRINT(P-1)ELSE IF P<513 THEN PRINTESC(
P-257)ELSE BEGIN PRINTESC(504);PRINTESC(505);
END ELSE PRINTESC(HASH[P].RH);END;
{:263}{518:}PROCEDURE PRINTFILENAM(N,A,E:INTEGER);BEGIN SLOWPRINT(A);
SLOWPRINT(N);SLOWPRINT(E);END;
{:518}{699:}PROCEDURE PRINTSIZE(S:INTEGER);
BEGIN IF S=0 THEN PRINTESC(412)ELSE IF S=16 THEN PRINTESC(413)ELSE
PRINTESC(414);END;{:699}{1355:}PROCEDURE PRINTWRITEWH(S:STRNUMBER;
P:HALFWORD);BEGIN PRINTESC(S);
IF MEM[P+1].HH.LH<16 THEN PRINTINT(MEM[P+1].HH.LH)ELSE IF MEM[P+1].HH.LH
=16 THEN PRINTCHAR(42)ELSE PRINTCHAR(45);END;
{:1355}{78:}PROCEDURE NORMALIZESEL;FORWARD;PROCEDURE GETTOKEN;FORWARD;
PROCEDURE TERMINPUT;FORWARD;PROCEDURE SHOWCONTEXT;FORWARD;
PROCEDURE BEGINFILEREA;FORWARD;PROCEDURE OPENLOGFILE;FORWARD;
PROCEDURE CLOSEFILESAN;FORWARD;PROCEDURE CLEARFORERRO;FORWARD;
PROCEDURE GIVEERRHELP;FORWARD;{PROCEDURE DEBUGHELP;FORWARD;}
{:78}{81:}PROCEDURE JUMPOUT;BEGIN GOTO 9998;END;
{:81}{82:}PROCEDURE ERROR;LABEL 22,10;VAR C:ASCIICODE;
S1,S2,S3,S4:INTEGER;BEGIN IF HISTORY<2 THEN HISTORY:=2;PRINTCHAR(46);
SHOWCONTEXT;
IF INTERACTION=3 THEN{83:}WHILE TRUE DO BEGIN 22:IF INTERACTION<>3 THEN
GOTO 10;CLEARFORERRO;BEGIN;PRINT(264);TERMINPUT;END;
IF LAST=FIRST THEN GOTO 10;C:=BUFFER[FIRST];IF C>=97 THEN C:=C-32;
{84:}CASE C OF 48,49,50,51,52,53,54,55,56,57:IF DELETIONSALL THEN{88:}
BEGIN S1:=CURTOK;S2:=CURCMD;S3:=CURCHR;S4:=ALIGNSTATE;
ALIGNSTATE:=1000000;OKTOINTERRUP:=FALSE;
IF(LAST>FIRST+1)AND(BUFFER[FIRST+1]>=48)AND(BUFFER[FIRST+1]<=57)THEN C:=
C*10+BUFFER[FIRST+1]-48*11 ELSE C:=C-48;WHILE C>0 DO BEGIN GETTOKEN;
C:=C-1;END;CURTOK:=S1;CURCMD:=S2;CURCHR:=S3;ALIGNSTATE:=S4;
OKTOINTERRUP:=TRUE;BEGIN HELPPTR:=2;HELPLINE[1]:=279;HELPLINE[0]:=280;
END;SHOWCONTEXT;GOTO 22;END{:88};{68:BEGIN DEBUGHELP;GOTO 22;END;}
69:IF BASEPTR>0 THEN IF INPUTSTACK[BASEPTR].NAMEFIELD>=256 THEN BEGIN
PRINTNL(265);SLOWPRINT(INPUTSTACK[BASEPTR].NAMEFIELD);PRINT(266);
PRINTINT(LINE);INTERACTION:=2;WANTEDIT:=TRUE;JUMPOUT;END;
72:{89:}BEGIN IF USEERRHELP THEN BEGIN GIVEERRHELP;USEERRHELP:=FALSE;
END ELSE BEGIN IF HELPPTR=0 THEN BEGIN HELPPTR:=2;HELPLINE[1]:=281;
HELPLINE[0]:=282;END;REPEAT HELPPTR:=HELPPTR-1;PRINT(HELPLINE[HELPPTR]);
PRINTLN;UNTIL HELPPTR=0;END;BEGIN HELPPTR:=4;HELPLINE[3]:=283;
HELPLINE[2]:=282;HELPLINE[1]:=284;HELPLINE[0]:=285;END;GOTO 22;END{:89};
73:{87:}BEGIN BEGINFILEREA;
IF LAST>FIRST+1 THEN BEGIN CURINPUT.LOCFIELD:=FIRST+1;BUFFER[FIRST]:=32;
END ELSE BEGIN BEGIN;PRINT(278);TERMINPUT;END;CURINPUT.LOCFIELD:=FIRST;
END;FIRST:=LAST;CURINPUT.LIMITFIELD:=LAST-1;GOTO 10;END{:87};
81,82,83:{86:}BEGIN ERRORCOUNT:=0;INTERACTION:=0+C-81;PRINT(273);
CASE C OF 81:PRINTESC(274);82:PRINTESC(275);83:PRINTESC(276);END;
PRINT(277);PRINTLN;FLUSH(OUTPUT);IF C=81 THEN SELECTOR:=SELECTOR-1;
GOTO 10;END{:86};88:BEGIN INTERACTION:=2;JUMPOUT;END;ELSE END;
{85:}BEGIN PRINT(267);PRINTNL(268);PRINTNL(269);
IF BASEPTR>0 THEN IF INPUTSTACK[BASEPTR].NAMEFIELD>=256 THEN PRINT(270);
IF DELETIONSALL THEN PRINTNL(271);PRINTNL(272);END{:85}{:84};END{:83};
ERRORCOUNT:=ERRORCOUNT+1;IF ERRORCOUNT=100 THEN BEGIN PRINTNL(263);
HISTORY:=3;JUMPOUT;END;{90:}IF INTERACTION>0 THEN SELECTOR:=SELECTOR-1;
IF USEERRHELP THEN BEGIN PRINTLN;GIVEERRHELP;
END ELSE WHILE HELPPTR>0 DO BEGIN HELPPTR:=HELPPTR-1;
PRINTNL(HELPLINE[HELPPTR]);END;PRINTLN;
IF INTERACTION>0 THEN SELECTOR:=SELECTOR+1;PRINTLN{:90};10:END;
{:82}{93:}PROCEDURE FATALERROR(S:STRNUMBER);BEGIN NORMALIZESEL;
BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(287);END;
BEGIN HELPPTR:=1;HELPLINE[0]:=S;END;
BEGIN IF INTERACTION=3 THEN INTERACTION:=2;IF LOGOPENED THEN ERROR;
{IF INTERACTION>0 THEN DEBUGHELP;}HISTORY:=3;JUMPOUT;END;END;
{:93}{94:}PROCEDURE OVERFLOW(S:STRNUMBER;N:INTEGER);BEGIN NORMALIZESEL;
BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(288);END;PRINT(S);
PRINTCHAR(61);PRINTINT(N);PRINTCHAR(93);BEGIN HELPPTR:=2;
HELPLINE[1]:=289;HELPLINE[0]:=290;END;
BEGIN IF INTERACTION=3 THEN INTERACTION:=2;IF LOGOPENED THEN ERROR;
{IF INTERACTION>0 THEN DEBUGHELP;}HISTORY:=3;JUMPOUT;END;END;
{:94}{95:}PROCEDURE CONFUSION(S:STRNUMBER);BEGIN NORMALIZESEL;
IF HISTORY<2 THEN BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(291);END;PRINT(S);PRINTCHAR(41);BEGIN HELPPTR:=1;HELPLINE[0]:=292;
END;END ELSE BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(293);
END;BEGIN HELPPTR:=2;HELPLINE[1]:=294;HELPLINE[0]:=295;END;END;
BEGIN IF INTERACTION=3 THEN INTERACTION:=2;IF LOGOPENED THEN ERROR;
{IF INTERACTION>0 THEN DEBUGHELP;}HISTORY:=3;JUMPOUT;END;END;
{:95}{1382:}PROCEDURE CATCHSIGNAL;INTERRUPT;BEGIN INTERRUPT:=I;END;
{:1382}{:4}{27:}{$I-}FUNCTION AOPENIN(VAR F:ALPHAFILE):BOOLEAN;
BEGIN IF IORESULT=0 THEN;ASSIGN(F,NAMEOFFILE);RESET(F);
AOPENIN:=IORESULT=0;END;FUNCTION AOPENOUT(VAR F:ALPHAFILE):BOOLEAN;
BEGIN IF IORESULT=0 THEN;ASSIGN(F,NAMEOFFILE);REWRITE(F);
AOPENOUT:=IORESULT=0;END;FUNCTION BOPENIN(VAR F:BYTEFILE):BOOLEAN;
BEGIN IF IORESULT=0 THEN;ASSIGN(F,NAMEOFFILE);RESET(F);
BOPENIN:=IORESULT=0;END;FUNCTION BOPENOUT(VAR F:BYTEFILE):BOOLEAN;
BEGIN IF IORESULT=0 THEN;ASSIGN(F,NAMEOFFILE);REWRITE(F);
BOPENOUT:=IORESULT=0;END;FUNCTION WOPENIN(VAR F:WORDFILE):BOOLEAN;
BEGIN IF IORESULT=0 THEN;ASSIGN(F,NAMEOFFILE);RESET(F);
WOPENIN:=IORESULT=0;END;FUNCTION WOPENOUT(VAR F:WORDFILE):BOOLEAN;
BEGIN IF IORESULT=0 THEN;ASSIGN(F,NAMEOFFILE);REWRITE(F);
WOPENOUT:=IORESULT=0;END;{$I+}
{:27}{28:}PROCEDURE ACLOSE(VAR F:ALPHAFILE);BEGIN CLOSE(F);END;
PROCEDURE BCLOSE(VAR F:BYTEFILE);BEGIN CLOSE(F);END;
PROCEDURE WCLOSE(VAR F:WORDFILE);BEGIN CLOSE(F);END;
{:28}{31:}FUNCTION INPUTLN(VAR F:ALPHAFILE;BYPASSEOLN:BOOLEAN):BOOLEAN;
VAR LASTNONBLANK:0..BUFSIZE;BEGIN LAST:=FIRST;
IF EOF(F)THEN INPUTLN:=FALSE ELSE BEGIN LASTNONBLANK:=FIRST;
WHILE NOT EOLN(F)DO BEGIN IF LAST>=MAXBUFSTACK THEN BEGIN MAXBUFSTACK:=
LAST+1;
IF MAXBUFSTACK=BUFSIZE THEN{35:}IF FORMATIDENT=0 THEN BEGIN WRITELN(
OUTPUT,'Buffer size exceeded!');GOTO 9999;
END ELSE BEGIN CURINPUT.LOCFIELD:=FIRST;CURINPUT.LIMITFIELD:=LAST-1;
OVERFLOW(256,BUFSIZE);END{:35};END;BUFFER[LAST]:=XORD[F^];GET(F);
LAST:=LAST+1;IF BUFFER[LAST-1]<>32 THEN LASTNONBLANK:=LAST;END;
LAST:=LASTNONBLANK;INPUTLN:=TRUE;READLN(F);END;END;
{:31}{36:}PROCEDURE INPUTCOMMAND;VAR ARGC:INTEGER;ARG:SHORTSTRING;
CC:INTEGER;BEGIN LAST:=FIRST;ARGC:=1;
WHILE ARGC<=PARAMCOUNT DO BEGIN CC:=1;ARG:=PARAMSTR(ARGC);ARGC:=ARGC+1;
WHILE CC<=LENGTH(ARG)DO BEGIN IF LAST+1>=BUFSIZE THEN{35:}IF FORMATIDENT
=0 THEN BEGIN WRITELN(OUTPUT,'Buffer size exceeded!');GOTO 9999;
END ELSE BEGIN CURINPUT.LOCFIELD:=FIRST;CURINPUT.LIMITFIELD:=LAST-1;
OVERFLOW(256,BUFSIZE);END{:35};
IF XORD[ARG[CC]]<>127 THEN BUFFER[LAST]:=XORD[ARG[CC]];LAST:=LAST+1;
CC:=CC+1 END;IF(ARGC<=PARAMCOUNT)THEN BEGIN BUFFER[LAST]:=32;
LAST:=LAST+1 END END END;{:36}{37:}FUNCTION INITTERMINAL:BOOLEAN;
LABEL 10;BEGIN;INPUTCOMMAND;CURINPUT.LOCFIELD:=FIRST;
IF CURINPUT.LOCFIELD<LAST THEN BEGIN INITTERMINAL:=TRUE;GOTO 10;END;
WHILE TRUE DO BEGIN WRITE(OUTPUT,'**');
IF NOT INPUTLN(INPUT,TRUE)THEN BEGIN WRITELN(OUTPUT);
INITTERMINAL:=FALSE;GOTO 10;END;CURINPUT.LOCFIELD:=FIRST;
WHILE(CURINPUT.LOCFIELD<LAST)AND(BUFFER[CURINPUT.LOCFIELD]=32)DO
CURINPUT.LOCFIELD:=CURINPUT.LOCFIELD+1;
IF CURINPUT.LOCFIELD<LAST THEN BEGIN INITTERMINAL:=TRUE;GOTO 10;END;
WRITELN(OUTPUT,'Please type the name of your input file or Control-D.');
END;10:END;{:37}{43:}FUNCTION MAKESTRING:STRNUMBER;
BEGIN IF STRPTR=MAXSTRINGS THEN OVERFLOW(258,MAXSTRINGS-INITSTRPTR);
STRPTR:=STRPTR+1;STRSTART[STRPTR]:=POOLPTR;MAKESTRING:=STRPTR-1;END;
{:43}{45:}FUNCTION STREQBUF(S:STRNUMBER;K:INTEGER):BOOLEAN;LABEL 45;
VAR J:POOLPOINTER;RESULT:BOOLEAN;BEGIN J:=STRSTART[S];
WHILE J<STRSTART[S+1]DO BEGIN IF STRPOOL[J]<>BUFFER[K]THEN BEGIN RESULT
:=FALSE;GOTO 45;END;J:=J+1;K:=K+1;END;RESULT:=TRUE;45:STREQBUF:=RESULT;
END;{:45}{46:}FUNCTION STREQSTR(S,T:STRNUMBER):BOOLEAN;LABEL 45;
VAR J,K:POOLPOINTER;RESULT:BOOLEAN;BEGIN RESULT:=FALSE;
IF(STRSTART[S+1]-STRSTART[S])<>(STRSTART[T+1]-STRSTART[T])THEN GOTO 45;
J:=STRSTART[S];K:=STRSTART[T];
WHILE J<STRSTART[S+1]DO BEGIN IF STRPOOL[J]<>STRPOOL[K]THEN GOTO 45;
J:=J+1;K:=K+1;END;RESULT:=TRUE;45:STREQSTR:=RESULT;END;
{:46}{47:}FUNCTION GETSTRINGSST:BOOLEAN;LABEL 30,10;VAR K,L:0..255;
M,N:CHAR;G:STRNUMBER;A:INTEGER;C:BOOLEAN;BEGIN POOLPTR:=0;STRPTR:=0;
STRSTART[0]:=0;
{48:}FOR K:=0 TO 255 DO BEGIN IF({49:}(K<32)OR(K>126){:49})THEN BEGIN
BEGIN STRPOOL[POOLPTR]:=94;POOLPTR:=POOLPTR+1;END;
BEGIN STRPOOL[POOLPTR]:=94;POOLPTR:=POOLPTR+1;END;
IF K<64 THEN BEGIN STRPOOL[POOLPTR]:=K+64;POOLPTR:=POOLPTR+1;
END ELSE IF K<128 THEN BEGIN STRPOOL[POOLPTR]:=K-64;POOLPTR:=POOLPTR+1;
END ELSE BEGIN L:=K DIV 16;IF L<10 THEN BEGIN STRPOOL[POOLPTR]:=L+48;
POOLPTR:=POOLPTR+1;END ELSE BEGIN STRPOOL[POOLPTR]:=L+87;
POOLPTR:=POOLPTR+1;END;L:=K MOD 16;
IF L<10 THEN BEGIN STRPOOL[POOLPTR]:=L+48;POOLPTR:=POOLPTR+1;
END ELSE BEGIN STRPOOL[POOLPTR]:=L+87;POOLPTR:=POOLPTR+1;END;END;
END ELSE BEGIN STRPOOL[POOLPTR]:=K;POOLPTR:=POOLPTR+1;END;G:=MAKESTRING;
END{:48};{51:}NAMEOFFILE:=POOLNAME;
IF AOPENIN(POOLFILE)THEN BEGIN C:=FALSE;
REPEAT{52:}BEGIN IF EOF(POOLFILE)THEN BEGIN;
WRITELN(OUTPUT,'! TEX.POOL has no check sum.');GETSTRINGSST:=FALSE;
GOTO 10;END;READ(POOLFILE,M,N);IF M='*'THEN{53:}BEGIN A:=0;K:=1;
WHILE TRUE DO BEGIN IF(XORD[N]<48)OR(XORD[N]>57)THEN BEGIN;
WRITELN(OUTPUT,'! TEX.POOL check sum doesn''t have nine digits.');
GETSTRINGSST:=FALSE;GOTO 10;END;A:=10*A+XORD[N]-48;IF K=9 THEN GOTO 30;
K:=K+1;READ(POOLFILE,N);END;30:IF A<>305924274 THEN BEGIN;
WRITELN(OUTPUT,'! TeXformats/tex.pool doesn''t match. Not installed?');
GETSTRINGSST:=FALSE;GOTO 10;END;C:=TRUE;
END{:53}ELSE BEGIN IF(XORD[M]<48)OR(XORD[M]>57)OR(XORD[N]<48)OR(XORD[N]>
57)THEN BEGIN;
WRITELN(OUTPUT,'! TEX.POOL line doesn''t begin with two digits.');
GETSTRINGSST:=FALSE;GOTO 10;END;L:=XORD[M]*10+XORD[N]-48*11;
IF POOLPTR+L+STRINGVACANC>POOLSIZE THEN BEGIN;
WRITELN(OUTPUT,'! You have to increase POOLSIZE.');GETSTRINGSST:=FALSE;
GOTO 10;END;
FOR K:=1 TO L DO BEGIN IF EOLN(POOLFILE)THEN M:=' 'ELSE READ(POOLFILE,M)
;BEGIN STRPOOL[POOLPTR]:=XORD[M];POOLPTR:=POOLPTR+1;END;END;
READLN(POOLFILE);G:=MAKESTRING;END;END{:52};UNTIL C;ACLOSE(POOLFILE);
GETSTRINGSST:=TRUE;END ELSE BEGIN;
WRITELN(OUTPUT,'! I can''t read TeXformats/tex.pool.');
GETSTRINGSST:=FALSE;GOTO 10;END{:51};10:END;
{:47}{66:}PROCEDURE PRINTTWO(N:INTEGER);BEGIN N:=ABS(N)MOD 100;
PRINTCHAR(48+(N DIV 10));PRINTCHAR(48+(N MOD 10));END;
{:66}{67:}PROCEDURE PRINTHEX(N:INTEGER);VAR K:0..22;BEGIN K:=0;
PRINTCHAR(34);REPEAT DIG[K]:=N MOD 16;N:=N DIV 16;K:=K+1;UNTIL N=0;
PRINTTHEDIGS(K);END;{:67}{69:}PROCEDURE PRINTROMANIN(N:INTEGER);
LABEL 10;VAR J,K:POOLPOINTER;U,V:NONNEGATIVEI;BEGIN J:=STRSTART[260];
V:=1000;WHILE TRUE DO BEGIN WHILE N>=V DO BEGIN PRINTCHAR(STRPOOL[J]);
N:=N-V;END;IF N<=0 THEN GOTO 10;K:=J+2;U:=V DIV(STRPOOL[K-1]-48);
IF STRPOOL[K-1]=50 THEN BEGIN K:=K+2;U:=U DIV(STRPOOL[K-1]-48);END;
IF N+U>=V THEN BEGIN PRINTCHAR(STRPOOL[K]);N:=N+U;END ELSE BEGIN J:=J+2;
V:=V DIV(STRPOOL[J-1]-48);END;END;10:END;
{:69}{70:}PROCEDURE PRINTCURRENT;VAR J:POOLPOINTER;
BEGIN J:=STRSTART[STRPTR];
WHILE J<POOLPTR DO BEGIN PRINTCHAR(STRPOOL[J]);J:=J+1;END;END;
{:70}{71:}PROCEDURE TERMINPUT;VAR K:0..BUFSIZE;BEGIN FLUSH(OUTPUT);
IF NOT INPUTLN(INPUT,TRUE)THEN FATALERROR(261);TERMOFFSET:=0;
SELECTOR:=SELECTOR-1;
IF LAST<>FIRST THEN FOR K:=FIRST TO LAST-1 DO PRINT(BUFFER[K]);PRINTLN;
SELECTOR:=SELECTOR+1;END;{:71}{91:}PROCEDURE INTERROR(N:INTEGER);
BEGIN PRINT(286);PRINTINT(N);PRINTCHAR(41);ERROR;END;
{:91}{92:}PROCEDURE NORMALIZESEL;
BEGIN IF LOGOPENED THEN SELECTOR:=19 ELSE SELECTOR:=17;
IF JOBNAME=0 THEN OPENLOGFILE;
IF INTERACTION=0 THEN SELECTOR:=SELECTOR-1;END;
{:92}{98:}PROCEDURE PAUSEFORINST;
BEGIN IF OKTOINTERRUP THEN BEGIN INTERACTION:=3;
IF(SELECTOR=18)OR(SELECTOR=16)THEN SELECTOR:=SELECTOR+1;
BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(296);END;
BEGIN HELPPTR:=3;HELPLINE[2]:=297;HELPLINE[1]:=298;HELPLINE[0]:=299;END;
DELETIONSALL:=FALSE;ERROR;DELETIONSALL:=TRUE;INTERRUPT:=0;END;END;
{:98}{100:}FUNCTION HALF(X:INTEGER):INTEGER;
BEGIN IF ODD(X)THEN HALF:=(X+1)DIV 2 ELSE HALF:=X DIV 2;END;
{:100}{102:}FUNCTION ROUNDDECIMAL(K:SMALLNUMBER):SCALED;VAR A:INTEGER;
BEGIN A:=0;WHILE K>0 DO BEGIN K:=K-1;A:=(A+DIG[K]*131072)DIV 10;END;
ROUNDDECIMAL:=(A+1)DIV 2;END;
{:102}{103:}PROCEDURE PRINTSCALED(S:SCALED);VAR DELTA:SCALED;
BEGIN IF S<0 THEN BEGIN PRINTCHAR(45);S:=-S;END;PRINTINT(S DIV 65536);
PRINTCHAR(46);S:=10*(S MOD 65536)+5;DELTA:=10;
REPEAT IF DELTA>65536 THEN S:=S-17232;PRINTCHAR(48+(S DIV 65536));
S:=10*(S MOD 65536);DELTA:=DELTA*10;UNTIL S<=DELTA;END;
{:103}{105:}FUNCTION MULTANDADD(N:INTEGER;X,Y,MAXANSWER:SCALED):SCALED;
BEGIN IF N<0 THEN BEGIN X:=-X;N:=-N;END;
IF N=0 THEN MULTANDADD:=Y ELSE IF((X<=(MAXANSWER-Y)DIV N)AND(-X<=(
MAXANSWER+Y)DIV N))THEN MULTANDADD:=N*X+Y ELSE BEGIN ARITHERROR:=TRUE;
MULTANDADD:=0;END;END;{:105}{106:}FUNCTION XOVERN(X:SCALED;
N:INTEGER):SCALED;VAR NEGATIVE:BOOLEAN;BEGIN NEGATIVE:=FALSE;
IF N=0 THEN BEGIN ARITHERROR:=TRUE;XOVERN:=0;REMAINDER:=X;
END ELSE BEGIN IF N<0 THEN BEGIN X:=-X;N:=-N;NEGATIVE:=TRUE;END;
IF X>=0 THEN BEGIN XOVERN:=X DIV N;REMAINDER:=X MOD N;
END ELSE BEGIN XOVERN:=-((-X)DIV N);REMAINDER:=-((-X)MOD N);END;END;
IF NEGATIVE THEN REMAINDER:=-REMAINDER;END;
{:106}{107:}FUNCTION XNOVERD(X:SCALED;N,D:INTEGER):SCALED;
VAR POSITIVE:BOOLEAN;T,U,V:NONNEGATIVEI;
BEGIN IF X>=0 THEN POSITIVE:=TRUE ELSE BEGIN X:=-X;POSITIVE:=FALSE;END;
T:=(X MOD 32768)*N;U:=(X DIV 32768)*N+(T DIV 32768);
V:=(U MOD D)*32768+(T MOD 32768);
IF U DIV D>=32768 THEN ARITHERROR:=TRUE ELSE U:=32768*(U DIV D)+(V DIV D
);IF POSITIVE THEN BEGIN XNOVERD:=U;REMAINDER:=V MOD D;
END ELSE BEGIN XNOVERD:=-U;REMAINDER:=-(V MOD D);END;END;
{:107}{108:}FUNCTION BADNESS(T,S:SCALED):HALFWORD;VAR R:INTEGER;
BEGIN IF T=0 THEN BADNESS:=0 ELSE IF S<=0 THEN BADNESS:=10000 ELSE BEGIN
IF T<=7230584 THEN R:=(T*297)DIV S ELSE IF S>=1663497 THEN R:=T DIV(S
DIV 297)ELSE R:=T;
IF R>1290 THEN BADNESS:=10000 ELSE BADNESS:=(R*R*R+131072)DIV 262144;
END;END;{:108}{114:}{PROCEDURE PRINTWORD(W:MEMORYWORD);
BEGIN PRINTINT(W.INT);PRINTCHAR(32);PRINTSCALED(W.INT);PRINTCHAR(32);
PRINTSCALED(ROUND(65536*W.GR));PRINTLN;PRINTINT(W.HH.LH);PRINTCHAR(61);
PRINTINT(W.HH.B0);PRINTCHAR(58);PRINTINT(W.HH.B1);PRINTCHAR(59);
PRINTINT(W.HH.RH);PRINTCHAR(32);PRINTINT(W.QQQQ.B0);PRINTCHAR(58);
PRINTINT(W.QQQQ.B1);PRINTCHAR(58);PRINTINT(W.QQQQ.B2);PRINTCHAR(58);
PRINTINT(W.QQQQ.B3);END;}
{:114}{119:}{292:}PROCEDURE SHOWTOKENLIS(P,Q:INTEGER;L:INTEGER);
LABEL 10;VAR M,C:INTEGER;MATCHCHR:ASCIICODE;N:ASCIICODE;
BEGIN MATCHCHR:=35;N:=48;TALLY:=0;
WHILE(P<>0)AND(TALLY<L)DO BEGIN IF P=Q THEN{320:}BEGIN FIRSTCOUNT:=TALLY
;TRICKCOUNT:=TALLY+1+ERRORLINE-HALFERRORLIN;
IF TRICKCOUNT<ERRORLINE THEN TRICKCOUNT:=ERRORLINE;END{:320};
{293:}IF(P<HIMEMMIN)OR(P>MEMEND)THEN BEGIN PRINTESC(309);GOTO 10;END;
IF MEM[P].HH.LH>=4095 THEN PRINTCS(MEM[P].HH.LH-4095)ELSE BEGIN M:=MEM[P
].HH.LH DIV 256;C:=MEM[P].HH.LH MOD 256;
IF MEM[P].HH.LH<0 THEN PRINTESC(555)ELSE{294:}CASE M OF 1,2,3,4,7,8,10,
11,12:PRINT(C);6:BEGIN PRINT(C);PRINT(C);END;5:BEGIN PRINT(MATCHCHR);
IF C<=9 THEN PRINTCHAR(C+48)ELSE BEGIN PRINTCHAR(33);GOTO 10;END;END;
13:BEGIN MATCHCHR:=C;PRINT(C);N:=N+1;PRINTCHAR(N);IF N>57 THEN GOTO 10;
END;14:PRINT(556);ELSE PRINTESC(555)END{:294};END{:293};P:=MEM[P].HH.RH;
END;IF P<>0 THEN PRINTESC(554);10:END;{:292}{306:}PROCEDURE RUNAWAY;
VAR P:HALFWORD;BEGIN IF SCANNERSTATU>1 THEN BEGIN PRINTNL(569);
CASE SCANNERSTATU OF 2:BEGIN PRINT(570);P:=DEFREF;END;
3:BEGIN PRINT(571);P:=29997;END;4:BEGIN PRINT(572);P:=29996;END;
5:BEGIN PRINT(573);P:=DEFREF;END;END;PRINTCHAR(63);PRINTLN;
SHOWTOKENLIS(MEM[P].HH.RH,0,ERRORLINE-10);END;END;
{:306}{:119}{120:}FUNCTION GETAVAIL:HALFWORD;VAR P:HALFWORD;
BEGIN P:=AVAIL;
IF P<>0 THEN AVAIL:=MEM[AVAIL].HH.RH ELSE IF MEMEND<MEMMAX THEN BEGIN
MEMEND:=MEMEND+1;P:=MEMEND;END ELSE BEGIN HIMEMMIN:=HIMEMMIN-1;
P:=HIMEMMIN;IF HIMEMMIN<=LOMEMMAX THEN BEGIN RUNAWAY;
OVERFLOW(300,MEMMAX+1-MEMMIN);END;END;MEM[P].HH.RH:=0;
DYNUSED:=DYNUSED+1;GETAVAIL:=P;END;
{:120}{123:}PROCEDURE FLUSHLIST(P:HALFWORD);VAR Q,R:HALFWORD;
BEGIN IF P<>0 THEN BEGIN R:=P;REPEAT Q:=R;R:=MEM[R].HH.RH;
DYNUSED:=DYNUSED-1;UNTIL R=0;MEM[Q].HH.RH:=AVAIL;AVAIL:=P;END;END;
{:123}{125:}FUNCTION GETNODE(S:INTEGER):HALFWORD;LABEL 40,10,20;
VAR P:HALFWORD;Q:HALFWORD;R:INTEGER;T:INTEGER;BEGIN 20:P:=ROVER;
REPEAT{127:}Q:=P+MEM[P].HH.LH;
WHILE(MEM[Q].HH.RH=65535)DO BEGIN T:=MEM[Q+1].HH.RH;
IF Q=ROVER THEN ROVER:=T;MEM[T+1].HH.LH:=MEM[Q+1].HH.LH;
MEM[MEM[Q+1].HH.LH+1].HH.RH:=T;Q:=Q+MEM[Q].HH.LH;END;R:=Q-S;
IF R>P+1 THEN{128:}BEGIN MEM[P].HH.LH:=R-P;ROVER:=P;GOTO 40;END{:128};
IF R=P THEN IF MEM[P+1].HH.RH<>P THEN{129:}BEGIN ROVER:=MEM[P+1].HH.RH;
T:=MEM[P+1].HH.LH;MEM[ROVER+1].HH.LH:=T;MEM[T+1].HH.RH:=ROVER;GOTO 40;
END{:129};MEM[P].HH.LH:=Q-P{:127};P:=MEM[P+1].HH.RH;UNTIL P=ROVER;
IF S=1073741824 THEN BEGIN GETNODE:=65535;GOTO 10;END;
IF LOMEMMAX+2<HIMEMMIN THEN IF LOMEMMAX+2<=65535 THEN{126:}BEGIN IF
HIMEMMIN-LOMEMMAX>=1998 THEN T:=LOMEMMAX+1000 ELSE T:=LOMEMMAX+1+(
HIMEMMIN-LOMEMMAX)DIV 2;P:=MEM[ROVER+1].HH.LH;Q:=LOMEMMAX;
MEM[P+1].HH.RH:=Q;MEM[ROVER+1].HH.LH:=Q;IF T>65535 THEN T:=65535;
MEM[Q+1].HH.RH:=ROVER;MEM[Q+1].HH.LH:=P;MEM[Q].HH.RH:=65535;
MEM[Q].HH.LH:=T-LOMEMMAX;LOMEMMAX:=T;MEM[LOMEMMAX].HH.RH:=0;
MEM[LOMEMMAX].HH.LH:=0;ROVER:=Q;GOTO 20;END{:126};
OVERFLOW(300,MEMMAX+1-MEMMIN);40:MEM[R].HH.RH:=0;VARUSED:=VARUSED+S;
GETNODE:=R;10:END;{:125}{130:}PROCEDURE FREENODE(P:HALFWORD;S:HALFWORD);
VAR Q:HALFWORD;BEGIN MEM[P].HH.LH:=S;MEM[P].HH.RH:=65535;
Q:=MEM[ROVER+1].HH.LH;MEM[P+1].HH.LH:=Q;MEM[P+1].HH.RH:=ROVER;
MEM[ROVER+1].HH.LH:=P;MEM[Q+1].HH.RH:=P;VARUSED:=VARUSED-S;END;
{:130}{131:}PROCEDURE SORTAVAIL;VAR P,Q,R:HALFWORD;OLDROVER:HALFWORD;
BEGIN P:=GETNODE(1073741824);P:=MEM[ROVER+1].HH.RH;
MEM[ROVER+1].HH.RH:=65535;OLDROVER:=ROVER;
WHILE P<>OLDROVER DO{132:}IF P<ROVER THEN BEGIN Q:=P;P:=MEM[Q+1].HH.RH;
MEM[Q+1].HH.RH:=ROVER;ROVER:=Q;END ELSE BEGIN Q:=ROVER;
WHILE MEM[Q+1].HH.RH<P DO Q:=MEM[Q+1].HH.RH;R:=MEM[P+1].HH.RH;
MEM[P+1].HH.RH:=MEM[Q+1].HH.RH;MEM[Q+1].HH.RH:=P;P:=R;END{:132};
P:=ROVER;
WHILE MEM[P+1].HH.RH<>65535 DO BEGIN MEM[MEM[P+1].HH.RH+1].HH.LH:=P;
P:=MEM[P+1].HH.RH;END;MEM[P+1].HH.RH:=ROVER;MEM[ROVER+1].HH.LH:=P;END;
{:131}{136:}FUNCTION NEWNULLBOX:HALFWORD;VAR P:HALFWORD;
BEGIN P:=GETNODE(7);MEM[P].HH.B0:=0;MEM[P].HH.B1:=0;MEM[P+1].INT:=0;
MEM[P+2].INT:=0;MEM[P+3].INT:=0;MEM[P+4].INT:=0;MEM[P+5].HH.RH:=0;
MEM[P+5].HH.B0:=0;MEM[P+5].HH.B1:=0;MEM[P+6].GR:=0.0;NEWNULLBOX:=P;END;
{:136}{139:}FUNCTION NEWRULE:HALFWORD;VAR P:HALFWORD;
BEGIN P:=GETNODE(4);MEM[P].HH.B0:=2;MEM[P].HH.B1:=0;
MEM[P+1].INT:=-1073741824;MEM[P+2].INT:=-1073741824;
MEM[P+3].INT:=-1073741824;NEWRULE:=P;END;
{:139}{144:}FUNCTION NEWLIGATURE(F,C:QUARTERWORD;Q:HALFWORD):HALFWORD;
VAR P:HALFWORD;BEGIN P:=GETNODE(2);MEM[P].HH.B0:=6;MEM[P+1].HH.B0:=F;
MEM[P+1].HH.B1:=C;MEM[P+1].HH.RH:=Q;MEM[P].HH.B1:=0;NEWLIGATURE:=P;END;
FUNCTION NEWLIGITEM(C:QUARTERWORD):HALFWORD;VAR P:HALFWORD;
BEGIN P:=GETNODE(2);MEM[P].HH.B1:=C;MEM[P+1].HH.RH:=0;NEWLIGITEM:=P;END;
{:144}{145:}FUNCTION NEWDISC:HALFWORD;VAR P:HALFWORD;
BEGIN P:=GETNODE(2);MEM[P].HH.B0:=7;MEM[P].HH.B1:=0;MEM[P+1].HH.LH:=0;
MEM[P+1].HH.RH:=0;NEWDISC:=P;END;{:145}{147:}FUNCTION NEWMATH(W:SCALED;
S:SMALLNUMBER):HALFWORD;VAR P:HALFWORD;BEGIN P:=GETNODE(2);
MEM[P].HH.B0:=9;MEM[P].HH.B1:=S;MEM[P+1].INT:=W;NEWMATH:=P;END;
{:147}{151:}FUNCTION NEWSPEC(P:HALFWORD):HALFWORD;VAR Q:HALFWORD;
BEGIN Q:=GETNODE(4);MEM[Q]:=MEM[P];MEM[Q].HH.RH:=0;
MEM[Q+1].INT:=MEM[P+1].INT;MEM[Q+2].INT:=MEM[P+2].INT;
MEM[Q+3].INT:=MEM[P+3].INT;NEWSPEC:=Q;END;
{:151}{152:}FUNCTION NEWPARAMGLUE(N:SMALLNUMBER):HALFWORD;
VAR P:HALFWORD;Q:HALFWORD;BEGIN P:=GETNODE(2);MEM[P].HH.B0:=10;
MEM[P].HH.B1:=N+1;MEM[P+1].HH.RH:=0;Q:={224:}EQTB[2882+N].HH.RH{:224};
MEM[P+1].HH.LH:=Q;MEM[Q].HH.RH:=MEM[Q].HH.RH+1;NEWPARAMGLUE:=P;END;
{:152}{153:}FUNCTION NEWGLUE(Q:HALFWORD):HALFWORD;VAR P:HALFWORD;
BEGIN P:=GETNODE(2);MEM[P].HH.B0:=10;MEM[P].HH.B1:=0;MEM[P+1].HH.RH:=0;
MEM[P+1].HH.LH:=Q;MEM[Q].HH.RH:=MEM[Q].HH.RH+1;NEWGLUE:=P;END;
{:153}{154:}FUNCTION NEWSKIPPARAM(N:SMALLNUMBER):HALFWORD;
VAR P:HALFWORD;BEGIN TEMPPTR:=NEWSPEC({224:}EQTB[2882+N].HH.RH{:224});
P:=NEWGLUE(TEMPPTR);MEM[TEMPPTR].HH.RH:=0;MEM[P].HH.B1:=N+1;
NEWSKIPPARAM:=P;END;{:154}{156:}FUNCTION NEWKERN(W:SCALED):HALFWORD;
VAR P:HALFWORD;BEGIN P:=GETNODE(2);MEM[P].HH.B0:=11;MEM[P].HH.B1:=0;
MEM[P+1].INT:=W;NEWKERN:=P;END;
{:156}{158:}FUNCTION NEWPENALTY(M:INTEGER):HALFWORD;VAR P:HALFWORD;
BEGIN P:=GETNODE(2);MEM[P].HH.B0:=12;MEM[P].HH.B1:=0;MEM[P+1].INT:=M;
NEWPENALTY:=P;END;{:158}{167:}{PROCEDURE CHECKMEM(PRINTLOCS:BOOLEAN);
LABEL 31,32;VAR P,Q:HALFWORD;CLOBBERED:BOOLEAN;
BEGIN FOR P:=MEMMIN TO LOMEMMAX DO FREE[P]:=FALSE;
FOR P:=HIMEMMIN TO MEMEND DO FREE[P]:=FALSE;[168:]P:=AVAIL;Q:=0;
CLOBBERED:=FALSE;
WHILE P<>0 DO BEGIN IF(P>MEMEND)OR(P<HIMEMMIN)THEN CLOBBERED:=TRUE ELSE
IF FREE[P]THEN CLOBBERED:=TRUE;IF CLOBBERED THEN BEGIN PRINTNL(301);
PRINTINT(Q);GOTO 31;END;FREE[P]:=TRUE;Q:=P;P:=MEM[Q].HH.RH;END;
31:[:168];[169:]P:=ROVER;Q:=0;CLOBBERED:=FALSE;
REPEAT IF(P>=LOMEMMAX)OR(P<MEMMIN)THEN CLOBBERED:=TRUE ELSE IF(MEM[P+1].
HH.RH>=LOMEMMAX)OR(MEM[P+1].HH.RH<MEMMIN)THEN CLOBBERED:=TRUE ELSE IF
NOT((MEM[P].HH.RH=65535))OR(MEM[P].HH.LH<2)OR(P+MEM[P].HH.LH>LOMEMMAX)OR
(MEM[MEM[P+1].HH.RH+1].HH.LH<>P)THEN CLOBBERED:=TRUE;
IF CLOBBERED THEN BEGIN PRINTNL(302);PRINTINT(Q);GOTO 32;END;
FOR Q:=P TO P+MEM[P].HH.LH-1 DO BEGIN IF FREE[Q]THEN BEGIN PRINTNL(303);
PRINTINT(Q);GOTO 32;END;FREE[Q]:=TRUE;END;Q:=P;P:=MEM[P+1].HH.RH;
UNTIL P=ROVER;32:[:169];[170:]P:=MEMMIN;
WHILE P<=LOMEMMAX DO BEGIN IF(MEM[P].HH.RH=65535)THEN BEGIN PRINTNL(304)
;PRINTINT(P);END;WHILE(P<=LOMEMMAX)AND NOT FREE[P]DO P:=P+1;
WHILE(P<=LOMEMMAX)AND FREE[P]DO P:=P+1;END[:170];
IF PRINTLOCS THEN[171:]BEGIN PRINTNL(305);
FOR P:=MEMMIN TO LOMEMMAX DO IF NOT FREE[P]AND((P>WASLOMAX)OR WASFREE[P]
)THEN BEGIN PRINTCHAR(32);PRINTINT(P);END;
FOR P:=HIMEMMIN TO MEMEND DO IF NOT FREE[P]AND((P<WASHIMIN)OR(P>
WASMEMEND)OR WASFREE[P])THEN BEGIN PRINTCHAR(32);PRINTINT(P);END;
END[:171];FOR P:=MEMMIN TO LOMEMMAX DO WASFREE[P]:=FREE[P];
FOR P:=HIMEMMIN TO MEMEND DO WASFREE[P]:=FREE[P];WASMEMEND:=MEMEND;
WASLOMAX:=LOMEMMAX;WASHIMIN:=HIMEMMIN;END;}
{:167}{172:}{PROCEDURE SEARCHMEM(P:HALFWORD);VAR Q:INTEGER;
BEGIN FOR Q:=MEMMIN TO LOMEMMAX DO BEGIN IF MEM[Q].HH.RH=P THEN BEGIN
PRINTNL(306);PRINTINT(Q);PRINTCHAR(41);END;
IF MEM[Q].HH.LH=P THEN BEGIN PRINTNL(307);PRINTINT(Q);PRINTCHAR(41);END;
END;
FOR Q:=HIMEMMIN TO MEMEND DO BEGIN IF MEM[Q].HH.RH=P THEN BEGIN PRINTNL(
306);PRINTINT(Q);PRINTCHAR(41);END;
IF MEM[Q].HH.LH=P THEN BEGIN PRINTNL(307);PRINTINT(Q);PRINTCHAR(41);END;
END;
[255:]FOR Q:=1 TO 3933 DO BEGIN IF EQTB[Q].HH.RH=P THEN BEGIN PRINTNL(
501);PRINTINT(Q);PRINTCHAR(41);END;END[:255];
[285:]IF SAVEPTR>0 THEN FOR Q:=0 TO SAVEPTR-1 DO BEGIN IF SAVESTACK[Q].
HH.RH=P THEN BEGIN PRINTNL(546);PRINTINT(Q);PRINTCHAR(41);END;END[:285];
[933:]FOR Q:=0 TO 307 DO BEGIN IF HYPHLIST[Q]=P THEN BEGIN PRINTNL(941);
PRINTINT(Q);PRINTCHAR(41);END;END[:933];END;}
{:172}{174:}PROCEDURE SHORTDISPLAY(P:INTEGER);VAR N:INTEGER;
BEGIN WHILE P>MEMMIN DO BEGIN IF(P>=HIMEMMIN)THEN BEGIN IF P<=MEMEND
THEN BEGIN IF MEM[P].HH.B0<>FONTINSHORTD THEN BEGIN IF(MEM[P].HH.B0<0)OR
(MEM[P].HH.B0>FONTMAX)THEN PRINTCHAR(42)ELSE{267:}PRINTESC(HASH[2624+MEM
[P].HH.B0].RH){:267};PRINTCHAR(32);FONTINSHORTD:=MEM[P].HH.B0;END;
PRINT(MEM[P].HH.B1);END;
END ELSE{175:}CASE MEM[P].HH.B0 OF 0,1,3,8,4,5,13:PRINT(308);
2:PRINTCHAR(124);10:IF MEM[P+1].HH.LH<>0 THEN PRINTCHAR(32);
9:PRINTCHAR(36);6:SHORTDISPLAY(MEM[P+1].HH.RH);
7:BEGIN SHORTDISPLAY(MEM[P+1].HH.LH);SHORTDISPLAY(MEM[P+1].HH.RH);
N:=MEM[P].HH.B1;
WHILE N>0 DO BEGIN IF MEM[P].HH.RH<>0 THEN P:=MEM[P].HH.RH;N:=N-1;END;
END;ELSE END{:175};P:=MEM[P].HH.RH;END;END;
{:174}{176:}PROCEDURE PRINTFONTAND(P:INTEGER);
BEGIN IF P>MEMEND THEN PRINTESC(309)ELSE BEGIN IF(MEM[P].HH.B0<0)OR(MEM[
P].HH.B0>FONTMAX)THEN PRINTCHAR(42)ELSE{267:}PRINTESC(HASH[2624+MEM[P].
HH.B0].RH){:267};PRINTCHAR(32);PRINT(MEM[P].HH.B1);END;END;
PROCEDURE PRINTMARK(P:INTEGER);BEGIN PRINTCHAR(123);
IF(P<HIMEMMIN)OR(P>MEMEND)THEN PRINTESC(309)ELSE SHOWTOKENLIS(MEM[P].HH.
RH,0,MAXPRINTLINE-10);PRINTCHAR(125);END;
PROCEDURE PRINTRULEDIM(D:SCALED);
BEGIN IF(D=-1073741824)THEN PRINTCHAR(42)ELSE PRINTSCALED(D);END;
{:176}{177:}PROCEDURE PRINTGLUE(D:SCALED;ORDER:INTEGER;S:STRNUMBER);
BEGIN PRINTSCALED(D);
IF(ORDER<0)OR(ORDER>3)THEN PRINT(310)ELSE IF ORDER>0 THEN BEGIN PRINT(
311);WHILE ORDER>1 DO BEGIN PRINTCHAR(108);ORDER:=ORDER-1;END;
END ELSE IF S<>0 THEN PRINT(S);END;
{:177}{178:}PROCEDURE PRINTSPEC(P:INTEGER;S:STRNUMBER);
BEGIN IF(P<MEMMIN)OR(P>=LOMEMMAX)THEN PRINTCHAR(42)ELSE BEGIN
PRINTSCALED(MEM[P+1].INT);IF S<>0 THEN PRINT(S);
IF MEM[P+2].INT<>0 THEN BEGIN PRINT(312);
PRINTGLUE(MEM[P+2].INT,MEM[P].HH.B0,S);END;
IF MEM[P+3].INT<>0 THEN BEGIN PRINT(313);
PRINTGLUE(MEM[P+3].INT,MEM[P].HH.B1,S);END;END;END;
{:178}{179:}{691:}PROCEDURE PRINTFAMANDC(P:HALFWORD);
BEGIN PRINTESC(464);PRINTINT(MEM[P].HH.B0);PRINTCHAR(32);
PRINT(MEM[P].HH.B1);END;PROCEDURE PRINTDELIMIT(P:HALFWORD);
VAR A:INTEGER;BEGIN A:=MEM[P].QQQQ.B0*256+MEM[P].QQQQ.B1;
A:=A*4096+MEM[P].QQQQ.B2*256+MEM[P].QQQQ.B3;
IF A<0 THEN PRINTINT(A)ELSE PRINTHEX(A);END;
{:691}{692:}PROCEDURE SHOWINFO;FORWARD;
PROCEDURE PRINTSUBSIDI(P:HALFWORD;C:ASCIICODE);
BEGIN IF(POOLPTR-STRSTART[STRPTR])>=DEPTHTHRESHO THEN BEGIN IF MEM[P].HH
.RH<>0 THEN PRINT(314);END ELSE BEGIN BEGIN STRPOOL[POOLPTR]:=C;
POOLPTR:=POOLPTR+1;END;TEMPPTR:=P;CASE MEM[P].HH.RH OF 1:BEGIN PRINTLN;
PRINTCURRENT;PRINTFAMANDC(P);END;2:SHOWINFO;
3:IF MEM[P].HH.LH=0 THEN BEGIN PRINTLN;PRINTCURRENT;PRINT(861);
END ELSE SHOWINFO;ELSE END;POOLPTR:=POOLPTR-1;END;END;
{:692}{694:}PROCEDURE PRINTSTYLE(C:INTEGER);
BEGIN CASE C DIV 2 OF 0:PRINTESC(862);1:PRINTESC(863);2:PRINTESC(864);
3:PRINTESC(865);ELSE PRINT(866)END;END;
{:694}{225:}PROCEDURE PRINTSKIPPAR(N:INTEGER);
BEGIN CASE N OF 0:PRINTESC(376);1:PRINTESC(377);2:PRINTESC(378);
3:PRINTESC(379);4:PRINTESC(380);5:PRINTESC(381);6:PRINTESC(382);
7:PRINTESC(383);8:PRINTESC(384);9:PRINTESC(385);10:PRINTESC(386);
11:PRINTESC(387);12:PRINTESC(388);13:PRINTESC(389);14:PRINTESC(390);
15:PRINTESC(391);16:PRINTESC(392);17:PRINTESC(393);ELSE PRINT(394)END;
END;{:225}{:179}{182:}PROCEDURE SHOWNODELIST(P:INTEGER);LABEL 10;
VAR N:INTEGER;G:REAL;
BEGIN IF(POOLPTR-STRSTART[STRPTR])>DEPTHTHRESHO THEN BEGIN IF P>0 THEN
PRINT(314);GOTO 10;END;N:=0;WHILE P>MEMMIN DO BEGIN PRINTLN;
PRINTCURRENT;IF P>MEMEND THEN BEGIN PRINT(315);GOTO 10;END;N:=N+1;
IF N>BREADTHMAX THEN BEGIN PRINT(316);GOTO 10;END;
{183:}IF(P>=HIMEMMIN)THEN PRINTFONTAND(P)ELSE CASE MEM[P].HH.B0 OF 0,1,
13:{184:}BEGIN IF MEM[P].HH.B0=0 THEN PRINTESC(104)ELSE IF MEM[P].HH.B0=
1 THEN PRINTESC(118)ELSE PRINTESC(318);PRINT(319);
PRINTSCALED(MEM[P+3].INT);PRINTCHAR(43);PRINTSCALED(MEM[P+2].INT);
PRINT(320);PRINTSCALED(MEM[P+1].INT);
IF MEM[P].HH.B0=13 THEN{185:}BEGIN IF MEM[P].HH.B1<>0 THEN BEGIN PRINT(
286);PRINTINT(MEM[P].HH.B1+1);PRINT(322);END;
IF MEM[P+6].INT<>0 THEN BEGIN PRINT(323);
PRINTGLUE(MEM[P+6].INT,MEM[P+5].HH.B1,0);END;
IF MEM[P+4].INT<>0 THEN BEGIN PRINT(324);
PRINTGLUE(MEM[P+4].INT,MEM[P+5].HH.B0,0);END;
END{:185}ELSE BEGIN{186:}G:=MEM[P+6].GR;
IF(G<>0.0)AND(MEM[P+5].HH.B0<>0)THEN BEGIN PRINT(325);
IF MEM[P+5].HH.B0=2 THEN PRINT(326);
IF ABS(MEM[P+6].INT)<1048576 THEN PRINT(327)ELSE IF ABS(G)>20000.0 THEN
BEGIN IF G>0.0 THEN PRINTCHAR(62)ELSE PRINT(328);
PRINTGLUE(20000*65536,MEM[P+5].HH.B1,0);
END ELSE PRINTGLUE(ROUND(65536*G),MEM[P+5].HH.B1,0);END{:186};
IF MEM[P+4].INT<>0 THEN BEGIN PRINT(321);PRINTSCALED(MEM[P+4].INT);END;
END;BEGIN BEGIN STRPOOL[POOLPTR]:=46;POOLPTR:=POOLPTR+1;END;
SHOWNODELIST(MEM[P+5].HH.RH);POOLPTR:=POOLPTR-1;END;END{:184};
2:{187:}BEGIN PRINTESC(329);PRINTRULEDIM(MEM[P+3].INT);PRINTCHAR(43);
PRINTRULEDIM(MEM[P+2].INT);PRINT(320);PRINTRULEDIM(MEM[P+1].INT);
END{:187};3:{188:}BEGIN PRINTESC(330);PRINTINT(MEM[P].HH.B1);PRINT(331);
PRINTSCALED(MEM[P+3].INT);PRINT(332);PRINTSPEC(MEM[P+4].HH.RH,0);
PRINTCHAR(44);PRINTSCALED(MEM[P+2].INT);PRINT(333);
PRINTINT(MEM[P+1].INT);BEGIN BEGIN STRPOOL[POOLPTR]:=46;
POOLPTR:=POOLPTR+1;END;SHOWNODELIST(MEM[P+4].HH.LH);POOLPTR:=POOLPTR-1;
END;END{:188};
8:{1356:}CASE MEM[P].HH.B1 OF 0:BEGIN PRINTWRITEWH(1286,P);
PRINTCHAR(61);
PRINTFILENAM(MEM[P+1].HH.RH,MEM[P+2].HH.LH,MEM[P+2].HH.RH);END;
1:BEGIN PRINTWRITEWH(594,P);PRINTMARK(MEM[P+1].HH.RH);END;
2:PRINTWRITEWH(1287,P);3:BEGIN PRINTESC(1288);PRINTMARK(MEM[P+1].HH.RH);
END;4:BEGIN PRINTESC(1290);PRINTINT(MEM[P+1].HH.RH);PRINT(1293);
PRINTINT(MEM[P+1].HH.B0);PRINTCHAR(44);PRINTINT(MEM[P+1].HH.B1);
PRINTCHAR(41);END;ELSE PRINT(1294)END{:1356};
10:{189:}IF MEM[P].HH.B1>=100 THEN{190:}BEGIN PRINTESC(338);
IF MEM[P].HH.B1=101 THEN PRINTCHAR(99)ELSE IF MEM[P].HH.B1=102 THEN
PRINTCHAR(120);PRINT(339);PRINTSPEC(MEM[P+1].HH.LH,0);
BEGIN BEGIN STRPOOL[POOLPTR]:=46;POOLPTR:=POOLPTR+1;END;
SHOWNODELIST(MEM[P+1].HH.RH);POOLPTR:=POOLPTR-1;END;
END{:190}ELSE BEGIN PRINTESC(334);
IF MEM[P].HH.B1<>0 THEN BEGIN PRINTCHAR(40);
IF MEM[P].HH.B1<98 THEN PRINTSKIPPAR(MEM[P].HH.B1-1)ELSE IF MEM[P].HH.B1
=98 THEN PRINTESC(335)ELSE PRINTESC(336);PRINTCHAR(41);END;
IF MEM[P].HH.B1<>98 THEN BEGIN PRINTCHAR(32);
IF MEM[P].HH.B1<98 THEN PRINTSPEC(MEM[P+1].HH.LH,0)ELSE PRINTSPEC(MEM[P
+1].HH.LH,337);END;END{:189};
11:{191:}IF MEM[P].HH.B1<>99 THEN BEGIN PRINTESC(340);
IF MEM[P].HH.B1<>0 THEN PRINTCHAR(32);PRINTSCALED(MEM[P+1].INT);
IF MEM[P].HH.B1=2 THEN PRINT(341);END ELSE BEGIN PRINTESC(342);
PRINTSCALED(MEM[P+1].INT);PRINT(337);END{:191};
9:{192:}BEGIN PRINTESC(343);
IF MEM[P].HH.B1=0 THEN PRINT(344)ELSE PRINT(345);
IF MEM[P+1].INT<>0 THEN BEGIN PRINT(346);PRINTSCALED(MEM[P+1].INT);END;
END{:192};6:{193:}BEGIN PRINTFONTAND(P+1);PRINT(347);
IF MEM[P].HH.B1>1 THEN PRINTCHAR(124);FONTINSHORTD:=MEM[P+1].HH.B0;
SHORTDISPLAY(MEM[P+1].HH.RH);IF ODD(MEM[P].HH.B1)THEN PRINTCHAR(124);
PRINTCHAR(41);END{:193};12:{194:}BEGIN PRINTESC(348);
PRINTINT(MEM[P+1].INT);END{:194};7:{195:}BEGIN PRINTESC(349);
IF MEM[P].HH.B1>0 THEN BEGIN PRINT(350);PRINTINT(MEM[P].HH.B1);END;
BEGIN BEGIN STRPOOL[POOLPTR]:=46;POOLPTR:=POOLPTR+1;END;
SHOWNODELIST(MEM[P+1].HH.LH);POOLPTR:=POOLPTR-1;END;
BEGIN STRPOOL[POOLPTR]:=124;POOLPTR:=POOLPTR+1;END;
SHOWNODELIST(MEM[P+1].HH.RH);POOLPTR:=POOLPTR-1;END{:195};
4:{196:}BEGIN PRINTESC(351);PRINTMARK(MEM[P+1].INT);END{:196};
5:{197:}BEGIN PRINTESC(352);BEGIN BEGIN STRPOOL[POOLPTR]:=46;
POOLPTR:=POOLPTR+1;END;SHOWNODELIST(MEM[P+1].INT);POOLPTR:=POOLPTR-1;
END;END{:197};{690:}14:PRINTSTYLE(MEM[P].HH.B1);
15:{695:}BEGIN PRINTESC(525);BEGIN STRPOOL[POOLPTR]:=68;
POOLPTR:=POOLPTR+1;END;SHOWNODELIST(MEM[P+1].HH.LH);POOLPTR:=POOLPTR-1;
BEGIN STRPOOL[POOLPTR]:=84;POOLPTR:=POOLPTR+1;END;
SHOWNODELIST(MEM[P+1].HH.RH);POOLPTR:=POOLPTR-1;
BEGIN STRPOOL[POOLPTR]:=83;POOLPTR:=POOLPTR+1;END;
SHOWNODELIST(MEM[P+2].HH.LH);POOLPTR:=POOLPTR-1;
BEGIN STRPOOL[POOLPTR]:=115;POOLPTR:=POOLPTR+1;END;
SHOWNODELIST(MEM[P+2].HH.RH);POOLPTR:=POOLPTR-1;END{:695};
16,17,18,19,20,21,22,23,24,27,26,29,28,30,31:{696:}BEGIN CASE MEM[P].HH.
B0 OF 16:PRINTESC(867);17:PRINTESC(868);18:PRINTESC(869);
19:PRINTESC(870);20:PRINTESC(871);21:PRINTESC(872);22:PRINTESC(873);
23:PRINTESC(874);27:PRINTESC(875);26:PRINTESC(876);29:PRINTESC(539);
24:BEGIN PRINTESC(533);PRINTDELIMIT(P+4);END;28:BEGIN PRINTESC(508);
PRINTFAMANDC(P+4);END;30:BEGIN PRINTESC(877);PRINTDELIMIT(P+1);END;
31:BEGIN PRINTESC(878);PRINTDELIMIT(P+1);END;END;
IF MEM[P].HH.B1<>0 THEN IF MEM[P].HH.B1=1 THEN PRINTESC(879)ELSE
PRINTESC(880);IF MEM[P].HH.B0<30 THEN PRINTSUBSIDI(P+1,46);
PRINTSUBSIDI(P+2,94);PRINTSUBSIDI(P+3,95);END{:696};
25:{697:}BEGIN PRINTESC(881);
IF MEM[P+1].INT=1073741824 THEN PRINT(882)ELSE PRINTSCALED(MEM[P+1].INT)
;
IF(MEM[P+4].QQQQ.B0<>0)OR(MEM[P+4].QQQQ.B1<>0)OR(MEM[P+4].QQQQ.B2<>0)OR(
MEM[P+4].QQQQ.B3<>0)THEN BEGIN PRINT(883);PRINTDELIMIT(P+4);END;
IF(MEM[P+5].QQQQ.B0<>0)OR(MEM[P+5].QQQQ.B1<>0)OR(MEM[P+5].QQQQ.B2<>0)OR(
MEM[P+5].QQQQ.B3<>0)THEN BEGIN PRINT(884);PRINTDELIMIT(P+5);END;
PRINTSUBSIDI(P+2,92);PRINTSUBSIDI(P+3,47);END{:697};
{:690}ELSE PRINT(317)END{:183};P:=MEM[P].HH.RH;END;10:END;
{:182}{198:}PROCEDURE SHOWBOX(P:HALFWORD);
BEGIN{236:}DEPTHTHRESHO:=EQTB[5288].INT;
BREADTHMAX:=EQTB[5287].INT{:236};IF BREADTHMAX<=0 THEN BREADTHMAX:=5;
IF POOLPTR+DEPTHTHRESHO>=POOLSIZE THEN DEPTHTHRESHO:=POOLSIZE-POOLPTR-1;
SHOWNODELIST(P);PRINTLN;END;
{:198}{200:}PROCEDURE DELETETOKENR(P:HALFWORD);
BEGIN IF MEM[P].HH.LH=0 THEN FLUSHLIST(P)ELSE MEM[P].HH.LH:=MEM[P].HH.LH
-1;END;{:200}{201:}PROCEDURE DELETEGLUERE(P:HALFWORD);
BEGIN IF MEM[P].HH.RH=0 THEN FREENODE(P,4)ELSE MEM[P].HH.RH:=MEM[P].HH.
RH-1;END;{:201}{202:}PROCEDURE FLUSHNODELIS(P:HALFWORD);LABEL 30;
VAR Q:HALFWORD;BEGIN WHILE P<>0 DO BEGIN Q:=MEM[P].HH.RH;
IF(P>=HIMEMMIN)THEN BEGIN MEM[P].HH.RH:=AVAIL;AVAIL:=P;
DYNUSED:=DYNUSED-1;
END ELSE BEGIN CASE MEM[P].HH.B0 OF 0,1,13:BEGIN FLUSHNODELIS(MEM[P+5].
HH.RH);FREENODE(P,7);GOTO 30;END;2:BEGIN FREENODE(P,4);GOTO 30;END;
3:BEGIN FLUSHNODELIS(MEM[P+4].HH.LH);DELETEGLUERE(MEM[P+4].HH.RH);
FREENODE(P,5);GOTO 30;END;
8:{1358:}BEGIN CASE MEM[P].HH.B1 OF 0:FREENODE(P,3);
1,3:BEGIN DELETETOKENR(MEM[P+1].HH.RH);FREENODE(P,2);GOTO 30;END;
2,4:FREENODE(P,2);ELSE CONFUSION(1296)END;GOTO 30;END{:1358};
10:BEGIN BEGIN IF MEM[MEM[P+1].HH.LH].HH.RH=0 THEN FREENODE(MEM[P+1].HH.
LH,4)ELSE MEM[MEM[P+1].HH.LH].HH.RH:=MEM[MEM[P+1].HH.LH].HH.RH-1;END;
IF MEM[P+1].HH.RH<>0 THEN FLUSHNODELIS(MEM[P+1].HH.RH);END;11,9,12:;
6:FLUSHNODELIS(MEM[P+1].HH.RH);4:DELETETOKENR(MEM[P+1].INT);
7:BEGIN FLUSHNODELIS(MEM[P+1].HH.LH);FLUSHNODELIS(MEM[P+1].HH.RH);END;
5:FLUSHNODELIS(MEM[P+1].INT);{698:}14:BEGIN FREENODE(P,3);GOTO 30;END;
15:BEGIN FLUSHNODELIS(MEM[P+1].HH.LH);FLUSHNODELIS(MEM[P+1].HH.RH);
FLUSHNODELIS(MEM[P+2].HH.LH);FLUSHNODELIS(MEM[P+2].HH.RH);FREENODE(P,3);
GOTO 30;END;
16,17,18,19,20,21,22,23,24,27,26,29,28:BEGIN IF MEM[P+1].HH.RH>=2 THEN
FLUSHNODELIS(MEM[P+1].HH.LH);
IF MEM[P+2].HH.RH>=2 THEN FLUSHNODELIS(MEM[P+2].HH.LH);
IF MEM[P+3].HH.RH>=2 THEN FLUSHNODELIS(MEM[P+3].HH.LH);
IF MEM[P].HH.B0=24 THEN FREENODE(P,5)ELSE IF MEM[P].HH.B0=28 THEN
FREENODE(P,5)ELSE FREENODE(P,4);GOTO 30;END;30,31:BEGIN FREENODE(P,4);
GOTO 30;END;25:BEGIN FLUSHNODELIS(MEM[P+2].HH.LH);
FLUSHNODELIS(MEM[P+3].HH.LH);FREENODE(P,6);GOTO 30;END;
{:698}ELSE CONFUSION(353)END;FREENODE(P,2);30:END;P:=Q;END;END;
{:202}{204:}FUNCTION COPYNODELIST(P:HALFWORD):HALFWORD;VAR H:HALFWORD;
Q:HALFWORD;R:HALFWORD;WORDS:0..5;BEGIN H:=GETAVAIL;Q:=H;
WHILE P<>0 DO BEGIN{205:}WORDS:=1;
IF(P>=HIMEMMIN)THEN R:=GETAVAIL ELSE{206:}CASE MEM[P].HH.B0 OF 0,1,13:
BEGIN R:=GETNODE(7);MEM[R+6]:=MEM[P+6];MEM[R+5]:=MEM[P+5];
MEM[R+5].HH.RH:=COPYNODELIST(MEM[P+5].HH.RH);WORDS:=5;END;
2:BEGIN R:=GETNODE(4);WORDS:=4;END;3:BEGIN R:=GETNODE(5);
MEM[R+4]:=MEM[P+4];
MEM[MEM[P+4].HH.RH].HH.RH:=MEM[MEM[P+4].HH.RH].HH.RH+1;
MEM[R+4].HH.LH:=COPYNODELIST(MEM[P+4].HH.LH);WORDS:=4;END;
8:{1357:}CASE MEM[P].HH.B1 OF 0:BEGIN R:=GETNODE(3);WORDS:=3;END;
1,3:BEGIN R:=GETNODE(2);
MEM[MEM[P+1].HH.RH].HH.LH:=MEM[MEM[P+1].HH.RH].HH.LH+1;WORDS:=2;END;
2,4:BEGIN R:=GETNODE(2);WORDS:=2;END;ELSE CONFUSION(1295)END{:1357};
10:BEGIN R:=GETNODE(2);
MEM[MEM[P+1].HH.LH].HH.RH:=MEM[MEM[P+1].HH.LH].HH.RH+1;
MEM[R+1].HH.LH:=MEM[P+1].HH.LH;
MEM[R+1].HH.RH:=COPYNODELIST(MEM[P+1].HH.RH);END;
11,9,12:BEGIN R:=GETNODE(2);WORDS:=2;END;6:BEGIN R:=GETNODE(2);
MEM[R+1]:=MEM[P+1];MEM[R+1].HH.RH:=COPYNODELIST(MEM[P+1].HH.RH);END;
7:BEGIN R:=GETNODE(2);MEM[R+1].HH.LH:=COPYNODELIST(MEM[P+1].HH.LH);
MEM[R+1].HH.RH:=COPYNODELIST(MEM[P+1].HH.RH);END;4:BEGIN R:=GETNODE(2);
MEM[MEM[P+1].INT].HH.LH:=MEM[MEM[P+1].INT].HH.LH+1;WORDS:=2;END;
5:BEGIN R:=GETNODE(2);MEM[R+1].INT:=COPYNODELIST(MEM[P+1].INT);END;
ELSE CONFUSION(354)END{:206};WHILE WORDS>0 DO BEGIN WORDS:=WORDS-1;
MEM[R+WORDS]:=MEM[P+WORDS];END{:205};MEM[Q].HH.RH:=R;Q:=R;
P:=MEM[P].HH.RH;END;MEM[Q].HH.RH:=0;Q:=MEM[H].HH.RH;
BEGIN MEM[H].HH.RH:=AVAIL;AVAIL:=H;DYNUSED:=DYNUSED-1;END;
COPYNODELIST:=Q;END;{:204}{211:}PROCEDURE PRINTMODE(M:INTEGER);
BEGIN IF M>0 THEN CASE M DIV(101)OF 0:PRINT(355);1:PRINT(356);
2:PRINT(357);
END ELSE IF M=0 THEN PRINT(358)ELSE CASE(-M)DIV(101)OF 0:PRINT(359);
1:PRINT(360);2:PRINT(343);END;PRINT(361);END;
{:211}{216:}PROCEDURE PUSHNEST;
BEGIN IF NESTPTR>MAXNESTSTACK THEN BEGIN MAXNESTSTACK:=NESTPTR;
IF NESTPTR=NESTSIZE THEN OVERFLOW(362,NESTSIZE);END;
NEST[NESTPTR]:=CURLIST;NESTPTR:=NESTPTR+1;CURLIST.HEADFIELD:=GETAVAIL;
CURLIST.TAILFIELD:=CURLIST.HEADFIELD;CURLIST.PGFIELD:=0;
CURLIST.MLFIELD:=LINE;END;{:216}{217:}PROCEDURE POPNEST;
BEGIN BEGIN MEM[CURLIST.HEADFIELD].HH.RH:=AVAIL;
AVAIL:=CURLIST.HEADFIELD;DYNUSED:=DYNUSED-1;END;NESTPTR:=NESTPTR-1;
CURLIST:=NEST[NESTPTR];END;{:217}{218:}PROCEDURE PRINTTOTALS;FORWARD;
PROCEDURE SHOWACTIVITI;VAR P:0..NESTSIZE;M:-203..203;A:MEMORYWORD;
Q,R:HALFWORD;T:INTEGER;BEGIN NEST[NESTPTR]:=CURLIST;PRINTNL(338);
PRINTLN;FOR P:=NESTPTR DOWNTO 0 DO BEGIN M:=NEST[P].MODEFIELD;
A:=NEST[P].AUXFIELD;PRINTNL(363);PRINTMODE(M);PRINT(364);
PRINTINT(ABS(NEST[P].MLFIELD));
IF M=102 THEN IF NEST[P].PGFIELD<>8585216 THEN BEGIN PRINT(365);
PRINTINT(NEST[P].PGFIELD MOD 65536);PRINT(366);
PRINTINT(NEST[P].PGFIELD DIV 4194304);PRINTCHAR(44);
PRINTINT((NEST[P].PGFIELD DIV 65536)MOD 64);PRINTCHAR(41);END;
IF NEST[P].MLFIELD<0 THEN PRINT(367);
IF P=0 THEN BEGIN{986:}IF 29998<>PAGETAIL THEN BEGIN PRINTNL(981);
IF OUTPUTACTIVE THEN PRINT(982);SHOWBOX(MEM[29998].HH.RH);
IF PAGECONTENTS>0 THEN BEGIN PRINTNL(983);PRINTTOTALS;PRINTNL(984);
PRINTSCALED(PAGESOFAR[0]);R:=MEM[30000].HH.RH;
WHILE R<>30000 DO BEGIN PRINTLN;PRINTESC(330);T:=MEM[R].HH.B1;
PRINTINT(T);PRINT(985);
IF EQTB[5318+T].INT=1000 THEN T:=MEM[R+3].INT ELSE T:=XOVERN(MEM[R+3].
INT,1000)*EQTB[5318+T].INT;PRINTSCALED(T);
IF MEM[R].HH.B0=1 THEN BEGIN Q:=29998;T:=0;REPEAT Q:=MEM[Q].HH.RH;
IF(MEM[Q].HH.B0=3)AND(MEM[Q].HH.B1=MEM[R].HH.B1)THEN T:=T+1;
UNTIL Q=MEM[R+1].HH.LH;PRINT(986);PRINTINT(T);PRINT(987);END;
R:=MEM[R].HH.RH;END;END;END{:986};
IF MEM[29999].HH.RH<>0 THEN PRINTNL(368);END;
SHOWBOX(MEM[NEST[P].HEADFIELD].HH.RH);
{219:}CASE ABS(M)DIV(101)OF 0:BEGIN PRINTNL(369);
IF A.INT<=-65536000 THEN PRINT(370)ELSE PRINTSCALED(A.INT);
IF NEST[P].PGFIELD<>0 THEN BEGIN PRINT(371);PRINTINT(NEST[P].PGFIELD);
PRINT(372);IF NEST[P].PGFIELD<>1 THEN PRINTCHAR(115);END;END;
1:BEGIN PRINTNL(373);PRINTINT(A.HH.LH);
IF M>0 THEN IF A.HH.RH>0 THEN BEGIN PRINT(374);PRINTINT(A.HH.RH);END;
END;2:IF A.INT<>0 THEN BEGIN PRINT(375);SHOWBOX(A.INT);END;END{:219};
END;END;{:218}{237:}PROCEDURE PRINTPARAM(N:INTEGER);
BEGIN CASE N OF 0:PRINTESC(420);1:PRINTESC(421);2:PRINTESC(422);
3:PRINTESC(423);4:PRINTESC(424);5:PRINTESC(425);6:PRINTESC(426);
7:PRINTESC(427);8:PRINTESC(428);9:PRINTESC(429);10:PRINTESC(430);
11:PRINTESC(431);12:PRINTESC(432);13:PRINTESC(433);14:PRINTESC(434);
15:PRINTESC(435);16:PRINTESC(436);17:PRINTESC(437);18:PRINTESC(438);
19:PRINTESC(439);20:PRINTESC(440);21:PRINTESC(441);22:PRINTESC(442);
23:PRINTESC(443);24:PRINTESC(444);25:PRINTESC(445);26:PRINTESC(446);
27:PRINTESC(447);28:PRINTESC(448);29:PRINTESC(449);30:PRINTESC(450);
31:PRINTESC(451);32:PRINTESC(452);33:PRINTESC(453);34:PRINTESC(454);
35:PRINTESC(455);36:PRINTESC(456);37:PRINTESC(457);38:PRINTESC(458);
39:PRINTESC(459);40:PRINTESC(460);41:PRINTESC(461);42:PRINTESC(462);
43:PRINTESC(463);44:PRINTESC(464);45:PRINTESC(465);46:PRINTESC(466);
47:PRINTESC(467);48:PRINTESC(468);49:PRINTESC(469);50:PRINTESC(470);
51:PRINTESC(471);52:PRINTESC(472);53:PRINTESC(473);54:PRINTESC(474);
ELSE PRINT(475)END;END;{:237}{241:}PROCEDURE FIXDATEANDTI;
VAR YY,MM,DD:WORD;HH,SS,MS:WORD;BEGIN DECODEDATE(NOW,YY,MM,DD);
SYSDAY:=DD;EQTB[5284].INT:=SYSDAY;SYSMONTH:=MM;EQTB[5285].INT:=SYSMONTH;
SYSYEAR:=YY;EQTB[5286].INT:=SYSYEAR;DECODETIME(NOW,HH,MM,SS,MS);
SYSTIME:=HH*60+MM;EQTB[5283].INT:=SYSTIME;END;
{:241}{245:}PROCEDURE BEGINDIAGNOS;BEGIN OLDSETTING:=SELECTOR;
IF(EQTB[5292].INT<=0)AND(SELECTOR=19)THEN BEGIN SELECTOR:=SELECTOR-1;
IF HISTORY=0 THEN HISTORY:=1;END;END;
PROCEDURE ENDDIAGNOSTI(BLANKLINE:BOOLEAN);BEGIN PRINTNL(338);
IF BLANKLINE THEN PRINTLN;SELECTOR:=OLDSETTING;END;
{:245}{247:}PROCEDURE PRINTLENGTHP(N:INTEGER);
BEGIN CASE N OF 0:PRINTESC(478);1:PRINTESC(479);2:PRINTESC(480);
3:PRINTESC(481);4:PRINTESC(482);5:PRINTESC(483);6:PRINTESC(484);
7:PRINTESC(485);8:PRINTESC(486);9:PRINTESC(487);10:PRINTESC(488);
11:PRINTESC(489);12:PRINTESC(490);13:PRINTESC(491);14:PRINTESC(492);
15:PRINTESC(493);16:PRINTESC(494);17:PRINTESC(495);18:PRINTESC(496);
19:PRINTESC(497);20:PRINTESC(498);ELSE PRINT(499)END;END;
{:247}{252:}{298:}PROCEDURE PRINTCMDCHR(CMD:QUARTERWORD;
CHRCODE:HALFWORD);BEGIN CASE CMD OF 1:BEGIN PRINT(557);PRINT(CHRCODE);
END;2:BEGIN PRINT(558);PRINT(CHRCODE);END;3:BEGIN PRINT(559);
PRINT(CHRCODE);END;6:BEGIN PRINT(560);PRINT(CHRCODE);END;
7:BEGIN PRINT(561);PRINT(CHRCODE);END;8:BEGIN PRINT(562);PRINT(CHRCODE);
END;9:PRINT(563);10:BEGIN PRINT(564);PRINT(CHRCODE);END;
11:BEGIN PRINT(565);PRINT(CHRCODE);END;12:BEGIN PRINT(566);
PRINT(CHRCODE);END;
{227:}75,76:IF CHRCODE<2900 THEN PRINTSKIPPAR(CHRCODE-2882)ELSE IF
CHRCODE<3156 THEN BEGIN PRINTESC(395);PRINTINT(CHRCODE-2900);
END ELSE BEGIN PRINTESC(396);PRINTINT(CHRCODE-3156);END;
{:227}{231:}72:IF CHRCODE>=3422 THEN BEGIN PRINTESC(407);
PRINTINT(CHRCODE-3422);END ELSE CASE CHRCODE OF 3413:PRINTESC(398);
3414:PRINTESC(399);3415:PRINTESC(400);3416:PRINTESC(401);
3417:PRINTESC(402);3418:PRINTESC(403);3419:PRINTESC(404);
3420:PRINTESC(405);ELSE PRINTESC(406)END;
{:231}{239:}73:IF CHRCODE<5318 THEN PRINTPARAM(CHRCODE-5263)ELSE BEGIN
PRINTESC(476);PRINTINT(CHRCODE-5318);END;
{:239}{249:}74:IF CHRCODE<5851 THEN PRINTLENGTHP(CHRCODE-5830)ELSE BEGIN
PRINTESC(500);PRINTINT(CHRCODE-5851);END;{:249}{266:}45:PRINTESC(508);
90:PRINTESC(509);40:PRINTESC(510);41:PRINTESC(511);77:PRINTESC(519);
61:PRINTESC(512);42:PRINTESC(531);16:PRINTESC(513);107:PRINTESC(504);
88:PRINTESC(518);15:PRINTESC(514);92:PRINTESC(515);67:PRINTESC(505);
62:PRINTESC(516);64:PRINTESC(32);102:PRINTESC(517);32:PRINTESC(520);
36:PRINTESC(521);39:PRINTESC(522);37:PRINTESC(330);44:PRINTESC(47);
18:PRINTESC(351);46:PRINTESC(523);17:PRINTESC(524);54:PRINTESC(525);
91:PRINTESC(526);34:PRINTESC(527);65:PRINTESC(528);103:PRINTESC(529);
55:PRINTESC(335);63:PRINTESC(530);66:PRINTESC(533);96:PRINTESC(534);
0:PRINTESC(535);98:PRINTESC(536);80:PRINTESC(532);84:PRINTESC(408);
109:PRINTESC(537);71:PRINTESC(407);38:PRINTESC(352);33:PRINTESC(538);
56:PRINTESC(539);35:PRINTESC(540);{:266}{335:}13:PRINTESC(597);
{:335}{377:}104:IF CHRCODE=0 THEN PRINTESC(629)ELSE PRINTESC(630);
{:377}{385:}110:CASE CHRCODE OF 1:PRINTESC(632);2:PRINTESC(633);
3:PRINTESC(634);4:PRINTESC(635);ELSE PRINTESC(631)END;
{:385}{412:}89:IF CHRCODE=0 THEN PRINTESC(476)ELSE IF CHRCODE=1 THEN
PRINTESC(500)ELSE IF CHRCODE=2 THEN PRINTESC(395)ELSE PRINTESC(396);
{:412}{417:}79:IF CHRCODE=1 THEN PRINTESC(669)ELSE PRINTESC(668);
82:IF CHRCODE=0 THEN PRINTESC(670)ELSE PRINTESC(671);
83:IF CHRCODE=1 THEN PRINTESC(672)ELSE IF CHRCODE=3 THEN PRINTESC(673)
ELSE PRINTESC(674);70:CASE CHRCODE OF 0:PRINTESC(675);1:PRINTESC(676);
2:PRINTESC(677);3:PRINTESC(678);ELSE PRINTESC(679)END;
{:417}{469:}108:CASE CHRCODE OF 0:PRINTESC(735);1:PRINTESC(736);
2:PRINTESC(737);3:PRINTESC(738);4:PRINTESC(739);ELSE PRINTESC(740)END;
{:469}{488:}105:CASE CHRCODE OF 1:PRINTESC(758);2:PRINTESC(759);
3:PRINTESC(760);4:PRINTESC(761);5:PRINTESC(762);6:PRINTESC(763);
7:PRINTESC(764);8:PRINTESC(765);9:PRINTESC(766);10:PRINTESC(767);
11:PRINTESC(768);12:PRINTESC(769);13:PRINTESC(770);14:PRINTESC(771);
15:PRINTESC(772);16:PRINTESC(773);ELSE PRINTESC(757)END;
{:488}{492:}106:IF CHRCODE=2 THEN PRINTESC(774)ELSE IF CHRCODE=4 THEN
PRINTESC(775)ELSE PRINTESC(776);
{:492}{781:}4:IF CHRCODE=256 THEN PRINTESC(899)ELSE BEGIN PRINT(903);
PRINT(CHRCODE);END;
5:IF CHRCODE=257 THEN PRINTESC(900)ELSE PRINTESC(901);
{:781}{984:}81:CASE CHRCODE OF 0:PRINTESC(971);1:PRINTESC(972);
2:PRINTESC(973);3:PRINTESC(974);4:PRINTESC(975);5:PRINTESC(976);
6:PRINTESC(977);ELSE PRINTESC(978)END;
{:984}{1053:}14:IF CHRCODE=1 THEN PRINTESC(1027)ELSE PRINTESC(1026);
{:1053}{1059:}26:CASE CHRCODE OF 4:PRINTESC(1028);0:PRINTESC(1029);
1:PRINTESC(1030);2:PRINTESC(1031);ELSE PRINTESC(1032)END;
27:CASE CHRCODE OF 4:PRINTESC(1033);0:PRINTESC(1034);1:PRINTESC(1035);
2:PRINTESC(1036);ELSE PRINTESC(1037)END;28:PRINTESC(336);
29:PRINTESC(340);30:PRINTESC(342);
{:1059}{1072:}21:IF CHRCODE=1 THEN PRINTESC(1055)ELSE PRINTESC(1056);
22:IF CHRCODE=1 THEN PRINTESC(1057)ELSE PRINTESC(1058);
20:CASE CHRCODE OF 0:PRINTESC(409);1:PRINTESC(1059);2:PRINTESC(1060);
3:PRINTESC(966);4:PRINTESC(1061);5:PRINTESC(968);ELSE PRINTESC(1062)END;
31:IF CHRCODE=100 THEN PRINTESC(1064)ELSE IF CHRCODE=101 THEN PRINTESC(
1065)ELSE IF CHRCODE=102 THEN PRINTESC(1066)ELSE PRINTESC(1063);
{:1072}{1089:}43:IF CHRCODE=0 THEN PRINTESC(1082)ELSE PRINTESC(1081);
{:1089}{1108:}25:IF CHRCODE=10 THEN PRINTESC(1093)ELSE IF CHRCODE=11
THEN PRINTESC(1092)ELSE PRINTESC(1091);
23:IF CHRCODE=1 THEN PRINTESC(1095)ELSE PRINTESC(1094);
24:IF CHRCODE=1 THEN PRINTESC(1097)ELSE PRINTESC(1096);
{:1108}{1115:}47:IF CHRCODE=1 THEN PRINTESC(45)ELSE PRINTESC(349);
{:1115}{1143:}48:IF CHRCODE=1 THEN PRINTESC(1129)ELSE PRINTESC(1128);
{:1143}{1157:}50:CASE CHRCODE OF 16:PRINTESC(867);17:PRINTESC(868);
18:PRINTESC(869);19:PRINTESC(870);20:PRINTESC(871);21:PRINTESC(872);
22:PRINTESC(873);23:PRINTESC(874);26:PRINTESC(876);
ELSE PRINTESC(875)END;
51:IF CHRCODE=1 THEN PRINTESC(879)ELSE IF CHRCODE=2 THEN PRINTESC(880)
ELSE PRINTESC(1130);{:1157}{1170:}53:PRINTSTYLE(CHRCODE);
{:1170}{1179:}52:CASE CHRCODE OF 1:PRINTESC(1149);2:PRINTESC(1150);
3:PRINTESC(1151);4:PRINTESC(1152);5:PRINTESC(1153);
ELSE PRINTESC(1148)END;
{:1179}{1189:}49:IF CHRCODE=30 THEN PRINTESC(877)ELSE PRINTESC(878);
{:1189}{1209:}93:IF CHRCODE=1 THEN PRINTESC(1172)ELSE IF CHRCODE=2 THEN
PRINTESC(1173)ELSE PRINTESC(1174);
97:IF CHRCODE=0 THEN PRINTESC(1175)ELSE IF CHRCODE=1 THEN PRINTESC(1176)
ELSE IF CHRCODE=2 THEN PRINTESC(1177)ELSE PRINTESC(1178);
{:1209}{1220:}94:IF CHRCODE<>0 THEN PRINTESC(1193)ELSE PRINTESC(1192);
{:1220}{1223:}95:CASE CHRCODE OF 0:PRINTESC(1194);1:PRINTESC(1195);
2:PRINTESC(1196);3:PRINTESC(1197);4:PRINTESC(1198);5:PRINTESC(1199);
ELSE PRINTESC(1200)END;68:BEGIN PRINTESC(513);PRINTHEX(CHRCODE);END;
69:BEGIN PRINTESC(524);PRINTHEX(CHRCODE);END;
{:1223}{1231:}85:IF CHRCODE=3983 THEN PRINTESC(415)ELSE IF CHRCODE=5007
THEN PRINTESC(419)ELSE IF CHRCODE=4239 THEN PRINTESC(416)ELSE IF CHRCODE
=4495 THEN PRINTESC(417)ELSE IF CHRCODE=4751 THEN PRINTESC(418)ELSE
PRINTESC(477);86:PRINTSIZE(CHRCODE-3935);
{:1231}{1251:}99:IF CHRCODE=1 THEN PRINTESC(954)ELSE PRINTESC(942);
{:1251}{1255:}78:IF CHRCODE=0 THEN PRINTESC(1218)ELSE PRINTESC(1219);
{:1255}{1261:}87:BEGIN PRINT(1227);SLOWPRINT(FONTNAME[CHRCODE]);
IF FONTSIZE[CHRCODE]<>FONTDSIZE[CHRCODE]THEN BEGIN PRINT(741);
PRINTSCALED(FONTSIZE[CHRCODE]);PRINT(397);END;END;
{:1261}{1263:}100:CASE CHRCODE OF 0:PRINTESC(274);1:PRINTESC(275);
2:PRINTESC(276);ELSE PRINTESC(1228)END;
{:1263}{1273:}60:IF CHRCODE=0 THEN PRINTESC(1230)ELSE PRINTESC(1229);
{:1273}{1278:}58:IF CHRCODE=0 THEN PRINTESC(1231)ELSE PRINTESC(1232);
{:1278}{1287:}57:IF CHRCODE=4239 THEN PRINTESC(1238)ELSE PRINTESC(1239);
{:1287}{1292:}19:CASE CHRCODE OF 1:PRINTESC(1241);2:PRINTESC(1242);
3:PRINTESC(1243);ELSE PRINTESC(1240)END;{:1292}{1295:}101:PRINT(1250);
111:PRINT(1251);112:PRINTESC(1252);113:PRINTESC(1253);
114:BEGIN PRINTESC(1172);PRINTESC(1253);END;115:PRINTESC(1254);
{:1295}{1346:}59:CASE CHRCODE OF 0:PRINTESC(1286);1:PRINTESC(594);
2:PRINTESC(1287);3:PRINTESC(1288);4:PRINTESC(1289);5:PRINTESC(1290);
ELSE PRINT(1291)END;{:1346}ELSE PRINT(567)END;END;
{:298}PROCEDURE SHOWEQTB(N:HALFWORD);
BEGIN IF N<1 THEN PRINTCHAR(63)ELSE IF N<2882 THEN{223:}BEGIN SPRINTCS(N
);PRINTCHAR(61);PRINTCMDCHR(EQTB[N].HH.B0,EQTB[N].HH.RH);
IF EQTB[N].HH.B0>=111 THEN BEGIN PRINTCHAR(58);
SHOWTOKENLIS(MEM[EQTB[N].HH.RH].HH.RH,0,32);END;
END{:223}ELSE IF N<3412 THEN{229:}IF N<2900 THEN BEGIN PRINTSKIPPAR(N
-2882);PRINTCHAR(61);
IF N<2897 THEN PRINTSPEC(EQTB[N].HH.RH,397)ELSE PRINTSPEC(EQTB[N].HH.RH,
337);END ELSE IF N<3156 THEN BEGIN PRINTESC(395);PRINTINT(N-2900);
PRINTCHAR(61);PRINTSPEC(EQTB[N].HH.RH,397);END ELSE BEGIN PRINTESC(396);
PRINTINT(N-3156);PRINTCHAR(61);PRINTSPEC(EQTB[N].HH.RH,337);
END{:229}ELSE IF N<5263 THEN{233:}IF N=3412 THEN BEGIN PRINTESC(408);
PRINTCHAR(61);
IF EQTB[3412].HH.RH=0 THEN PRINTCHAR(48)ELSE PRINTINT(MEM[EQTB[3412].HH.
RH].HH.LH);END ELSE IF N<3422 THEN BEGIN PRINTCMDCHR(72,N);
PRINTCHAR(61);
IF EQTB[N].HH.RH<>0 THEN SHOWTOKENLIS(MEM[EQTB[N].HH.RH].HH.RH,0,32);
END ELSE IF N<3678 THEN BEGIN PRINTESC(407);PRINTINT(N-3422);
PRINTCHAR(61);
IF EQTB[N].HH.RH<>0 THEN SHOWTOKENLIS(MEM[EQTB[N].HH.RH].HH.RH,0,32);
END ELSE IF N<3934 THEN BEGIN PRINTESC(409);PRINTINT(N-3678);
PRINTCHAR(61);
IF EQTB[N].HH.RH=0 THEN PRINT(410)ELSE BEGIN DEPTHTHRESHO:=0;
BREADTHMAX:=1;SHOWNODELIST(EQTB[N].HH.RH);END;
END ELSE IF N<3983 THEN{234:}BEGIN IF N=3934 THEN PRINT(411)ELSE IF N<
3951 THEN BEGIN PRINTESC(412);PRINTINT(N-3935);
END ELSE IF N<3967 THEN BEGIN PRINTESC(413);PRINTINT(N-3951);
END ELSE BEGIN PRINTESC(414);PRINTINT(N-3967);END;PRINTCHAR(61);
PRINTESC(HASH[2624+EQTB[N].HH.RH].RH);
END{:234}ELSE{235:}IF N<5007 THEN BEGIN IF N<4239 THEN BEGIN PRINTESC(
415);PRINTINT(N-3983);END ELSE IF N<4495 THEN BEGIN PRINTESC(416);
PRINTINT(N-4239);END ELSE IF N<4751 THEN BEGIN PRINTESC(417);
PRINTINT(N-4495);END ELSE BEGIN PRINTESC(418);PRINTINT(N-4751);END;
PRINTCHAR(61);PRINTINT(EQTB[N].HH.RH);END ELSE BEGIN PRINTESC(419);
PRINTINT(N-5007);PRINTCHAR(61);PRINTINT(EQTB[N].HH.RH);
END{:235}{:233}ELSE IF N<5830 THEN{242:}BEGIN IF N<5318 THEN PRINTPARAM(
N-5263)ELSE IF N<5574 THEN BEGIN PRINTESC(476);PRINTINT(N-5318);
END ELSE BEGIN PRINTESC(477);PRINTINT(N-5574);END;PRINTCHAR(61);
PRINTINT(EQTB[N].INT);
END{:242}ELSE IF N<=6106 THEN{251:}BEGIN IF N<5851 THEN PRINTLENGTHP(N
-5830)ELSE BEGIN PRINTESC(500);PRINTINT(N-5851);END;PRINTCHAR(61);
PRINTSCALED(EQTB[N].INT);PRINT(397);END{:251}ELSE PRINTCHAR(63);END;
{:252}{259:}FUNCTION IDLOOKUP(J,L:INTEGER):HALFWORD;LABEL 40;
VAR H:INTEGER;D:INTEGER;P:HALFWORD;K:HALFWORD;BEGIN{261:}H:=BUFFER[J];
FOR K:=J+1 TO J+L-1 DO BEGIN H:=H+H+BUFFER[K];
WHILE H>=1777 DO H:=H-1777;END{:261};P:=H+514;
WHILE TRUE DO BEGIN IF HASH[P].RH>0 THEN IF(STRSTART[HASH[P].RH+1]-
STRSTART[HASH[P].RH])=L THEN IF STREQBUF(HASH[P].RH,J)THEN GOTO 40;
IF HASH[P].LH=0 THEN BEGIN IF NONEWCONTROL THEN P:=2881 ELSE{260:}BEGIN
IF HASH[P].RH>0 THEN BEGIN REPEAT IF(HASHUSED=514)THEN OVERFLOW(503,2100
);HASHUSED:=HASHUSED-1;UNTIL HASH[HASHUSED].RH=0;HASH[P].LH:=HASHUSED;
P:=HASHUSED;END;
BEGIN IF POOLPTR+L>POOLSIZE THEN OVERFLOW(257,POOLSIZE-INITPOOLPTR);END;
D:=(POOLPTR-STRSTART[STRPTR]);
WHILE POOLPTR>STRSTART[STRPTR]DO BEGIN POOLPTR:=POOLPTR-1;
STRPOOL[POOLPTR+L]:=STRPOOL[POOLPTR];END;
FOR K:=J TO J+L-1 DO BEGIN STRPOOL[POOLPTR]:=BUFFER[K];
POOLPTR:=POOLPTR+1;END;HASH[P].RH:=MAKESTRING;POOLPTR:=POOLPTR+D;
CSCOUNT:=CSCOUNT+1;END{:260};GOTO 40;END;P:=HASH[P].LH;END;
40:IDLOOKUP:=P;END;{:259}{264:}PROCEDURE PRIMITIVE(S:STRNUMBER;
C:QUARTERWORD;O:HALFWORD);VAR K:POOLPOINTER;J:SMALLNUMBER;L:SMALLNUMBER;
BEGIN IF S<256 THEN CURVAL:=S+257 ELSE BEGIN K:=STRSTART[S];
L:=STRSTART[S+1]-K;FOR J:=0 TO L-1 DO BUFFER[J]:=STRPOOL[K+J];
CURVAL:=IDLOOKUP(0,L);BEGIN STRPTR:=STRPTR-1;POOLPTR:=STRSTART[STRPTR];
END;HASH[CURVAL].RH:=S;END;EQTB[CURVAL].HH.B1:=1;EQTB[CURVAL].HH.B0:=C;
EQTB[CURVAL].HH.RH:=O;END;
{:264}{274:}PROCEDURE NEWSAVELEVEL(C:GROUPCODE);
BEGIN IF SAVEPTR>MAXSAVESTACK THEN BEGIN MAXSAVESTACK:=SAVEPTR;
IF MAXSAVESTACK>SAVESIZE-6 THEN OVERFLOW(541,SAVESIZE);END;
SAVESTACK[SAVEPTR].HH.B0:=3;SAVESTACK[SAVEPTR].HH.B1:=CURGROUP;
SAVESTACK[SAVEPTR].HH.RH:=CURBOUNDARY;
IF CURLEVEL=255 THEN OVERFLOW(542,255);CURBOUNDARY:=SAVEPTR;
CURLEVEL:=CURLEVEL+1;SAVEPTR:=SAVEPTR+1;CURGROUP:=C;END;
{:274}{275:}PROCEDURE EQDESTROY(W:MEMORYWORD);VAR Q:HALFWORD;
BEGIN CASE W.HH.B0 OF 111,112,113,114:DELETETOKENR(W.HH.RH);
117:DELETEGLUERE(W.HH.RH);118:BEGIN Q:=W.HH.RH;
IF Q<>0 THEN FREENODE(Q,MEM[Q].HH.LH+MEM[Q].HH.LH+1);END;
119:FLUSHNODELIS(W.HH.RH);ELSE END;END;
{:275}{276:}PROCEDURE EQSAVE(P:HALFWORD;L:QUARTERWORD);
BEGIN IF SAVEPTR>MAXSAVESTACK THEN BEGIN MAXSAVESTACK:=SAVEPTR;
IF MAXSAVESTACK>SAVESIZE-6 THEN OVERFLOW(541,SAVESIZE);END;
IF L=0 THEN SAVESTACK[SAVEPTR].HH.B0:=1 ELSE BEGIN SAVESTACK[SAVEPTR]:=
EQTB[P];SAVEPTR:=SAVEPTR+1;SAVESTACK[SAVEPTR].HH.B0:=0;END;
SAVESTACK[SAVEPTR].HH.B1:=L;SAVESTACK[SAVEPTR].HH.RH:=P;
SAVEPTR:=SAVEPTR+1;END;{:276}{277:}PROCEDURE EQDEFINE(P:HALFWORD;
T:QUARTERWORD;E:HALFWORD);
BEGIN IF EQTB[P].HH.B1=CURLEVEL THEN EQDESTROY(EQTB[P])ELSE IF CURLEVEL>
1 THEN EQSAVE(P,EQTB[P].HH.B1);EQTB[P].HH.B1:=CURLEVEL;EQTB[P].HH.B0:=T;
EQTB[P].HH.RH:=E;END;{:277}{278:}PROCEDURE EQWORDDEFINE(P:HALFWORD;
W:INTEGER);
BEGIN IF XEQLEVEL[P]<>CURLEVEL THEN BEGIN EQSAVE(P,XEQLEVEL[P]);
XEQLEVEL[P]:=CURLEVEL;END;EQTB[P].INT:=W;END;
{:278}{279:}PROCEDURE GEQDEFINE(P:HALFWORD;T:QUARTERWORD;E:HALFWORD);
BEGIN EQDESTROY(EQTB[P]);EQTB[P].HH.B1:=1;EQTB[P].HH.B0:=T;
EQTB[P].HH.RH:=E;END;PROCEDURE GEQWORDDEFIN(P:HALFWORD;W:INTEGER);
BEGIN EQTB[P].INT:=W;XEQLEVEL[P]:=1;END;
{:279}{280:}PROCEDURE SAVEFORAFTER(T:HALFWORD);
BEGIN IF CURLEVEL>1 THEN BEGIN IF SAVEPTR>MAXSAVESTACK THEN BEGIN
MAXSAVESTACK:=SAVEPTR;
IF MAXSAVESTACK>SAVESIZE-6 THEN OVERFLOW(541,SAVESIZE);END;
SAVESTACK[SAVEPTR].HH.B0:=2;SAVESTACK[SAVEPTR].HH.B1:=0;
SAVESTACK[SAVEPTR].HH.RH:=T;SAVEPTR:=SAVEPTR+1;END;END;
{:280}{281:}{284:}PROCEDURE RESTORETRACE(P:HALFWORD;S:STRNUMBER);
BEGIN BEGINDIAGNOS;PRINTCHAR(123);PRINT(S);PRINTCHAR(32);SHOWEQTB(P);
PRINTCHAR(125);ENDDIAGNOSTI(FALSE);END;{:284}PROCEDURE BACKINPUT;
FORWARD;PROCEDURE UNSAVE;LABEL 30;VAR P:HALFWORD;L:QUARTERWORD;
T:HALFWORD;BEGIN IF CURLEVEL>1 THEN BEGIN CURLEVEL:=CURLEVEL-1;
{282:}WHILE TRUE DO BEGIN SAVEPTR:=SAVEPTR-1;
IF SAVESTACK[SAVEPTR].HH.B0=3 THEN GOTO 30;P:=SAVESTACK[SAVEPTR].HH.RH;
IF SAVESTACK[SAVEPTR].HH.B0=2 THEN{326:}BEGIN T:=CURTOK;CURTOK:=P;
BACKINPUT;CURTOK:=T;
END{:326}ELSE BEGIN IF SAVESTACK[SAVEPTR].HH.B0=0 THEN BEGIN L:=
SAVESTACK[SAVEPTR].HH.B1;SAVEPTR:=SAVEPTR-1;
END ELSE SAVESTACK[SAVEPTR]:=EQTB[2881];
{283:}IF P<5263 THEN IF EQTB[P].HH.B1=1 THEN BEGIN EQDESTROY(SAVESTACK[
SAVEPTR]);IF EQTB[5300].INT>0 THEN RESTORETRACE(P,544);
END ELSE BEGIN EQDESTROY(EQTB[P]);EQTB[P]:=SAVESTACK[SAVEPTR];
IF EQTB[5300].INT>0 THEN RESTORETRACE(P,545);
END ELSE IF XEQLEVEL[P]<>1 THEN BEGIN EQTB[P]:=SAVESTACK[SAVEPTR];
XEQLEVEL[P]:=L;IF EQTB[5300].INT>0 THEN RESTORETRACE(P,545);
END ELSE BEGIN IF EQTB[5300].INT>0 THEN RESTORETRACE(P,544);END{:283};
END;END;30:CURGROUP:=SAVESTACK[SAVEPTR].HH.B1;
CURBOUNDARY:=SAVESTACK[SAVEPTR].HH.RH{:282};END ELSE CONFUSION(543);END;
{:281}{288:}PROCEDURE PREPAREMAG;
BEGIN IF(MAGSET>0)AND(EQTB[5280].INT<>MAGSET)THEN BEGIN BEGIN IF
INTERACTION=3 THEN;PRINTNL(262);PRINT(547);END;PRINTINT(EQTB[5280].INT);
PRINT(548);PRINTNL(549);BEGIN HELPPTR:=2;HELPLINE[1]:=550;
HELPLINE[0]:=551;END;INTERROR(MAGSET);GEQWORDDEFIN(5280,MAGSET);END;
IF(EQTB[5280].INT<=0)OR(EQTB[5280].INT>32768)THEN BEGIN BEGIN IF
INTERACTION=3 THEN;PRINTNL(262);PRINT(552);END;BEGIN HELPPTR:=1;
HELPLINE[0]:=553;END;INTERROR(EQTB[5280].INT);GEQWORDDEFIN(5280,1000);
END;MAGSET:=EQTB[5280].INT;END;
{:288}{295:}PROCEDURE TOKENSHOW(P:HALFWORD);
BEGIN IF P<>0 THEN SHOWTOKENLIS(MEM[P].HH.RH,0,10000000);END;
{:295}{296:}PROCEDURE PRINTMEANING;BEGIN PRINTCMDCHR(CURCMD,CURCHR);
IF CURCMD>=111 THEN BEGIN PRINTCHAR(58);PRINTLN;TOKENSHOW(CURCHR);
END ELSE IF CURCMD=110 THEN BEGIN PRINTCHAR(58);PRINTLN;
TOKENSHOW(CURMARK[CURCHR]);END;END;{:296}{299:}PROCEDURE SHOWCURCMDCH;
BEGIN BEGINDIAGNOS;PRINTNL(123);
IF CURLIST.MODEFIELD<>SHOWNMODE THEN BEGIN PRINTMODE(CURLIST.MODEFIELD);
PRINT(568);SHOWNMODE:=CURLIST.MODEFIELD;END;PRINTCMDCHR(CURCMD,CURCHR);
PRINTCHAR(125);ENDDIAGNOSTI(FALSE);END;
{:299}{311:}PROCEDURE SHOWCONTEXT;LABEL 30;VAR OLDSETTING:0..21;
NN:INTEGER;BOTTOMLINE:BOOLEAN;{315:}I:0..BUFSIZE;J:0..BUFSIZE;
L:0..HALFERRORLIN;M:INTEGER;N:0..ERRORLINE;P:INTEGER;Q:INTEGER;
{:315}BEGIN BASEPTR:=INPUTPTR;INPUTSTACK[BASEPTR]:=CURINPUT;NN:=-1;
BOTTOMLINE:=FALSE;WHILE TRUE DO BEGIN CURINPUT:=INPUTSTACK[BASEPTR];
IF(CURINPUT.STATEFIELD<>0)THEN IF(CURINPUT.NAMEFIELD>17)OR(BASEPTR=0)
THEN BOTTOMLINE:=TRUE;
IF(BASEPTR=INPUTPTR)OR BOTTOMLINE OR(NN<EQTB[5317].INT)THEN{312:}BEGIN
IF(BASEPTR=INPUTPTR)OR(CURINPUT.STATEFIELD<>0)OR(CURINPUT.INDEXFIELD<>3)
OR(CURINPUT.LOCFIELD<>0)THEN BEGIN TALLY:=0;OLDSETTING:=SELECTOR;
IF CURINPUT.STATEFIELD<>0 THEN BEGIN{313:}IF CURINPUT.NAMEFIELD<=17 THEN
IF(CURINPUT.NAMEFIELD=0)THEN IF BASEPTR=0 THEN PRINTNL(574)ELSE PRINTNL(
575)ELSE BEGIN PRINTNL(576);
IF CURINPUT.NAMEFIELD=17 THEN PRINTCHAR(42)ELSE PRINTINT(CURINPUT.
NAMEFIELD-1);PRINTCHAR(62);END ELSE BEGIN PRINTNL(577);PRINTINT(LINE);
END;PRINTCHAR(32){:313};{318:}BEGIN L:=TALLY;TALLY:=0;SELECTOR:=20;
TRICKCOUNT:=1000000;END;
IF BUFFER[CURINPUT.LIMITFIELD]=EQTB[5311].INT THEN J:=CURINPUT.
LIMITFIELD ELSE J:=CURINPUT.LIMITFIELD+1;
IF J>0 THEN FOR I:=CURINPUT.STARTFIELD TO J-1 DO BEGIN IF I=CURINPUT.
LOCFIELD THEN BEGIN FIRSTCOUNT:=TALLY;
TRICKCOUNT:=TALLY+1+ERRORLINE-HALFERRORLIN;
IF TRICKCOUNT<ERRORLINE THEN TRICKCOUNT:=ERRORLINE;END;PRINT(BUFFER[I]);
END{:318};
END ELSE BEGIN{314:}CASE CURINPUT.INDEXFIELD OF 0:PRINTNL(578);
1,2:PRINTNL(579);
3:IF CURINPUT.LOCFIELD=0 THEN PRINTNL(580)ELSE PRINTNL(581);
4:PRINTNL(582);5:BEGIN PRINTLN;PRINTCS(CURINPUT.NAMEFIELD);END;
6:PRINTNL(583);7:PRINTNL(584);8:PRINTNL(585);9:PRINTNL(586);
10:PRINTNL(587);11:PRINTNL(588);12:PRINTNL(589);13:PRINTNL(590);
14:PRINTNL(591);15:PRINTNL(592);ELSE PRINTNL(63)END{:314};
{319:}BEGIN L:=TALLY;TALLY:=0;SELECTOR:=20;TRICKCOUNT:=1000000;END;
IF CURINPUT.INDEXFIELD<5 THEN SHOWTOKENLIS(CURINPUT.STARTFIELD,CURINPUT.
LOCFIELD,100000)ELSE SHOWTOKENLIS(MEM[CURINPUT.STARTFIELD].HH.RH,
CURINPUT.LOCFIELD,100000){:319};END;SELECTOR:=OLDSETTING;
{317:}IF TRICKCOUNT=1000000 THEN BEGIN FIRSTCOUNT:=TALLY;
TRICKCOUNT:=TALLY+1+ERRORLINE-HALFERRORLIN;
IF TRICKCOUNT<ERRORLINE THEN TRICKCOUNT:=ERRORLINE;END;
IF TALLY<TRICKCOUNT THEN M:=TALLY-FIRSTCOUNT ELSE M:=TRICKCOUNT-
FIRSTCOUNT;IF L+FIRSTCOUNT<=HALFERRORLIN THEN BEGIN P:=0;
N:=L+FIRSTCOUNT;END ELSE BEGIN PRINT(277);
P:=L+FIRSTCOUNT-HALFERRORLIN+3;N:=HALFERRORLIN;END;
FOR Q:=P TO FIRSTCOUNT-1 DO PRINTCHAR(TRICKBUF[Q MOD ERRORLINE]);
PRINTLN;FOR Q:=1 TO N DO PRINTCHAR(32);
IF M+N<=ERRORLINE THEN P:=FIRSTCOUNT+M ELSE P:=FIRSTCOUNT+(ERRORLINE-N-3
);FOR Q:=FIRSTCOUNT TO P-1 DO PRINTCHAR(TRICKBUF[Q MOD ERRORLINE]);
IF M+N>ERRORLINE THEN PRINT(277){:317};NN:=NN+1;END;
END{:312}ELSE IF NN=EQTB[5317].INT THEN BEGIN PRINTNL(277);NN:=NN+1;END;
IF BOTTOMLINE THEN GOTO 30;BASEPTR:=BASEPTR-1;END;
30:CURINPUT:=INPUTSTACK[INPUTPTR];END;
{:311}{323:}PROCEDURE BEGINTOKENLI(P:HALFWORD;T:QUARTERWORD);
BEGIN BEGIN IF INPUTPTR>MAXINSTACK THEN BEGIN MAXINSTACK:=INPUTPTR;
IF INPUTPTR=STACKSIZE THEN OVERFLOW(593,STACKSIZE);END;
INPUTSTACK[INPUTPTR]:=CURINPUT;INPUTPTR:=INPUTPTR+1;END;
CURINPUT.STATEFIELD:=0;CURINPUT.STARTFIELD:=P;CURINPUT.INDEXFIELD:=T;
IF T>=5 THEN BEGIN MEM[P].HH.LH:=MEM[P].HH.LH+1;
IF T=5 THEN CURINPUT.LIMITFIELD:=PARAMPTR ELSE BEGIN CURINPUT.LOCFIELD:=
MEM[P].HH.RH;IF EQTB[5293].INT>1 THEN BEGIN BEGINDIAGNOS;PRINTNL(338);
CASE T OF 14:PRINTESC(351);15:PRINTESC(594);
ELSE PRINTCMDCHR(72,T+3407)END;PRINT(556);TOKENSHOW(P);
ENDDIAGNOSTI(FALSE);END;END;END ELSE CURINPUT.LOCFIELD:=P;END;
{:323}{324:}PROCEDURE ENDTOKENLIST;
BEGIN IF CURINPUT.INDEXFIELD>=3 THEN BEGIN IF CURINPUT.INDEXFIELD<=4
THEN FLUSHLIST(CURINPUT.STARTFIELD)ELSE BEGIN DELETETOKENR(CURINPUT.
STARTFIELD);
IF CURINPUT.INDEXFIELD=5 THEN WHILE PARAMPTR>CURINPUT.LIMITFIELD DO
BEGIN PARAMPTR:=PARAMPTR-1;FLUSHLIST(PARAMSTACK[PARAMPTR]);END;END;
END ELSE IF CURINPUT.INDEXFIELD=1 THEN IF ALIGNSTATE>500000 THEN
ALIGNSTATE:=0 ELSE FATALERROR(595);BEGIN INPUTPTR:=INPUTPTR-1;
CURINPUT:=INPUTSTACK[INPUTPTR];END;
BEGIN IF INTERRUPT<>0 THEN PAUSEFORINST;END;END;
{:324}{325:}PROCEDURE BACKINPUT;VAR P:HALFWORD;
BEGIN WHILE(CURINPUT.STATEFIELD=0)AND(CURINPUT.LOCFIELD=0)AND(CURINPUT.
INDEXFIELD<>2)DO ENDTOKENLIST;P:=GETAVAIL;MEM[P].HH.LH:=CURTOK;
IF CURTOK<768 THEN IF CURTOK<512 THEN ALIGNSTATE:=ALIGNSTATE-1 ELSE
ALIGNSTATE:=ALIGNSTATE+1;
BEGIN IF INPUTPTR>MAXINSTACK THEN BEGIN MAXINSTACK:=INPUTPTR;
IF INPUTPTR=STACKSIZE THEN OVERFLOW(593,STACKSIZE);END;
INPUTSTACK[INPUTPTR]:=CURINPUT;INPUTPTR:=INPUTPTR+1;END;
CURINPUT.STATEFIELD:=0;CURINPUT.STARTFIELD:=P;CURINPUT.INDEXFIELD:=3;
CURINPUT.LOCFIELD:=P;END;{:325}{327:}PROCEDURE BACKERROR;
BEGIN OKTOINTERRUP:=FALSE;BACKINPUT;OKTOINTERRUP:=TRUE;ERROR;END;
PROCEDURE INSERROR;BEGIN OKTOINTERRUP:=FALSE;BACKINPUT;
CURINPUT.INDEXFIELD:=4;OKTOINTERRUP:=TRUE;ERROR;END;
{:327}{328:}PROCEDURE BEGINFILEREA;
BEGIN IF INOPEN=MAXINOPEN THEN OVERFLOW(596,MAXINOPEN);
IF FIRST=BUFSIZE THEN OVERFLOW(256,BUFSIZE);INOPEN:=INOPEN+1;
BEGIN IF INPUTPTR>MAXINSTACK THEN BEGIN MAXINSTACK:=INPUTPTR;
IF INPUTPTR=STACKSIZE THEN OVERFLOW(593,STACKSIZE);END;
INPUTSTACK[INPUTPTR]:=CURINPUT;INPUTPTR:=INPUTPTR+1;END;
CURINPUT.INDEXFIELD:=INOPEN;LINESTACK[CURINPUT.INDEXFIELD]:=LINE;
CURINPUT.STARTFIELD:=FIRST;CURINPUT.STATEFIELD:=1;CURINPUT.NAMEFIELD:=0;
END;{:328}{329:}PROCEDURE ENDFILEREADI;BEGIN FIRST:=CURINPUT.STARTFIELD;
LINE:=LINESTACK[CURINPUT.INDEXFIELD];
IF CURINPUT.NAMEFIELD>17 THEN ACLOSE(INPUTFILE[CURINPUT.INDEXFIELD]);
BEGIN INPUTPTR:=INPUTPTR-1;CURINPUT:=INPUTSTACK[INPUTPTR];END;
INOPEN:=INOPEN-1;END;{:329}{330:}PROCEDURE CLEARFORERRO;
BEGIN WHILE(CURINPUT.STATEFIELD<>0)AND(CURINPUT.NAMEFIELD=0)AND(INPUTPTR
>0)AND(CURINPUT.LOCFIELD>CURINPUT.LIMITFIELD)DO ENDFILEREADI;PRINTLN;;
END;{:330}{336:}PROCEDURE CHECKOUTERVA;VAR P:HALFWORD;Q:HALFWORD;
BEGIN IF SCANNERSTATU<>0 THEN BEGIN DELETIONSALL:=FALSE;
{337:}IF CURCS<>0 THEN BEGIN IF(CURINPUT.STATEFIELD=0)OR(CURINPUT.
NAMEFIELD<1)OR(CURINPUT.NAMEFIELD>17)THEN BEGIN P:=GETAVAIL;
MEM[P].HH.LH:=4095+CURCS;BEGINTOKENLI(P,3);END;CURCMD:=10;CURCHR:=32;
END{:337};IF SCANNERSTATU>1 THEN{338:}BEGIN RUNAWAY;
IF CURCS=0 THEN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(604);
END ELSE BEGIN CURCS:=0;BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(605);END;END;PRINT(606);{339:}P:=GETAVAIL;
CASE SCANNERSTATU OF 2:BEGIN PRINT(570);MEM[P].HH.LH:=637;END;
3:BEGIN PRINT(612);MEM[P].HH.LH:=PARTOKEN;LONGSTATE:=113;END;
4:BEGIN PRINT(572);MEM[P].HH.LH:=637;Q:=P;P:=GETAVAIL;MEM[P].HH.RH:=Q;
MEM[P].HH.LH:=6710;ALIGNSTATE:=-1000000;END;5:BEGIN PRINT(573);
MEM[P].HH.LH:=637;END;END;BEGINTOKENLI(P,4){:339};PRINT(607);
SPRINTCS(WARNINGINDEX);BEGIN HELPPTR:=4;HELPLINE[3]:=608;
HELPLINE[2]:=609;HELPLINE[1]:=610;HELPLINE[0]:=611;END;ERROR;
END{:338}ELSE BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(598);
END;PRINTCMDCHR(105,CURIF);PRINT(599);PRINTINT(SKIPLINE);
BEGIN HELPPTR:=3;HELPLINE[2]:=600;HELPLINE[1]:=601;HELPLINE[0]:=602;END;
IF CURCS<>0 THEN CURCS:=0 ELSE HELPLINE[2]:=603;CURTOK:=6713;INSERROR;
END;DELETIONSALL:=TRUE;END;END;{:336}{340:}PROCEDURE FIRMUPTHELIN;
FORWARD;{:340}{341:}PROCEDURE GETNEXT;LABEL 20,25,21,26,40,10;
VAR K:0..BUFSIZE;T:HALFWORD;CAT:0..15;C,CC:ASCIICODE;D:2..3;
BEGIN 20:CURCS:=0;
IF CURINPUT.STATEFIELD<>0 THEN{343:}BEGIN 25:IF CURINPUT.LOCFIELD<=
CURINPUT.LIMITFIELD THEN BEGIN CURCHR:=BUFFER[CURINPUT.LOCFIELD];
CURINPUT.LOCFIELD:=CURINPUT.LOCFIELD+1;
21:CURCMD:=EQTB[3983+CURCHR].HH.RH;
{344:}CASE CURINPUT.STATEFIELD+CURCMD OF{345:}10,26,42,27,43{:345}:GOTO
25;
1,17,33:{354:}BEGIN IF CURINPUT.LOCFIELD>CURINPUT.LIMITFIELD THEN CURCS
:=513 ELSE BEGIN 26:K:=CURINPUT.LOCFIELD;CURCHR:=BUFFER[K];
CAT:=EQTB[3983+CURCHR].HH.RH;K:=K+1;
IF CAT=11 THEN CURINPUT.STATEFIELD:=17 ELSE IF CAT=10 THEN CURINPUT.
STATEFIELD:=17 ELSE CURINPUT.STATEFIELD:=1;
IF(CAT=11)AND(K<=CURINPUT.LIMITFIELD)THEN{356:}BEGIN REPEAT CURCHR:=
BUFFER[K];CAT:=EQTB[3983+CURCHR].HH.RH;K:=K+1;
UNTIL(CAT<>11)OR(K>CURINPUT.LIMITFIELD);
{355:}BEGIN IF BUFFER[K]=CURCHR THEN IF CAT=7 THEN IF K<CURINPUT.
LIMITFIELD THEN BEGIN C:=BUFFER[K+1];IF C<128 THEN BEGIN D:=2;
IF(((C>=48)AND(C<=57))OR((C>=97)AND(C<=102)))THEN IF K+2<=CURINPUT.
LIMITFIELD THEN BEGIN CC:=BUFFER[K+2];
IF(((CC>=48)AND(CC<=57))OR((CC>=97)AND(CC<=102)))THEN D:=D+1;END;
IF D>2 THEN BEGIN IF C<=57 THEN CURCHR:=C-48 ELSE CURCHR:=C-87;
IF CC<=57 THEN CURCHR:=16*CURCHR+CC-48 ELSE CURCHR:=16*CURCHR+CC-87;
BUFFER[K-1]:=CURCHR;
END ELSE IF C<64 THEN BUFFER[K-1]:=C+64 ELSE BUFFER[K-1]:=C-64;
CURINPUT.LIMITFIELD:=CURINPUT.LIMITFIELD-D;FIRST:=FIRST-D;
WHILE K<=CURINPUT.LIMITFIELD DO BEGIN BUFFER[K]:=BUFFER[K+D];K:=K+1;END;
GOTO 26;END;END;END{:355};IF CAT<>11 THEN K:=K-1;
IF K>CURINPUT.LOCFIELD+1 THEN BEGIN CURCS:=IDLOOKUP(CURINPUT.LOCFIELD,K-
CURINPUT.LOCFIELD);CURINPUT.LOCFIELD:=K;GOTO 40;END;
END{:356}ELSE{355:}BEGIN IF BUFFER[K]=CURCHR THEN IF CAT=7 THEN IF K<
CURINPUT.LIMITFIELD THEN BEGIN C:=BUFFER[K+1];IF C<128 THEN BEGIN D:=2;
IF(((C>=48)AND(C<=57))OR((C>=97)AND(C<=102)))THEN IF K+2<=CURINPUT.
LIMITFIELD THEN BEGIN CC:=BUFFER[K+2];
IF(((CC>=48)AND(CC<=57))OR((CC>=97)AND(CC<=102)))THEN D:=D+1;END;
IF D>2 THEN BEGIN IF C<=57 THEN CURCHR:=C-48 ELSE CURCHR:=C-87;
IF CC<=57 THEN CURCHR:=16*CURCHR+CC-48 ELSE CURCHR:=16*CURCHR+CC-87;
BUFFER[K-1]:=CURCHR;
END ELSE IF C<64 THEN BUFFER[K-1]:=C+64 ELSE BUFFER[K-1]:=C-64;
CURINPUT.LIMITFIELD:=CURINPUT.LIMITFIELD-D;FIRST:=FIRST-D;
WHILE K<=CURINPUT.LIMITFIELD DO BEGIN BUFFER[K]:=BUFFER[K+D];K:=K+1;END;
GOTO 26;END;END;END{:355};CURCS:=257+BUFFER[CURINPUT.LOCFIELD];
CURINPUT.LOCFIELD:=CURINPUT.LOCFIELD+1;END;40:CURCMD:=EQTB[CURCS].HH.B0;
CURCHR:=EQTB[CURCS].HH.RH;IF CURCMD>=113 THEN CHECKOUTERVA;END{:354};
14,30,46:{353:}BEGIN CURCS:=CURCHR+1;CURCMD:=EQTB[CURCS].HH.B0;
CURCHR:=EQTB[CURCS].HH.RH;CURINPUT.STATEFIELD:=1;
IF CURCMD>=113 THEN CHECKOUTERVA;END{:353};
8,24,40:{352:}BEGIN IF CURCHR=BUFFER[CURINPUT.LOCFIELD]THEN IF CURINPUT.
LOCFIELD<CURINPUT.LIMITFIELD THEN BEGIN C:=BUFFER[CURINPUT.LOCFIELD+1];
IF C<128 THEN BEGIN CURINPUT.LOCFIELD:=CURINPUT.LOCFIELD+2;
IF(((C>=48)AND(C<=57))OR((C>=97)AND(C<=102)))THEN IF CURINPUT.LOCFIELD<=
CURINPUT.LIMITFIELD THEN BEGIN CC:=BUFFER[CURINPUT.LOCFIELD];
IF(((CC>=48)AND(CC<=57))OR((CC>=97)AND(CC<=102)))THEN BEGIN CURINPUT.
LOCFIELD:=CURINPUT.LOCFIELD+1;
IF C<=57 THEN CURCHR:=C-48 ELSE CURCHR:=C-87;
IF CC<=57 THEN CURCHR:=16*CURCHR+CC-48 ELSE CURCHR:=16*CURCHR+CC-87;
GOTO 21;END;END;IF C<64 THEN CURCHR:=C+64 ELSE CURCHR:=C-64;GOTO 21;END;
END;CURINPUT.STATEFIELD:=1;END{:352};
16,32,48:{346:}BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(613);END;BEGIN HELPPTR:=2;HELPLINE[1]:=614;HELPLINE[0]:=615;END;
DELETIONSALL:=FALSE;ERROR;DELETIONSALL:=TRUE;GOTO 20;END{:346};
{347:}11:{349:}BEGIN CURINPUT.STATEFIELD:=17;CURCHR:=32;END{:349};
6:{348:}BEGIN CURINPUT.LOCFIELD:=CURINPUT.LIMITFIELD+1;CURCMD:=10;
CURCHR:=32;END{:348};
22,15,31,47:{350:}BEGIN CURINPUT.LOCFIELD:=CURINPUT.LIMITFIELD+1;
GOTO 25;END{:350};
38:{351:}BEGIN CURINPUT.LOCFIELD:=CURINPUT.LIMITFIELD+1;CURCS:=PARLOC;
CURCMD:=EQTB[CURCS].HH.B0;CURCHR:=EQTB[CURCS].HH.RH;
IF CURCMD>=113 THEN CHECKOUTERVA;END{:351};2:ALIGNSTATE:=ALIGNSTATE+1;
18,34:BEGIN CURINPUT.STATEFIELD:=1;ALIGNSTATE:=ALIGNSTATE+1;END;
3:ALIGNSTATE:=ALIGNSTATE-1;19,35:BEGIN CURINPUT.STATEFIELD:=1;
ALIGNSTATE:=ALIGNSTATE-1;END;
20,21,23,25,28,29,36,37,39,41,44,45:CURINPUT.STATEFIELD:=1;
{:347}ELSE END{:344};END ELSE BEGIN CURINPUT.STATEFIELD:=33;
{360:}IF CURINPUT.NAMEFIELD>17 THEN{362:}BEGIN LINE:=LINE+1;
FIRST:=CURINPUT.STARTFIELD;
IF NOT FORCEEOF THEN BEGIN IF INPUTLN(INPUTFILE[CURINPUT.INDEXFIELD],
TRUE)THEN FIRMUPTHELIN ELSE FORCEEOF:=TRUE;END;
IF FORCEEOF THEN BEGIN PRINTCHAR(41);OPENPARENS:=OPENPARENS-1;
FLUSH(OUTPUT);FORCEEOF:=FALSE;ENDFILEREADI;CHECKOUTERVA;GOTO 20;END;
IF(EQTB[5311].INT<0)OR(EQTB[5311].INT>255)THEN CURINPUT.LIMITFIELD:=
CURINPUT.LIMITFIELD-1 ELSE BUFFER[CURINPUT.LIMITFIELD]:=EQTB[5311].INT;
FIRST:=CURINPUT.LIMITFIELD+1;CURINPUT.LOCFIELD:=CURINPUT.STARTFIELD;
END{:362}ELSE BEGIN IF NOT(CURINPUT.NAMEFIELD=0)THEN BEGIN CURCMD:=0;
CURCHR:=0;GOTO 10;END;IF INPUTPTR>0 THEN BEGIN ENDFILEREADI;GOTO 20;END;
IF SELECTOR<18 THEN OPENLOGFILE;
IF INTERACTION>1 THEN BEGIN IF(EQTB[5311].INT<0)OR(EQTB[5311].INT>255)
THEN CURINPUT.LIMITFIELD:=CURINPUT.LIMITFIELD+1;
IF CURINPUT.LIMITFIELD=-1 THEN PRINTNL(616);PRINTNL(338);
FIRST:=CURINPUT.STARTFIELD;BEGIN;PRINT(42);TERMINPUT;END;
CURINPUT.LIMITFIELD:=LAST;
IF(EQTB[5311].INT<0)OR(EQTB[5311].INT>255)THEN CURINPUT.LIMITFIELD:=
CURINPUT.LIMITFIELD-1 ELSE BUFFER[CURINPUT.LIMITFIELD]:=EQTB[5311].INT;
FIRST:=CURINPUT.LIMITFIELD+1;CURINPUT.LOCFIELD:=CURINPUT.STARTFIELD;
END ELSE FATALERROR(617);END{:360};
BEGIN IF INTERRUPT<>0 THEN PAUSEFORINST;END;GOTO 25;END;
END{:343}ELSE{357:}IF CURINPUT.LOCFIELD<>0 THEN BEGIN T:=MEM[CURINPUT.
LOCFIELD].HH.LH;CURINPUT.LOCFIELD:=MEM[CURINPUT.LOCFIELD].HH.RH;
IF T>=4095 THEN BEGIN CURCS:=T-4095;CURCMD:=EQTB[CURCS].HH.B0;
CURCHR:=EQTB[CURCS].HH.RH;
IF CURCMD>=113 THEN IF CURCMD=116 THEN{358:}BEGIN CURCS:=MEM[CURINPUT.
LOCFIELD].HH.LH-4095;CURINPUT.LOCFIELD:=0;CURCMD:=EQTB[CURCS].HH.B0;
CURCHR:=EQTB[CURCS].HH.RH;IF CURCMD>100 THEN BEGIN CURCMD:=0;
CURCHR:=257;END;END{:358}ELSE CHECKOUTERVA;
END ELSE BEGIN CURCMD:=T DIV 256;CURCHR:=T MOD 256;
CASE CURCMD OF 1:ALIGNSTATE:=ALIGNSTATE+1;2:ALIGNSTATE:=ALIGNSTATE-1;
5:{359:}BEGIN BEGINTOKENLI(PARAMSTACK[CURINPUT.LIMITFIELD+CURCHR-1],0);
GOTO 20;END{:359};ELSE END;END;END ELSE BEGIN ENDTOKENLIST;GOTO 20;
END{:357};
{342:}IF CURCMD<=5 THEN IF CURCMD>=4 THEN IF ALIGNSTATE=0 THEN{789:}
BEGIN IF(SCANNERSTATU=4)OR(CURALIGN=0)THEN FATALERROR(595);
CURCMD:=MEM[CURALIGN+5].HH.LH;MEM[CURALIGN+5].HH.LH:=CURCHR;
IF CURCMD=63 THEN BEGINTOKENLI(29990,2)ELSE BEGINTOKENLI(MEM[CURALIGN+2]
.INT,2);ALIGNSTATE:=1000000;GOTO 20;END{:789}{:342};10:END;
{:341}{363:}PROCEDURE FIRMUPTHELIN;VAR K:0..BUFSIZE;
BEGIN CURINPUT.LIMITFIELD:=LAST;
IF EQTB[5291].INT>0 THEN IF INTERACTION>1 THEN BEGIN;PRINTLN;
IF CURINPUT.STARTFIELD<CURINPUT.LIMITFIELD THEN FOR K:=CURINPUT.
STARTFIELD TO CURINPUT.LIMITFIELD-1 DO PRINT(BUFFER[K]);
FIRST:=CURINPUT.LIMITFIELD;BEGIN;PRINT(618);TERMINPUT;END;
IF LAST>FIRST THEN BEGIN FOR K:=FIRST TO LAST-1 DO BUFFER[K+CURINPUT.
STARTFIELD-FIRST]:=BUFFER[K];
CURINPUT.LIMITFIELD:=CURINPUT.STARTFIELD+LAST-FIRST;END;END;END;
{:363}{365:}PROCEDURE GETTOKEN;BEGIN NONEWCONTROL:=FALSE;GETNEXT;
NONEWCONTROL:=TRUE;
IF CURCS=0 THEN CURTOK:=(CURCMD*256)+CURCHR ELSE CURTOK:=4095+CURCS;END;
{:365}{366:}{389:}PROCEDURE MACROCALL;LABEL 10,22,30,31,40;
VAR R:HALFWORD;P:HALFWORD;Q:HALFWORD;S:HALFWORD;T:HALFWORD;U,V:HALFWORD;
RBRACEPTR:HALFWORD;N:SMALLNUMBER;UNBALANCE:HALFWORD;M:HALFWORD;
REFCOUNT:HALFWORD;SAVESCANNERS:SMALLNUMBER;SAVEWARNINGI:HALFWORD;
MATCHCHR:ASCIICODE;BEGIN SAVESCANNERS:=SCANNERSTATU;
SAVEWARNINGI:=WARNINGINDEX;WARNINGINDEX:=CURCS;REFCOUNT:=CURCHR;
R:=MEM[REFCOUNT].HH.RH;N:=0;
IF EQTB[5293].INT>0 THEN{401:}BEGIN BEGINDIAGNOS;PRINTLN;
PRINTCS(WARNINGINDEX);TOKENSHOW(REFCOUNT);ENDDIAGNOSTI(FALSE);END{:401};
IF MEM[R].HH.LH<>3584 THEN{391:}BEGIN SCANNERSTATU:=3;UNBALANCE:=0;
LONGSTATE:=EQTB[CURCS].HH.B0;
IF LONGSTATE>=113 THEN LONGSTATE:=LONGSTATE-2;
REPEAT MEM[29997].HH.RH:=0;
IF(MEM[R].HH.LH>3583)OR(MEM[R].HH.LH<3328)THEN S:=0 ELSE BEGIN MATCHCHR
:=MEM[R].HH.LH-3328;S:=MEM[R].HH.RH;R:=S;P:=29997;M:=0;END;
{392:}22:GETTOKEN;
IF CURTOK=MEM[R].HH.LH THEN{394:}BEGIN R:=MEM[R].HH.RH;
IF(MEM[R].HH.LH>=3328)AND(MEM[R].HH.LH<=3584)THEN BEGIN IF CURTOK<512
THEN ALIGNSTATE:=ALIGNSTATE-1;GOTO 40;END ELSE GOTO 22;END{:394};
{397:}IF S<>R THEN IF S=0 THEN{398:}BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(650);END;SPRINTCS(WARNINGINDEX);PRINT(651);
BEGIN HELPPTR:=4;HELPLINE[3]:=652;HELPLINE[2]:=653;HELPLINE[1]:=654;
HELPLINE[0]:=655;END;ERROR;GOTO 10;END{:398}ELSE BEGIN T:=S;
REPEAT BEGIN Q:=GETAVAIL;MEM[P].HH.RH:=Q;MEM[Q].HH.LH:=MEM[T].HH.LH;
P:=Q;END;M:=M+1;U:=MEM[T].HH.RH;V:=S;
WHILE TRUE DO BEGIN IF U=R THEN IF CURTOK<>MEM[V].HH.LH THEN GOTO 30
ELSE BEGIN R:=MEM[V].HH.RH;GOTO 22;END;
IF MEM[U].HH.LH<>MEM[V].HH.LH THEN GOTO 30;U:=MEM[U].HH.RH;
V:=MEM[V].HH.RH;END;30:T:=MEM[T].HH.RH;UNTIL T=R;R:=S;END{:397};
IF CURTOK=PARTOKEN THEN IF LONGSTATE<>112 THEN{396:}BEGIN IF LONGSTATE=
111 THEN BEGIN RUNAWAY;BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(645);END;SPRINTCS(WARNINGINDEX);PRINT(646);BEGIN HELPPTR:=3;
HELPLINE[2]:=647;HELPLINE[1]:=648;HELPLINE[0]:=649;END;BACKERROR;END;
PSTACK[N]:=MEM[29997].HH.RH;ALIGNSTATE:=ALIGNSTATE-UNBALANCE;
FOR M:=0 TO N DO FLUSHLIST(PSTACK[M]);GOTO 10;END{:396};
IF CURTOK<768 THEN IF CURTOK<512 THEN{399:}BEGIN UNBALANCE:=1;
WHILE TRUE DO BEGIN BEGIN BEGIN Q:=AVAIL;
IF Q=0 THEN Q:=GETAVAIL ELSE BEGIN AVAIL:=MEM[Q].HH.RH;MEM[Q].HH.RH:=0;
DYNUSED:=DYNUSED+1;END;END;MEM[P].HH.RH:=Q;MEM[Q].HH.LH:=CURTOK;P:=Q;
END;GETTOKEN;
IF CURTOK=PARTOKEN THEN IF LONGSTATE<>112 THEN{396:}BEGIN IF LONGSTATE=
111 THEN BEGIN RUNAWAY;BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(645);END;SPRINTCS(WARNINGINDEX);PRINT(646);BEGIN HELPPTR:=3;
HELPLINE[2]:=647;HELPLINE[1]:=648;HELPLINE[0]:=649;END;BACKERROR;END;
PSTACK[N]:=MEM[29997].HH.RH;ALIGNSTATE:=ALIGNSTATE-UNBALANCE;
FOR M:=0 TO N DO FLUSHLIST(PSTACK[M]);GOTO 10;END{:396};
IF CURTOK<768 THEN IF CURTOK<512 THEN UNBALANCE:=UNBALANCE+1 ELSE BEGIN
UNBALANCE:=UNBALANCE-1;IF UNBALANCE=0 THEN GOTO 31;END;END;
31:RBRACEPTR:=P;BEGIN Q:=GETAVAIL;MEM[P].HH.RH:=Q;MEM[Q].HH.LH:=CURTOK;
P:=Q;END;END{:399}ELSE{395:}BEGIN BACKINPUT;BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(637);END;SPRINTCS(WARNINGINDEX);PRINT(638);
BEGIN HELPPTR:=6;HELPLINE[5]:=639;HELPLINE[4]:=640;HELPLINE[3]:=641;
HELPLINE[2]:=642;HELPLINE[1]:=643;HELPLINE[0]:=644;END;
ALIGNSTATE:=ALIGNSTATE+1;LONGSTATE:=111;CURTOK:=PARTOKEN;INSERROR;
GOTO 22;
END{:395}ELSE{393:}BEGIN IF CURTOK=2592 THEN IF MEM[R].HH.LH<=3584 THEN
IF MEM[R].HH.LH>=3328 THEN GOTO 22;BEGIN Q:=GETAVAIL;MEM[P].HH.RH:=Q;
MEM[Q].HH.LH:=CURTOK;P:=Q;END;END{:393};M:=M+1;
IF MEM[R].HH.LH>3584 THEN GOTO 22;IF MEM[R].HH.LH<3328 THEN GOTO 22;
40:IF S<>0 THEN{400:}BEGIN IF(M=1)AND(MEM[P].HH.LH<768)THEN BEGIN MEM[
RBRACEPTR].HH.RH:=0;BEGIN MEM[P].HH.RH:=AVAIL;AVAIL:=P;
DYNUSED:=DYNUSED-1;END;P:=MEM[29997].HH.RH;PSTACK[N]:=MEM[P].HH.RH;
BEGIN MEM[P].HH.RH:=AVAIL;AVAIL:=P;DYNUSED:=DYNUSED-1;END;
END ELSE PSTACK[N]:=MEM[29997].HH.RH;N:=N+1;
IF EQTB[5293].INT>0 THEN BEGIN BEGINDIAGNOS;PRINTNL(MATCHCHR);
PRINTINT(N);PRINT(656);SHOWTOKENLIS(PSTACK[N-1],0,1000);
ENDDIAGNOSTI(FALSE);END;END{:400}{:392};UNTIL MEM[R].HH.LH=3584;
END{:391};
{390:}WHILE(CURINPUT.STATEFIELD=0)AND(CURINPUT.LOCFIELD=0)AND(CURINPUT.
INDEXFIELD<>2)DO ENDTOKENLIST;BEGINTOKENLI(REFCOUNT,5);
CURINPUT.NAMEFIELD:=WARNINGINDEX;CURINPUT.LOCFIELD:=MEM[R].HH.RH;
IF N>0 THEN BEGIN IF PARAMPTR+N>MAXPARAMSTAC THEN BEGIN MAXPARAMSTAC:=
PARAMPTR+N;IF MAXPARAMSTAC>PARAMSIZE THEN OVERFLOW(636,PARAMSIZE);END;
FOR M:=0 TO N-1 DO PARAMSTACK[PARAMPTR+M]:=PSTACK[M];
PARAMPTR:=PARAMPTR+N;END{:390};10:SCANNERSTATU:=SAVESCANNERS;
WARNINGINDEX:=SAVEWARNINGI;END;{:389}{379:}PROCEDURE INSERTRELAX;
BEGIN CURTOK:=4095+CURCS;BACKINPUT;CURTOK:=6716;BACKINPUT;
CURINPUT.INDEXFIELD:=4;END;{:379}PROCEDURE PASSTEXT;FORWARD;
PROCEDURE STARTINPUT;FORWARD;PROCEDURE CONDITIONAL;FORWARD;
PROCEDURE GETXTOKEN;FORWARD;PROCEDURE CONVTOKS;FORWARD;
PROCEDURE INSTHETOKS;FORWARD;PROCEDURE EXPAND;VAR T:HALFWORD;
P,Q,R:HALFWORD;J:0..BUFSIZE;CVBACKUP:INTEGER;
CVLBACKUP,RADIXBACKUP,COBACKUP:SMALLNUMBER;BACKUPBACKUP:HALFWORD;
SAVESCANNERS:SMALLNUMBER;BEGIN CVBACKUP:=CURVAL;CVLBACKUP:=CURVALLEVEL;
RADIXBACKUP:=RADIX;COBACKUP:=CURORDER;BACKUPBACKUP:=MEM[29987].HH.RH;
IF CURCMD<111 THEN{367:}BEGIN IF EQTB[5299].INT>1 THEN SHOWCURCMDCH;
CASE CURCMD OF 110:{386:}BEGIN IF CURMARK[CURCHR]<>0 THEN BEGINTOKENLI(
CURMARK[CURCHR],14);END{:386};102:{368:}BEGIN GETTOKEN;T:=CURTOK;
GETTOKEN;IF CURCMD>100 THEN EXPAND ELSE BACKINPUT;CURTOK:=T;BACKINPUT;
END{:368};103:{369:}BEGIN SAVESCANNERS:=SCANNERSTATU;SCANNERSTATU:=0;
GETTOKEN;SCANNERSTATU:=SAVESCANNERS;T:=CURTOK;BACKINPUT;
IF T>=4095 THEN BEGIN P:=GETAVAIL;MEM[P].HH.LH:=6718;
MEM[P].HH.RH:=CURINPUT.LOCFIELD;CURINPUT.STARTFIELD:=P;
CURINPUT.LOCFIELD:=P;END;END{:369};107:{372:}BEGIN R:=GETAVAIL;P:=R;
REPEAT GETXTOKEN;IF CURCS=0 THEN BEGIN Q:=GETAVAIL;MEM[P].HH.RH:=Q;
MEM[Q].HH.LH:=CURTOK;P:=Q;END;UNTIL CURCS<>0;
IF CURCMD<>67 THEN{373:}BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(625);END;PRINTESC(505);PRINT(626);BEGIN HELPPTR:=2;
HELPLINE[1]:=627;HELPLINE[0]:=628;END;BACKERROR;END{:373};
{374:}J:=FIRST;P:=MEM[R].HH.RH;
WHILE P<>0 DO BEGIN IF J>=MAXBUFSTACK THEN BEGIN MAXBUFSTACK:=J+1;
IF MAXBUFSTACK=BUFSIZE THEN OVERFLOW(256,BUFSIZE);END;
BUFFER[J]:=MEM[P].HH.LH MOD 256;J:=J+1;P:=MEM[P].HH.RH;END;
IF J>FIRST+1 THEN BEGIN NONEWCONTROL:=FALSE;
CURCS:=IDLOOKUP(FIRST,J-FIRST);NONEWCONTROL:=TRUE;
END ELSE IF J=FIRST THEN CURCS:=513 ELSE CURCS:=257+BUFFER[FIRST]{:374};
FLUSHLIST(R);IF EQTB[CURCS].HH.B0=101 THEN BEGIN EQDEFINE(CURCS,0,256);
END;CURTOK:=CURCS+4095;BACKINPUT;END{:372};108:CONVTOKS;109:INSTHETOKS;
105:CONDITIONAL;
106:{510:}IF CURCHR>IFLIMIT THEN IF IFLIMIT=1 THEN INSERTRELAX ELSE
BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(777);END;
PRINTCMDCHR(106,CURCHR);BEGIN HELPPTR:=1;HELPLINE[0]:=778;END;ERROR;
END ELSE BEGIN WHILE CURCHR<>2 DO PASSTEXT;{496:}BEGIN P:=CONDPTR;
IFLINE:=MEM[P+1].INT;CURIF:=MEM[P].HH.B1;IFLIMIT:=MEM[P].HH.B0;
CONDPTR:=MEM[P].HH.RH;FREENODE(P,2);END{:496};END{:510};
104:{378:}IF CURCHR>0 THEN FORCEEOF:=TRUE ELSE IF NAMEINPROGRE THEN
INSERTRELAX ELSE STARTINPUT{:378};
ELSE{370:}BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(619);END;
BEGIN HELPPTR:=5;HELPLINE[4]:=620;HELPLINE[3]:=621;HELPLINE[2]:=622;
HELPLINE[1]:=623;HELPLINE[0]:=624;END;ERROR;END{:370}END;
END{:367}ELSE IF CURCMD<115 THEN MACROCALL ELSE{375:}BEGIN CURTOK:=6715;
BACKINPUT;END{:375};CURVAL:=CVBACKUP;CURVALLEVEL:=CVLBACKUP;
RADIX:=RADIXBACKUP;CURORDER:=COBACKUP;MEM[29987].HH.RH:=BACKUPBACKUP;
END;{:366}{380:}PROCEDURE GETXTOKEN;LABEL 20,30;BEGIN 20:GETNEXT;
IF CURCMD<=100 THEN GOTO 30;
IF CURCMD>=111 THEN IF CURCMD<115 THEN MACROCALL ELSE BEGIN CURCS:=2620;
CURCMD:=9;GOTO 30;END ELSE EXPAND;GOTO 20;
30:IF CURCS=0 THEN CURTOK:=(CURCMD*256)+CURCHR ELSE CURTOK:=4095+CURCS;
END;{:380}{381:}PROCEDURE XTOKEN;BEGIN WHILE CURCMD>100 DO BEGIN EXPAND;
GETNEXT;END;
IF CURCS=0 THEN CURTOK:=(CURCMD*256)+CURCHR ELSE CURTOK:=4095+CURCS;END;
{:381}{403:}PROCEDURE SCANLEFTBRAC;BEGIN{404:}REPEAT GETXTOKEN;
UNTIL(CURCMD<>10)AND(CURCMD<>0){:404};
IF CURCMD<>1 THEN BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(657);END;BEGIN HELPPTR:=4;HELPLINE[3]:=658;HELPLINE[2]:=659;
HELPLINE[1]:=660;HELPLINE[0]:=661;END;BACKERROR;CURTOK:=379;CURCMD:=1;
CURCHR:=123;ALIGNSTATE:=ALIGNSTATE+1;END;END;
{:403}{405:}PROCEDURE SCANOPTIONAL;BEGIN{406:}REPEAT GETXTOKEN;
UNTIL CURCMD<>10{:406};IF CURTOK<>3133 THEN BACKINPUT;END;
{:405}{407:}FUNCTION SCANKEYWORD(S:STRNUMBER):BOOLEAN;LABEL 10;
VAR P:HALFWORD;Q:HALFWORD;K:POOLPOINTER;BEGIN P:=29987;MEM[P].HH.RH:=0;
K:=STRSTART[S];WHILE K<STRSTART[S+1]DO BEGIN GETXTOKEN;
IF(CURCS=0)AND((CURCHR=STRPOOL[K])OR(CURCHR=STRPOOL[K]-32))THEN BEGIN
BEGIN Q:=GETAVAIL;MEM[P].HH.RH:=Q;MEM[Q].HH.LH:=CURTOK;P:=Q;END;K:=K+1;
END ELSE IF(CURCMD<>10)OR(P<>29987)THEN BEGIN BACKINPUT;
IF P<>29987 THEN BEGINTOKENLI(MEM[29987].HH.RH,3);SCANKEYWORD:=FALSE;
GOTO 10;END;END;FLUSHLIST(MEM[29987].HH.RH);SCANKEYWORD:=TRUE;10:END;
{:407}{408:}PROCEDURE MUERROR;BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(662);END;BEGIN HELPPTR:=1;HELPLINE[0]:=663;END;ERROR;
END;{:408}{409:}PROCEDURE SCANINT;FORWARD;{433:}PROCEDURE SCANEIGHTBIT;
BEGIN SCANINT;
IF(CURVAL<0)OR(CURVAL>255)THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(687);END;BEGIN HELPPTR:=2;HELPLINE[1]:=688;
HELPLINE[0]:=689;END;INTERROR(CURVAL);CURVAL:=0;END;END;
{:433}{434:}PROCEDURE SCANCHARNUM;BEGIN SCANINT;
IF(CURVAL<0)OR(CURVAL>255)THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(690);END;BEGIN HELPPTR:=2;HELPLINE[1]:=691;
HELPLINE[0]:=689;END;INTERROR(CURVAL);CURVAL:=0;END;END;
{:434}{435:}PROCEDURE SCANFOURBITI;BEGIN SCANINT;
IF(CURVAL<0)OR(CURVAL>15)THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(692);END;BEGIN HELPPTR:=2;HELPLINE[1]:=693;
HELPLINE[0]:=689;END;INTERROR(CURVAL);CURVAL:=0;END;END;
{:435}{436:}PROCEDURE SCANFIFTEENB;BEGIN SCANINT;
IF(CURVAL<0)OR(CURVAL>32767)THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(694);END;BEGIN HELPPTR:=2;HELPLINE[1]:=695;
HELPLINE[0]:=689;END;INTERROR(CURVAL);CURVAL:=0;END;END;
{:436}{437:}PROCEDURE SCANTWENTYSE;BEGIN SCANINT;
IF(CURVAL<0)OR(CURVAL>134217727)THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(696);END;BEGIN HELPPTR:=2;HELPLINE[1]:=697;
HELPLINE[0]:=689;END;INTERROR(CURVAL);CURVAL:=0;END;END;
{:437}{577:}PROCEDURE SCANFONTIDEN;VAR F:INTERNALFONT;M:HALFWORD;
BEGIN{406:}REPEAT GETXTOKEN;UNTIL CURCMD<>10{:406};
IF CURCMD=88 THEN F:=EQTB[3934].HH.RH ELSE IF CURCMD=87 THEN F:=CURCHR
ELSE IF CURCMD=86 THEN BEGIN M:=CURCHR;SCANFOURBITI;
F:=EQTB[M+CURVAL].HH.RH;END ELSE BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(818);END;BEGIN HELPPTR:=2;HELPLINE[1]:=819;
HELPLINE[0]:=820;END;BACKERROR;F:=0;END;CURVAL:=F;END;
{:577}{578:}PROCEDURE FINDFONTDIME(WRITING:BOOLEAN);VAR F:INTERNALFONT;
N:INTEGER;BEGIN SCANINT;N:=CURVAL;SCANFONTIDEN;F:=CURVAL;
IF N<=0 THEN CURVAL:=FMEMPTR ELSE BEGIN IF WRITING AND(N<=4)AND(N>=2)AND
(FONTGLUE[F]<>0)THEN BEGIN DELETEGLUERE(FONTGLUE[F]);FONTGLUE[F]:=0;END;
IF N>FONTPARAMS[F]THEN IF F<FONTPTR THEN CURVAL:=FMEMPTR ELSE{580:}BEGIN
REPEAT IF FMEMPTR=FONTMEMSIZE THEN OVERFLOW(825,FONTMEMSIZE);
FONTINFO[FMEMPTR].INT:=0;FMEMPTR:=FMEMPTR+1;
FONTPARAMS[F]:=FONTPARAMS[F]+1;UNTIL N=FONTPARAMS[F];CURVAL:=FMEMPTR-1;
END{:580}ELSE CURVAL:=N+PARAMBASE[F];END;
{579:}IF CURVAL=FMEMPTR THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(803);END;PRINTESC(HASH[2624+F].RH);PRINT(821);
PRINTINT(FONTPARAMS[F]);PRINT(822);BEGIN HELPPTR:=2;HELPLINE[1]:=823;
HELPLINE[0]:=824;END;ERROR;END{:579};END;
{:578}{:409}{413:}PROCEDURE SCANSOMETHIN(LEVEL:SMALLNUMBER;
NEGATIVE:BOOLEAN);VAR M:HALFWORD;P:0..NESTSIZE;BEGIN M:=CURCHR;
CASE CURCMD OF 85:{414:}BEGIN SCANCHARNUM;
IF M=5007 THEN BEGIN CURVAL:=EQTB[5007+CURVAL].HH.RH;CURVALLEVEL:=0;
END ELSE IF M<5007 THEN BEGIN CURVAL:=EQTB[M+CURVAL].HH.RH;
CURVALLEVEL:=0;END ELSE BEGIN CURVAL:=EQTB[M+CURVAL].INT;CURVALLEVEL:=0;
END;END{:414};
71,72,86,87,88:{415:}IF LEVEL<>5 THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(664);END;BEGIN HELPPTR:=3;HELPLINE[2]:=665;
HELPLINE[1]:=666;HELPLINE[0]:=667;END;BACKERROR;BEGIN CURVAL:=0;
CURVALLEVEL:=1;END;
END ELSE IF CURCMD<=72 THEN BEGIN IF CURCMD<72 THEN BEGIN SCANEIGHTBIT;
M:=3422+CURVAL;END;BEGIN CURVAL:=EQTB[M].HH.RH;CURVALLEVEL:=5;END;
END ELSE BEGIN BACKINPUT;SCANFONTIDEN;BEGIN CURVAL:=2624+CURVAL;
CURVALLEVEL:=4;END;END{:415};73:BEGIN CURVAL:=EQTB[M].INT;
CURVALLEVEL:=0;END;74:BEGIN CURVAL:=EQTB[M].INT;CURVALLEVEL:=1;END;
75:BEGIN CURVAL:=EQTB[M].HH.RH;CURVALLEVEL:=2;END;
76:BEGIN CURVAL:=EQTB[M].HH.RH;CURVALLEVEL:=3;END;
79:{418:}IF ABS(CURLIST.MODEFIELD)<>M THEN BEGIN BEGIN IF INTERACTION=3
THEN;PRINTNL(262);PRINT(680);END;PRINTCMDCHR(79,M);BEGIN HELPPTR:=4;
HELPLINE[3]:=681;HELPLINE[2]:=682;HELPLINE[1]:=683;HELPLINE[0]:=684;END;
ERROR;IF LEVEL<>5 THEN BEGIN CURVAL:=0;CURVALLEVEL:=1;
END ELSE BEGIN CURVAL:=0;CURVALLEVEL:=0;END;
END ELSE IF M=1 THEN BEGIN CURVAL:=CURLIST.AUXFIELD.INT;CURVALLEVEL:=1;
END ELSE BEGIN CURVAL:=CURLIST.AUXFIELD.HH.LH;CURVALLEVEL:=0;END{:418};
80:{422:}IF CURLIST.MODEFIELD=0 THEN BEGIN CURVAL:=0;CURVALLEVEL:=0;
END ELSE BEGIN NEST[NESTPTR]:=CURLIST;P:=NESTPTR;
WHILE ABS(NEST[P].MODEFIELD)<>1 DO P:=P-1;BEGIN CURVAL:=NEST[P].PGFIELD;
CURVALLEVEL:=0;END;END{:422};
82:{419:}BEGIN IF M=0 THEN CURVAL:=DEADCYCLES ELSE CURVAL:=INSERTPENALT;
CURVALLEVEL:=0;END{:419};
81:{421:}BEGIN IF(PAGECONTENTS=0)AND(NOT OUTPUTACTIVE)THEN IF M=0 THEN
CURVAL:=1073741823 ELSE CURVAL:=0 ELSE CURVAL:=PAGESOFAR[M];
CURVALLEVEL:=1;END{:421};
84:{423:}BEGIN IF EQTB[3412].HH.RH=0 THEN CURVAL:=0 ELSE CURVAL:=MEM[
EQTB[3412].HH.RH].HH.LH;CURVALLEVEL:=0;END{:423};
83:{420:}BEGIN SCANEIGHTBIT;
IF EQTB[3678+CURVAL].HH.RH=0 THEN CURVAL:=0 ELSE CURVAL:=MEM[EQTB[3678+
CURVAL].HH.RH+M].INT;CURVALLEVEL:=1;END{:420};
68,69:BEGIN CURVAL:=CURCHR;CURVALLEVEL:=0;END;
77:{425:}BEGIN FINDFONTDIME(FALSE);FONTINFO[FMEMPTR].INT:=0;
BEGIN CURVAL:=FONTINFO[CURVAL].INT;CURVALLEVEL:=1;END;END{:425};
78:{426:}BEGIN SCANFONTIDEN;
IF M=0 THEN BEGIN CURVAL:=HYPHENCHAR[CURVAL];CURVALLEVEL:=0;
END ELSE BEGIN CURVAL:=SKEWCHAR[CURVAL];CURVALLEVEL:=0;END;END{:426};
89:{427:}BEGIN SCANEIGHTBIT;CASE M OF 0:CURVAL:=EQTB[5318+CURVAL].INT;
1:CURVAL:=EQTB[5851+CURVAL].INT;2:CURVAL:=EQTB[2900+CURVAL].HH.RH;
3:CURVAL:=EQTB[3156+CURVAL].HH.RH;END;CURVALLEVEL:=M;END{:427};
70:{424:}IF CURCHR>2 THEN BEGIN IF CURCHR=3 THEN CURVAL:=LINE ELSE
CURVAL:=LASTBADNESS;CURVALLEVEL:=0;
END ELSE BEGIN IF CURCHR=2 THEN CURVAL:=0 ELSE CURVAL:=0;
CURVALLEVEL:=CURCHR;
IF NOT(CURLIST.TAILFIELD>=HIMEMMIN)AND(CURLIST.MODEFIELD<>0)THEN CASE
CURCHR OF 0:IF MEM[CURLIST.TAILFIELD].HH.B0=12 THEN CURVAL:=MEM[CURLIST.
TAILFIELD+1].INT;
1:IF MEM[CURLIST.TAILFIELD].HH.B0=11 THEN CURVAL:=MEM[CURLIST.TAILFIELD
+1].INT;
2:IF MEM[CURLIST.TAILFIELD].HH.B0=10 THEN BEGIN CURVAL:=MEM[CURLIST.
TAILFIELD+1].HH.LH;
IF MEM[CURLIST.TAILFIELD].HH.B1=99 THEN CURVALLEVEL:=3;END;
END ELSE IF(CURLIST.MODEFIELD=1)AND(CURLIST.TAILFIELD=CURLIST.HEADFIELD)
THEN CASE CURCHR OF 0:CURVAL:=LASTPENALTY;1:CURVAL:=LASTKERN;
2:IF LASTGLUE<>65535 THEN CURVAL:=LASTGLUE;END;END{:424};
ELSE{428:}BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(685);END;
PRINTCMDCHR(CURCMD,CURCHR);PRINT(686);PRINTESC(537);BEGIN HELPPTR:=1;
HELPLINE[0]:=684;END;ERROR;IF LEVEL<>5 THEN BEGIN CURVAL:=0;
CURVALLEVEL:=1;END ELSE BEGIN CURVAL:=0;CURVALLEVEL:=0;END;END{:428}END;
WHILE CURVALLEVEL>LEVEL DO{429:}BEGIN IF CURVALLEVEL=2 THEN CURVAL:=MEM[
CURVAL+1].INT ELSE IF CURVALLEVEL=3 THEN MUERROR;
CURVALLEVEL:=CURVALLEVEL-1;END{:429};
{430:}IF NEGATIVE THEN IF CURVALLEVEL>=2 THEN BEGIN CURVAL:=NEWSPEC(
CURVAL);{431:}BEGIN MEM[CURVAL+1].INT:=-MEM[CURVAL+1].INT;
MEM[CURVAL+2].INT:=-MEM[CURVAL+2].INT;
MEM[CURVAL+3].INT:=-MEM[CURVAL+3].INT;END{:431};
END ELSE CURVAL:=-CURVAL ELSE IF(CURVALLEVEL>=2)AND(CURVALLEVEL<=3)THEN
MEM[CURVAL].HH.RH:=MEM[CURVAL].HH.RH+1{:430};END;
{:413}{440:}PROCEDURE SCANINT;LABEL 30;VAR NEGATIVE:BOOLEAN;M:INTEGER;
D:SMALLNUMBER;VACUOUS:BOOLEAN;OKSOFAR:BOOLEAN;BEGIN RADIX:=0;
OKSOFAR:=TRUE;{441:}NEGATIVE:=FALSE;REPEAT{406:}REPEAT GETXTOKEN;
UNTIL CURCMD<>10{:406};IF CURTOK=3117 THEN BEGIN NEGATIVE:=NOT NEGATIVE;
CURTOK:=3115;END;UNTIL CURTOK<>3115{:441};
IF CURTOK=3168 THEN{442:}BEGIN GETTOKEN;
IF CURTOK<4095 THEN BEGIN CURVAL:=CURCHR;
IF CURCMD<=2 THEN IF CURCMD=2 THEN ALIGNSTATE:=ALIGNSTATE+1 ELSE
ALIGNSTATE:=ALIGNSTATE-1;
END ELSE IF CURTOK<4352 THEN CURVAL:=CURTOK-4096 ELSE CURVAL:=CURTOK
-4352;IF CURVAL>255 THEN BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(698);END;BEGIN HELPPTR:=2;HELPLINE[1]:=699;HELPLINE[0]:=700;END;
CURVAL:=48;BACKERROR;END ELSE{443:}BEGIN GETXTOKEN;
IF CURCMD<>10 THEN BACKINPUT;END{:443};
END{:442}ELSE IF(CURCMD>=68)AND(CURCMD<=89)THEN SCANSOMETHIN(0,FALSE)
ELSE{444:}BEGIN RADIX:=10;M:=214748364;
IF CURTOK=3111 THEN BEGIN RADIX:=8;M:=268435456;GETXTOKEN;
END ELSE IF CURTOK=3106 THEN BEGIN RADIX:=16;M:=134217728;GETXTOKEN;END;
VACUOUS:=TRUE;CURVAL:=0;
{445:}WHILE TRUE DO BEGIN IF(CURTOK<3120+RADIX)AND(CURTOK>=3120)AND(
CURTOK<=3129)THEN D:=CURTOK-3120 ELSE IF RADIX=16 THEN IF(CURTOK<=2886)
AND(CURTOK>=2881)THEN D:=CURTOK-2871 ELSE IF(CURTOK<=3142)AND(CURTOK>=
3137)THEN D:=CURTOK-3127 ELSE GOTO 30 ELSE GOTO 30;VACUOUS:=FALSE;
IF(CURVAL>=M)AND((CURVAL>M)OR(D>7)OR(RADIX<>10))THEN BEGIN IF OKSOFAR
THEN BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(701);END;
BEGIN HELPPTR:=2;HELPLINE[1]:=702;HELPLINE[0]:=703;END;ERROR;
CURVAL:=2147483647;OKSOFAR:=FALSE;END;END ELSE CURVAL:=CURVAL*RADIX+D;
GETXTOKEN;END;30:{:445};
IF VACUOUS THEN{446:}BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(664);END;BEGIN HELPPTR:=3;HELPLINE[2]:=665;HELPLINE[1]:=666;
HELPLINE[0]:=667;END;BACKERROR;
END{:446}ELSE IF CURCMD<>10 THEN BACKINPUT;END{:444};
IF NEGATIVE THEN CURVAL:=-CURVAL;END;
{:440}{448:}PROCEDURE SCANDIMEN(MU,INF,SHORTCUT:BOOLEAN);
LABEL 30,31,32,40,45,88,89;VAR NEGATIVE:BOOLEAN;F:INTEGER;
{450:}NUM,DENOM:1..65536;K,KK:SMALLNUMBER;P,Q:HALFWORD;V:SCALED;
SAVECURVAL:INTEGER;{:450}BEGIN F:=0;ARITHERROR:=FALSE;CURORDER:=0;
NEGATIVE:=FALSE;IF NOT SHORTCUT THEN BEGIN{441:}NEGATIVE:=FALSE;
REPEAT{406:}REPEAT GETXTOKEN;UNTIL CURCMD<>10{:406};
IF CURTOK=3117 THEN BEGIN NEGATIVE:=NOT NEGATIVE;CURTOK:=3115;END;
UNTIL CURTOK<>3115{:441};
IF(CURCMD>=68)AND(CURCMD<=89)THEN{449:}IF MU THEN BEGIN SCANSOMETHIN(3,
FALSE);{451:}IF CURVALLEVEL>=2 THEN BEGIN V:=MEM[CURVAL+1].INT;
DELETEGLUERE(CURVAL);CURVAL:=V;END{:451};IF CURVALLEVEL=3 THEN GOTO 89;
IF CURVALLEVEL<>0 THEN MUERROR;END ELSE BEGIN SCANSOMETHIN(1,FALSE);
IF CURVALLEVEL=1 THEN GOTO 89;END{:449}ELSE BEGIN BACKINPUT;
IF CURTOK=3116 THEN CURTOK:=3118;
IF CURTOK<>3118 THEN SCANINT ELSE BEGIN RADIX:=10;CURVAL:=0;END;
IF CURTOK=3116 THEN CURTOK:=3118;
IF(RADIX=10)AND(CURTOK=3118)THEN{452:}BEGIN K:=0;P:=0;GETTOKEN;
WHILE TRUE DO BEGIN GETXTOKEN;
IF(CURTOK>3129)OR(CURTOK<3120)THEN GOTO 31;
IF K<17 THEN BEGIN Q:=GETAVAIL;MEM[Q].HH.RH:=P;
MEM[Q].HH.LH:=CURTOK-3120;P:=Q;K:=K+1;END;END;
31:FOR KK:=K DOWNTO 1 DO BEGIN DIG[KK-1]:=MEM[P].HH.LH;Q:=P;
P:=MEM[P].HH.RH;BEGIN MEM[Q].HH.RH:=AVAIL;AVAIL:=Q;DYNUSED:=DYNUSED-1;
END;END;F:=ROUNDDECIMAL(K);IF CURCMD<>10 THEN BACKINPUT;END{:452};END;
END;IF CURVAL<0 THEN BEGIN NEGATIVE:=NOT NEGATIVE;CURVAL:=-CURVAL;END;
{453:}IF INF THEN{454:}IF SCANKEYWORD(311)THEN BEGIN CURORDER:=1;
WHILE SCANKEYWORD(108)DO BEGIN IF CURORDER=3 THEN BEGIN BEGIN IF
INTERACTION=3 THEN;PRINTNL(262);PRINT(705);END;PRINT(706);
BEGIN HELPPTR:=1;HELPLINE[0]:=707;END;ERROR;
END ELSE CURORDER:=CURORDER+1;END;GOTO 88;END{:454};
{455:}SAVECURVAL:=CURVAL;{406:}REPEAT GETXTOKEN;UNTIL CURCMD<>10{:406};
IF(CURCMD<68)OR(CURCMD>89)THEN BACKINPUT ELSE BEGIN IF MU THEN BEGIN
SCANSOMETHIN(3,FALSE);
{451:}IF CURVALLEVEL>=2 THEN BEGIN V:=MEM[CURVAL+1].INT;
DELETEGLUERE(CURVAL);CURVAL:=V;END{:451};IF CURVALLEVEL<>3 THEN MUERROR;
END ELSE SCANSOMETHIN(1,FALSE);V:=CURVAL;GOTO 40;END;IF MU THEN GOTO 45;
IF SCANKEYWORD(708)THEN V:=({558:}FONTINFO[6+PARAMBASE[EQTB[3934].HH.RH]
].INT{:558})ELSE IF SCANKEYWORD(709)THEN V:=({559:}FONTINFO[5+PARAMBASE[
EQTB[3934].HH.RH]].INT{:559})ELSE GOTO 45;{443:}BEGIN GETXTOKEN;
IF CURCMD<>10 THEN BACKINPUT;END{:443};
40:CURVAL:=MULTANDADD(SAVECURVAL,V,XNOVERD(V,F,65536),1073741823);
GOTO 89;45:{:455};
IF MU THEN{456:}IF SCANKEYWORD(337)THEN GOTO 88 ELSE BEGIN BEGIN IF
INTERACTION=3 THEN;PRINTNL(262);PRINT(705);END;PRINT(710);
BEGIN HELPPTR:=4;HELPLINE[3]:=711;HELPLINE[2]:=712;HELPLINE[1]:=713;
HELPLINE[0]:=714;END;ERROR;GOTO 88;END{:456};
IF SCANKEYWORD(704)THEN{457:}BEGIN PREPAREMAG;
IF EQTB[5280].INT<>1000 THEN BEGIN CURVAL:=XNOVERD(CURVAL,1000,EQTB[5280
].INT);F:=(1000*F+65536*REMAINDER)DIV EQTB[5280].INT;
CURVAL:=CURVAL+(F DIV 65536);F:=F MOD 65536;END;END{:457};
IF SCANKEYWORD(397)THEN GOTO 88;
{458:}IF SCANKEYWORD(715)THEN BEGIN NUM:=7227;DENOM:=100;
END ELSE IF SCANKEYWORD(716)THEN BEGIN NUM:=12;DENOM:=1;
END ELSE IF SCANKEYWORD(717)THEN BEGIN NUM:=7227;DENOM:=254;
END ELSE IF SCANKEYWORD(718)THEN BEGIN NUM:=7227;DENOM:=2540;
END ELSE IF SCANKEYWORD(719)THEN BEGIN NUM:=7227;DENOM:=7200;
END ELSE IF SCANKEYWORD(720)THEN BEGIN NUM:=1238;DENOM:=1157;
END ELSE IF SCANKEYWORD(721)THEN BEGIN NUM:=14856;DENOM:=1157;
END ELSE IF SCANKEYWORD(722)THEN GOTO 30 ELSE{459:}BEGIN BEGIN IF
INTERACTION=3 THEN;PRINTNL(262);PRINT(705);END;PRINT(723);
BEGIN HELPPTR:=6;HELPLINE[5]:=724;HELPLINE[4]:=725;HELPLINE[3]:=726;
HELPLINE[2]:=712;HELPLINE[1]:=713;HELPLINE[0]:=714;END;ERROR;GOTO 32;
END{:459};CURVAL:=XNOVERD(CURVAL,NUM,DENOM);
F:=(NUM*F+65536*REMAINDER)DIV DENOM;CURVAL:=CURVAL+(F DIV 65536);
F:=F MOD 65536;32:{:458};
88:IF CURVAL>=16384 THEN ARITHERROR:=TRUE ELSE CURVAL:=CURVAL*65536+F;
30:{:453};{443:}BEGIN GETXTOKEN;IF CURCMD<>10 THEN BACKINPUT;END{:443};
89:IF ARITHERROR OR(ABS(CURVAL)>=1073741824)THEN{460:}BEGIN BEGIN IF
INTERACTION=3 THEN;PRINTNL(262);PRINT(727);END;BEGIN HELPPTR:=2;
HELPLINE[1]:=728;HELPLINE[0]:=729;END;ERROR;CURVAL:=1073741823;
ARITHERROR:=FALSE;END{:460};IF NEGATIVE THEN CURVAL:=-CURVAL;END;
{:448}{461:}PROCEDURE SCANGLUE(LEVEL:SMALLNUMBER);LABEL 10;
VAR NEGATIVE:BOOLEAN;Q:HALFWORD;MU:BOOLEAN;BEGIN MU:=(LEVEL=3);
{441:}NEGATIVE:=FALSE;REPEAT{406:}REPEAT GETXTOKEN;
UNTIL CURCMD<>10{:406};IF CURTOK=3117 THEN BEGIN NEGATIVE:=NOT NEGATIVE;
CURTOK:=3115;END;UNTIL CURTOK<>3115{:441};
IF(CURCMD>=68)AND(CURCMD<=89)THEN BEGIN SCANSOMETHIN(LEVEL,NEGATIVE);
IF CURVALLEVEL>=2 THEN BEGIN IF CURVALLEVEL<>LEVEL THEN MUERROR;GOTO 10;
END;IF CURVALLEVEL=0 THEN SCANDIMEN(MU,FALSE,TRUE)ELSE IF LEVEL=3 THEN
MUERROR;END ELSE BEGIN BACKINPUT;SCANDIMEN(MU,FALSE,FALSE);
IF NEGATIVE THEN CURVAL:=-CURVAL;END;{462:}Q:=NEWSPEC(0);
MEM[Q+1].INT:=CURVAL;
IF SCANKEYWORD(730)THEN BEGIN SCANDIMEN(MU,TRUE,FALSE);
MEM[Q+2].INT:=CURVAL;MEM[Q].HH.B0:=CURORDER;END;
IF SCANKEYWORD(731)THEN BEGIN SCANDIMEN(MU,TRUE,FALSE);
MEM[Q+3].INT:=CURVAL;MEM[Q].HH.B1:=CURORDER;END;CURVAL:=Q{:462};10:END;
{:461}{463:}FUNCTION SCANRULESPEC:HALFWORD;LABEL 21;VAR Q:HALFWORD;
BEGIN Q:=NEWRULE;
IF CURCMD=35 THEN MEM[Q+1].INT:=26214 ELSE BEGIN MEM[Q+3].INT:=26214;
MEM[Q+2].INT:=0;END;
21:IF SCANKEYWORD(732)THEN BEGIN SCANDIMEN(FALSE,FALSE,FALSE);
MEM[Q+1].INT:=CURVAL;GOTO 21;END;
IF SCANKEYWORD(733)THEN BEGIN SCANDIMEN(FALSE,FALSE,FALSE);
MEM[Q+3].INT:=CURVAL;GOTO 21;END;
IF SCANKEYWORD(734)THEN BEGIN SCANDIMEN(FALSE,FALSE,FALSE);
MEM[Q+2].INT:=CURVAL;GOTO 21;END;SCANRULESPEC:=Q;END;
{:463}{464:}FUNCTION STRTOKS(B:POOLPOINTER):HALFWORD;VAR P:HALFWORD;
Q:HALFWORD;T:HALFWORD;K:POOLPOINTER;
BEGIN BEGIN IF POOLPTR+1>POOLSIZE THEN OVERFLOW(257,POOLSIZE-INITPOOLPTR
);END;P:=29997;MEM[P].HH.RH:=0;K:=B;
WHILE K<POOLPTR DO BEGIN T:=STRPOOL[K];
IF T=32 THEN T:=2592 ELSE T:=3072+T;BEGIN BEGIN Q:=AVAIL;
IF Q=0 THEN Q:=GETAVAIL ELSE BEGIN AVAIL:=MEM[Q].HH.RH;MEM[Q].HH.RH:=0;
DYNUSED:=DYNUSED+1;END;END;MEM[P].HH.RH:=Q;MEM[Q].HH.LH:=T;P:=Q;END;
K:=K+1;END;POOLPTR:=B;STRTOKS:=P;END;
{:464}{465:}FUNCTION THETOKS:HALFWORD;VAR OLDSETTING:0..21;
P,Q,R:HALFWORD;B:POOLPOINTER;BEGIN GETXTOKEN;SCANSOMETHIN(5,FALSE);
IF CURVALLEVEL>=4 THEN{466:}BEGIN P:=29997;MEM[P].HH.RH:=0;
IF CURVALLEVEL=4 THEN BEGIN Q:=GETAVAIL;MEM[P].HH.RH:=Q;
MEM[Q].HH.LH:=4095+CURVAL;P:=Q;
END ELSE IF CURVAL<>0 THEN BEGIN R:=MEM[CURVAL].HH.RH;
WHILE R<>0 DO BEGIN BEGIN BEGIN Q:=AVAIL;
IF Q=0 THEN Q:=GETAVAIL ELSE BEGIN AVAIL:=MEM[Q].HH.RH;MEM[Q].HH.RH:=0;
DYNUSED:=DYNUSED+1;END;END;MEM[P].HH.RH:=Q;MEM[Q].HH.LH:=MEM[R].HH.LH;
P:=Q;END;R:=MEM[R].HH.RH;END;END;THETOKS:=P;
END{:466}ELSE BEGIN OLDSETTING:=SELECTOR;SELECTOR:=21;B:=POOLPTR;
CASE CURVALLEVEL OF 0:PRINTINT(CURVAL);1:BEGIN PRINTSCALED(CURVAL);
PRINT(397);END;2:BEGIN PRINTSPEC(CURVAL,397);DELETEGLUERE(CURVAL);END;
3:BEGIN PRINTSPEC(CURVAL,337);DELETEGLUERE(CURVAL);END;END;
SELECTOR:=OLDSETTING;THETOKS:=STRTOKS(B);END;END;
{:465}{467:}PROCEDURE INSTHETOKS;BEGIN MEM[29988].HH.RH:=THETOKS;
BEGINTOKENLI(MEM[29997].HH.RH,4);END;{:467}{470:}PROCEDURE CONVTOKS;
VAR OLDSETTING:0..21;C:0..5;SAVESCANNERS:SMALLNUMBER;B:POOLPOINTER;
BEGIN C:=CURCHR;{471:}CASE C OF 0,1:SCANINT;
2,3:BEGIN SAVESCANNERS:=SCANNERSTATU;SCANNERSTATU:=0;GETTOKEN;
SCANNERSTATU:=SAVESCANNERS;END;4:SCANFONTIDEN;
5:IF JOBNAME=0 THEN OPENLOGFILE;END{:471};OLDSETTING:=SELECTOR;
SELECTOR:=21;B:=POOLPTR;{472:}CASE C OF 0:PRINTINT(CURVAL);
1:PRINTROMANIN(CURVAL);
2:IF CURCS<>0 THEN SPRINTCS(CURCS)ELSE PRINTCHAR(CURCHR);3:PRINTMEANING;
4:BEGIN PRINT(FONTNAME[CURVAL]);
IF FONTSIZE[CURVAL]<>FONTDSIZE[CURVAL]THEN BEGIN PRINT(741);
PRINTSCALED(FONTSIZE[CURVAL]);PRINT(397);END;END;5:PRINT(JOBNAME);
END{:472};SELECTOR:=OLDSETTING;MEM[29988].HH.RH:=STRTOKS(B);
BEGINTOKENLI(MEM[29997].HH.RH,4);END;
{:470}{473:}FUNCTION SCANTOKS(MACRODEF,XPAND:BOOLEAN):HALFWORD;
LABEL 40,22,30,31,32;VAR T:HALFWORD;S:HALFWORD;P:HALFWORD;Q:HALFWORD;
UNBALANCE:HALFWORD;HASHBRACE:HALFWORD;
BEGIN IF MACRODEF THEN SCANNERSTATU:=2 ELSE SCANNERSTATU:=5;
WARNINGINDEX:=CURCS;DEFREF:=GETAVAIL;MEM[DEFREF].HH.LH:=0;P:=DEFREF;
HASHBRACE:=0;T:=3120;
IF MACRODEF THEN{474:}BEGIN WHILE TRUE DO BEGIN 22:GETTOKEN;
IF CURTOK<768 THEN GOTO 31;IF CURCMD=6 THEN{476:}BEGIN S:=3328+CURCHR;
GETTOKEN;IF CURTOK<512 THEN BEGIN HASHBRACE:=CURTOK;BEGIN Q:=GETAVAIL;
MEM[P].HH.RH:=Q;MEM[Q].HH.LH:=CURTOK;P:=Q;END;BEGIN Q:=GETAVAIL;
MEM[P].HH.RH:=Q;MEM[Q].HH.LH:=3584;P:=Q;END;GOTO 30;END;
IF T=3129 THEN BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(744);END;BEGIN HELPPTR:=2;HELPLINE[1]:=745;HELPLINE[0]:=746;END;
ERROR;GOTO 22;END ELSE BEGIN T:=T+1;
IF CURTOK<>T THEN BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(747);END;BEGIN HELPPTR:=2;HELPLINE[1]:=748;HELPLINE[0]:=749;END;
BACKERROR;END;CURTOK:=S;END;END{:476};BEGIN Q:=GETAVAIL;MEM[P].HH.RH:=Q;
MEM[Q].HH.LH:=CURTOK;P:=Q;END;END;31:BEGIN Q:=GETAVAIL;MEM[P].HH.RH:=Q;
MEM[Q].HH.LH:=3584;P:=Q;END;
IF CURCMD=2 THEN{475:}BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(657);END;ALIGNSTATE:=ALIGNSTATE+1;BEGIN HELPPTR:=2;
HELPLINE[1]:=742;HELPLINE[0]:=743;END;ERROR;GOTO 40;END{:475};
30:END{:474}ELSE SCANLEFTBRAC;{477:}UNBALANCE:=1;
WHILE TRUE DO BEGIN IF XPAND THEN{478:}BEGIN WHILE TRUE DO BEGIN GETNEXT
;IF CURCMD<=100 THEN GOTO 32;
IF CURCMD<>109 THEN EXPAND ELSE BEGIN Q:=THETOKS;
IF MEM[29997].HH.RH<>0 THEN BEGIN MEM[P].HH.RH:=MEM[29997].HH.RH;P:=Q;
END;END;END;32:XTOKEN END{:478}ELSE GETTOKEN;
IF CURTOK<768 THEN IF CURCMD<2 THEN UNBALANCE:=UNBALANCE+1 ELSE BEGIN
UNBALANCE:=UNBALANCE-1;IF UNBALANCE=0 THEN GOTO 40;
END ELSE IF CURCMD=6 THEN IF MACRODEF THEN{479:}BEGIN S:=CURTOK;
IF XPAND THEN GETXTOKEN ELSE GETTOKEN;
IF CURCMD<>6 THEN IF(CURTOK<=3120)OR(CURTOK>T)THEN BEGIN BEGIN IF
INTERACTION=3 THEN;PRINTNL(262);PRINT(750);END;SPRINTCS(WARNINGINDEX);
BEGIN HELPPTR:=3;HELPLINE[2]:=751;HELPLINE[1]:=752;HELPLINE[0]:=753;END;
BACKERROR;CURTOK:=S;END ELSE CURTOK:=1232+CURCHR;END{:479};
BEGIN Q:=GETAVAIL;MEM[P].HH.RH:=Q;MEM[Q].HH.LH:=CURTOK;P:=Q;END;
END{:477};40:SCANNERSTATU:=0;IF HASHBRACE<>0 THEN BEGIN Q:=GETAVAIL;
MEM[P].HH.RH:=Q;MEM[Q].HH.LH:=HASHBRACE;P:=Q;END;SCANTOKS:=P;END;
{:473}{482:}PROCEDURE READTOKS(N:INTEGER;R:HALFWORD);LABEL 30;
VAR P:HALFWORD;Q:HALFWORD;S:INTEGER;M:SMALLNUMBER;BEGIN SCANNERSTATU:=2;
WARNINGINDEX:=R;DEFREF:=GETAVAIL;MEM[DEFREF].HH.LH:=0;P:=DEFREF;
BEGIN Q:=GETAVAIL;MEM[P].HH.RH:=Q;MEM[Q].HH.LH:=3584;P:=Q;END;
IF(N<0)OR(N>15)THEN M:=16 ELSE M:=N;S:=ALIGNSTATE;ALIGNSTATE:=1000000;
REPEAT{483:}BEGINFILEREA;CURINPUT.NAMEFIELD:=M+1;
IF READOPEN[M]=2 THEN{484:}IF INTERACTION>1 THEN IF N<0 THEN BEGIN;
PRINT(338);TERMINPUT;END ELSE BEGIN;PRINTLN;SPRINTCS(R);BEGIN;PRINT(61);
TERMINPUT;END;N:=-1;
END ELSE FATALERROR(754){:484}ELSE IF READOPEN[M]=1 THEN{485:}IF INPUTLN
(READFILE[M],FALSE)THEN READOPEN[M]:=0 ELSE BEGIN ACLOSE(READFILE[M]);
READOPEN[M]:=2;
END{:485}ELSE{486:}BEGIN IF NOT INPUTLN(READFILE[M],TRUE)THEN BEGIN
ACLOSE(READFILE[M]);READOPEN[M]:=2;
IF ALIGNSTATE<>1000000 THEN BEGIN RUNAWAY;BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(755);END;PRINTESC(534);BEGIN HELPPTR:=1;
HELPLINE[0]:=756;END;ALIGNSTATE:=1000000;CURINPUT.LIMITFIELD:=0;ERROR;
END;END;END{:486};CURINPUT.LIMITFIELD:=LAST;
IF(EQTB[5311].INT<0)OR(EQTB[5311].INT>255)THEN CURINPUT.LIMITFIELD:=
CURINPUT.LIMITFIELD-1 ELSE BUFFER[CURINPUT.LIMITFIELD]:=EQTB[5311].INT;
FIRST:=CURINPUT.LIMITFIELD+1;CURINPUT.LOCFIELD:=CURINPUT.STARTFIELD;
CURINPUT.STATEFIELD:=33;WHILE TRUE DO BEGIN GETTOKEN;
IF CURTOK=0 THEN GOTO 30;
IF ALIGNSTATE<1000000 THEN BEGIN REPEAT GETTOKEN;UNTIL CURTOK=0;
ALIGNSTATE:=1000000;GOTO 30;END;BEGIN Q:=GETAVAIL;MEM[P].HH.RH:=Q;
MEM[Q].HH.LH:=CURTOK;P:=Q;END;END;30:ENDFILEREADI{:483};
UNTIL ALIGNSTATE=1000000;CURVAL:=DEFREF;SCANNERSTATU:=0;ALIGNSTATE:=S;
END;{:482}{494:}PROCEDURE PASSTEXT;LABEL 30;VAR L:INTEGER;
SAVESCANNERS:SMALLNUMBER;BEGIN SAVESCANNERS:=SCANNERSTATU;
SCANNERSTATU:=1;L:=0;SKIPLINE:=LINE;WHILE TRUE DO BEGIN GETNEXT;
IF CURCMD=106 THEN BEGIN IF L=0 THEN GOTO 30;IF CURCHR=2 THEN L:=L-1;
END ELSE IF CURCMD=105 THEN L:=L+1;END;30:SCANNERSTATU:=SAVESCANNERS;
END;{:494}{497:}PROCEDURE CHANGEIFLIMI(L:SMALLNUMBER;P:HALFWORD);
LABEL 10;VAR Q:HALFWORD;
BEGIN IF P=CONDPTR THEN IFLIMIT:=L ELSE BEGIN Q:=CONDPTR;
WHILE TRUE DO BEGIN IF Q=0 THEN CONFUSION(757);
IF MEM[Q].HH.RH=P THEN BEGIN MEM[Q].HH.B0:=L;GOTO 10;END;
Q:=MEM[Q].HH.RH;END;END;10:END;{:497}{498:}PROCEDURE CONDITIONAL;
LABEL 10,50;VAR B:BOOLEAN;R:60..62;M,N:INTEGER;P,Q:HALFWORD;
SAVESCANNERS:SMALLNUMBER;SAVECONDPTR:HALFWORD;THISIF:SMALLNUMBER;
BEGIN{495:}BEGIN P:=GETNODE(2);MEM[P].HH.RH:=CONDPTR;
MEM[P].HH.B0:=IFLIMIT;MEM[P].HH.B1:=CURIF;MEM[P+1].INT:=IFLINE;
CONDPTR:=P;CURIF:=CURCHR;IFLIMIT:=1;IFLINE:=LINE;END{:495};
SAVECONDPTR:=CONDPTR;THISIF:=CURCHR;
{501:}CASE THISIF OF 0,1:{506:}BEGIN BEGIN GETXTOKEN;
IF CURCMD=0 THEN IF CURCHR=257 THEN BEGIN CURCMD:=13;
CURCHR:=CURTOK-4096;END;END;IF(CURCMD>13)OR(CURCHR>255)THEN BEGIN M:=0;
N:=256;END ELSE BEGIN M:=CURCMD;N:=CURCHR;END;BEGIN GETXTOKEN;
IF CURCMD=0 THEN IF CURCHR=257 THEN BEGIN CURCMD:=13;
CURCHR:=CURTOK-4096;END;END;
IF(CURCMD>13)OR(CURCHR>255)THEN BEGIN CURCMD:=0;CURCHR:=256;END;
IF THISIF=0 THEN B:=(N=CURCHR)ELSE B:=(M=CURCMD);END{:506};
2,3:{503:}BEGIN IF THISIF=2 THEN SCANINT ELSE SCANDIMEN(FALSE,FALSE,
FALSE);N:=CURVAL;{406:}REPEAT GETXTOKEN;UNTIL CURCMD<>10{:406};
IF(CURTOK>=3132)AND(CURTOK<=3134)THEN R:=CURTOK-3072 ELSE BEGIN BEGIN IF
INTERACTION=3 THEN;PRINTNL(262);PRINT(781);END;PRINTCMDCHR(105,THISIF);
BEGIN HELPPTR:=1;HELPLINE[0]:=782;END;BACKERROR;R:=61;END;
IF THISIF=2 THEN SCANINT ELSE SCANDIMEN(FALSE,FALSE,FALSE);
CASE R OF 60:B:=(N<CURVAL);61:B:=(N=CURVAL);62:B:=(N>CURVAL);END;
END{:503};4:{504:}BEGIN SCANINT;B:=ODD(CURVAL);END{:504};
5:B:=(ABS(CURLIST.MODEFIELD)=1);6:B:=(ABS(CURLIST.MODEFIELD)=102);
7:B:=(ABS(CURLIST.MODEFIELD)=203);8:B:=(CURLIST.MODEFIELD<0);
9,10,11:{505:}BEGIN SCANEIGHTBIT;P:=EQTB[3678+CURVAL].HH.RH;
IF THISIF=9 THEN B:=(P=0)ELSE IF P=0 THEN B:=FALSE ELSE IF THISIF=10
THEN B:=(MEM[P].HH.B0=0)ELSE B:=(MEM[P].HH.B0=1);END{:505};
12:{507:}BEGIN SAVESCANNERS:=SCANNERSTATU;SCANNERSTATU:=0;GETNEXT;
N:=CURCS;P:=CURCMD;Q:=CURCHR;GETNEXT;
IF CURCMD<>P THEN B:=FALSE ELSE IF CURCMD<111 THEN B:=(CURCHR=Q)ELSE
{508:}BEGIN P:=MEM[CURCHR].HH.RH;Q:=MEM[EQTB[N].HH.RH].HH.RH;
IF P=Q THEN B:=TRUE ELSE BEGIN WHILE(P<>0)AND(Q<>0)DO IF MEM[P].HH.LH<>
MEM[Q].HH.LH THEN P:=0 ELSE BEGIN P:=MEM[P].HH.RH;Q:=MEM[Q].HH.RH;END;
B:=((P=0)AND(Q=0));END;END{:508};SCANNERSTATU:=SAVESCANNERS;END{:507};
13:BEGIN SCANFOURBITI;B:=(READOPEN[CURVAL]=2);END;14:B:=TRUE;
15:B:=FALSE;16:{509:}BEGIN SCANINT;N:=CURVAL;
IF EQTB[5299].INT>1 THEN BEGIN BEGINDIAGNOS;PRINT(783);PRINTINT(N);
PRINTCHAR(125);ENDDIAGNOSTI(FALSE);END;WHILE N<>0 DO BEGIN PASSTEXT;
IF CONDPTR=SAVECONDPTR THEN IF CURCHR=4 THEN N:=N-1 ELSE GOTO 50 ELSE IF
CURCHR=2 THEN{496:}BEGIN P:=CONDPTR;IFLINE:=MEM[P+1].INT;
CURIF:=MEM[P].HH.B1;IFLIMIT:=MEM[P].HH.B0;CONDPTR:=MEM[P].HH.RH;
FREENODE(P,2);END{:496};END;CHANGEIFLIMI(4,SAVECONDPTR);GOTO 10;
END{:509};END{:501};IF EQTB[5299].INT>1 THEN{502:}BEGIN BEGINDIAGNOS;
IF B THEN PRINT(779)ELSE PRINT(780);ENDDIAGNOSTI(FALSE);END{:502};
IF B THEN BEGIN CHANGEIFLIMI(3,SAVECONDPTR);GOTO 10;END;
{500:}WHILE TRUE DO BEGIN PASSTEXT;
IF CONDPTR=SAVECONDPTR THEN BEGIN IF CURCHR<>4 THEN GOTO 50;
BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(777);END;PRINTESC(775);
BEGIN HELPPTR:=1;HELPLINE[0]:=778;END;ERROR;
END ELSE IF CURCHR=2 THEN{496:}BEGIN P:=CONDPTR;IFLINE:=MEM[P+1].INT;
CURIF:=MEM[P].HH.B1;IFLIMIT:=MEM[P].HH.B0;CONDPTR:=MEM[P].HH.RH;
FREENODE(P,2);END{:496};END{:500};
50:IF CURCHR=2 THEN{496:}BEGIN P:=CONDPTR;IFLINE:=MEM[P+1].INT;
CURIF:=MEM[P].HH.B1;IFLIMIT:=MEM[P].HH.B0;CONDPTR:=MEM[P].HH.RH;
FREENODE(P,2);END{:496}ELSE IFLIMIT:=2;10:END;
{:498}{515:}PROCEDURE BEGINNAME;BEGIN AREADELIMITE:=0;EXTDELIMITER:=0;
END;{:515}{516:}FUNCTION MORENAME(C:ASCIICODE):BOOLEAN;
BEGIN IF C=32 THEN MORENAME:=FALSE ELSE BEGIN BEGIN IF POOLPTR+1>
POOLSIZE THEN OVERFLOW(257,POOLSIZE-INITPOOLPTR);END;
BEGIN STRPOOL[POOLPTR]:=C;POOLPTR:=POOLPTR+1;END;
IF C=47 THEN BEGIN AREADELIMITE:=(POOLPTR-STRSTART[STRPTR]);
EXTDELIMITER:=0;
END ELSE IF(C=46)AND(EXTDELIMITER=0)THEN EXTDELIMITER:=(POOLPTR-STRSTART
[STRPTR]);MORENAME:=TRUE;END;END;{:516}{517:}PROCEDURE ENDNAME;
BEGIN IF STRPTR+3>MAXSTRINGS THEN OVERFLOW(258,MAXSTRINGS-INITSTRPTR);
IF AREADELIMITE=0 THEN CURAREA:=338 ELSE BEGIN CURAREA:=STRPTR;
STRSTART[STRPTR+1]:=STRSTART[STRPTR]+AREADELIMITE;STRPTR:=STRPTR+1;END;
IF EXTDELIMITER=0 THEN BEGIN CUREXT:=338;CURNAME:=MAKESTRING;
END ELSE BEGIN CURNAME:=STRPTR;
STRSTART[STRPTR+1]:=STRSTART[STRPTR]+EXTDELIMITER-AREADELIMITE-1;
STRPTR:=STRPTR+1;CUREXT:=MAKESTRING;END;END;
{:517}{519:}PROCEDURE PACKFILENAME(N,A,E:STRNUMBER);VAR K:INTEGER;
C:ASCIICODE;J:POOLPOINTER;BEGIN K:=0;
FOR J:=STRSTART[A]TO STRSTART[A+1]-1 DO BEGIN C:=STRPOOL[J];K:=K+1;
IF K<=FILENAMESIZE THEN NAMEOFFILE[K]:=XCHR[C];END;
FOR J:=STRSTART[N]TO STRSTART[N+1]-1 DO BEGIN C:=STRPOOL[J];K:=K+1;
IF K<=FILENAMESIZE THEN NAMEOFFILE[K]:=XCHR[C];END;
FOR J:=STRSTART[E]TO STRSTART[E+1]-1 DO BEGIN C:=STRPOOL[J];K:=K+1;
IF K<=FILENAMESIZE THEN NAMEOFFILE[K]:=XCHR[C];END;
IF K<=FILENAMESIZE THEN NAMELENGTH:=K ELSE NAMELENGTH:=FILENAMESIZE;
FOR K:=NAMELENGTH+1 TO FILENAMESIZE DO NAMEOFFILE[K]:=CHR(0);END;
{:519}{523:}PROCEDURE PACKBUFFERED(N:SMALLNUMBER;A,B:INTEGER);
VAR K:INTEGER;C:ASCIICODE;J:INTEGER;
BEGIN IF N+B-A+5>FILENAMESIZE THEN B:=A+FILENAMESIZE-N-5;K:=0;
FOR J:=1 TO N DO BEGIN C:=XORD[TEXFORMATDEF[J]];K:=K+1;
IF K<=FILENAMESIZE THEN NAMEOFFILE[K]:=XCHR[C];END;
FOR J:=A TO B DO BEGIN C:=BUFFER[J];K:=K+1;
IF K<=FILENAMESIZE THEN NAMEOFFILE[K]:=XCHR[C];END;
FOR J:=17 TO 20 DO BEGIN C:=XORD[TEXFORMATDEF[J]];K:=K+1;
IF K<=FILENAMESIZE THEN NAMEOFFILE[K]:=XCHR[C];END;
IF K<=FILENAMESIZE THEN NAMELENGTH:=K ELSE NAMELENGTH:=FILENAMESIZE;
FOR K:=NAMELENGTH+1 TO FILENAMESIZE DO NAMEOFFILE[K]:=CHR(0);END;
{:523}{525:}FUNCTION MAKENAMESTRI:STRNUMBER;VAR K:1..FILENAMESIZE;
BEGIN IF(POOLPTR+NAMELENGTH>POOLSIZE)OR(STRPTR=MAXSTRINGS)OR((POOLPTR-
STRSTART[STRPTR])>0)THEN MAKENAMESTRI:=63 ELSE BEGIN FOR K:=1 TO
NAMELENGTH DO BEGIN STRPOOL[POOLPTR]:=XORD[NAMEOFFILE[K]];
POOLPTR:=POOLPTR+1;END;MAKENAMESTRI:=MAKESTRING;END;END;
FUNCTION AMAKENAMESTR(VAR F:ALPHAFILE):STRNUMBER;
BEGIN AMAKENAMESTR:=MAKENAMESTRI;END;
FUNCTION BMAKENAMESTR(VAR F:BYTEFILE):STRNUMBER;
BEGIN BMAKENAMESTR:=MAKENAMESTRI;END;
FUNCTION WMAKENAMESTR(VAR F:WORDFILE):STRNUMBER;
BEGIN WMAKENAMESTR:=MAKENAMESTRI;END;{:525}{526:}PROCEDURE SCANFILENAME;
LABEL 30;BEGIN NAMEINPROGRE:=TRUE;BEGINNAME;{406:}REPEAT GETXTOKEN;
UNTIL CURCMD<>10{:406};
WHILE TRUE DO BEGIN IF(CURCMD>12)OR(CURCHR>255)THEN BEGIN BACKINPUT;
GOTO 30;END;IF NOT MORENAME(CURCHR)THEN GOTO 30;GETXTOKEN;END;
30:ENDNAME;NAMEINPROGRE:=FALSE;END;
{:526}{529:}PROCEDURE PACKJOBNAME(S:STRNUMBER);BEGIN CURAREA:=338;
CUREXT:=S;CURNAME:=JOBNAME;PACKFILENAME(CURNAME,CURAREA,CUREXT);END;
{:529}{530:}PROCEDURE PROMPTFILENA(S,E:STRNUMBER);LABEL 30;
VAR K:0..BUFSIZE;BEGIN IF INTERACTION=2 THEN;
IF S=787 THEN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(788);
END ELSE BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(789);END;
PRINTFILENAM(CURNAME,CURAREA,CUREXT);PRINT(790);
IF E=791 THEN SHOWCONTEXT;PRINTNL(792);PRINT(S);PRINT(793);
IF INTERACTION<2 THEN FATALERROR(794);;BEGIN;PRINT(568);TERMINPUT;END;
{531:}BEGIN BEGINNAME;K:=FIRST;WHILE(BUFFER[K]=32)AND(K<LAST)DO K:=K+1;
WHILE TRUE DO BEGIN IF K=LAST THEN GOTO 30;
IF NOT MORENAME(BUFFER[K])THEN GOTO 30;K:=K+1;END;30:ENDNAME;END{:531};
IF CUREXT=338 THEN CUREXT:=E;PACKFILENAME(CURNAME,CURAREA,CUREXT);END;
{:530}{534:}PROCEDURE OPENLOGFILE;VAR OLDSETTING:0..21;K:0..BUFSIZE;
L:0..BUFSIZE;MONTHS:PACKED ARRAY[1..36]OF CHAR;
BEGIN OLDSETTING:=SELECTOR;IF JOBNAME=0 THEN JOBNAME:=797;
PACKJOBNAME(798);WHILE NOT AOPENOUT(LOGFILE)DO{535:}BEGIN SELECTOR:=17;
PROMPTFILENA(800,798);END{:535};LOGNAME:=AMAKENAMESTR(LOGFILE);
SELECTOR:=18;LOGOPENED:=TRUE;
{536:}BEGIN WRITE(LOGFILE,'This is TeX-FPC, 4th ed.');
SLOWPRINT(FORMATIDENT);PRINT(801);PRINTINT(SYSDAY);PRINTCHAR(32);
MONTHS:='JANFEBMARAPRMAYJUNJULAUGSEPOCTNOVDEC';
FOR K:=3*SYSMONTH-2 TO 3*SYSMONTH DO WRITE(LOGFILE,MONTHS[K]);
PRINTCHAR(32);PRINTINT(SYSYEAR);PRINTCHAR(32);PRINTTWO(SYSTIME DIV 60);
PRINTCHAR(58);PRINTTWO(SYSTIME MOD 60);END{:536};
INPUTSTACK[INPUTPTR]:=CURINPUT;PRINTNL(799);L:=INPUTSTACK[0].LIMITFIELD;
IF BUFFER[L]=EQTB[5311].INT THEN L:=L-1;
FOR K:=1 TO L DO PRINT(BUFFER[K]);PRINTLN;SELECTOR:=OLDSETTING+2;END;
{:534}{537:}PROCEDURE STARTINPUT;LABEL 30;BEGIN SCANFILENAME;
IF CUREXT=338 THEN CUREXT:=791;PACKFILENAME(CURNAME,CURAREA,CUREXT);
WHILE TRUE DO BEGIN BEGINFILEREA;
IF AOPENIN(INPUTFILE[CURINPUT.INDEXFIELD])THEN GOTO 30;
IF CURAREA=338 THEN BEGIN PACKFILENAME(CURNAME,784,CUREXT);
IF AOPENIN(INPUTFILE[CURINPUT.INDEXFIELD])THEN GOTO 30;END;ENDFILEREADI;
PROMPTFILENA(787,791);END;
30:CURINPUT.NAMEFIELD:=AMAKENAMESTR(INPUTFILE[CURINPUT.INDEXFIELD]);
IF JOBNAME=0 THEN BEGIN JOBNAME:=CURNAME;OPENLOGFILE;END;
IF TERMOFFSET+(STRSTART[CURINPUT.NAMEFIELD+1]-STRSTART[CURINPUT.
NAMEFIELD])>MAXPRINTLINE-2 THEN PRINTLN ELSE IF(TERMOFFSET>0)OR(
FILEOFFSET>0)THEN PRINTCHAR(32);PRINTCHAR(40);OPENPARENS:=OPENPARENS+1;
SLOWPRINT(CURINPUT.NAMEFIELD);FLUSH(OUTPUT);CURINPUT.STATEFIELD:=33;
{538:}BEGIN LINE:=1;
IF INPUTLN(INPUTFILE[CURINPUT.INDEXFIELD],FALSE)THEN;FIRMUPTHELIN;
IF(EQTB[5311].INT<0)OR(EQTB[5311].INT>255)THEN CURINPUT.LIMITFIELD:=
CURINPUT.LIMITFIELD-1 ELSE BUFFER[CURINPUT.LIMITFIELD]:=EQTB[5311].INT;
FIRST:=CURINPUT.LIMITFIELD+1;CURINPUT.LOCFIELD:=CURINPUT.STARTFIELD;
END{:538};END;{:537}{560:}FUNCTION READFONTINFO(U:HALFWORD;
NOM,AIRE:STRNUMBER;S:SCALED):INTERNALFONT;LABEL 30,11,45;
VAR K:FONTINDEX;FILEOPENED:BOOLEAN;
LF,LH,BC,EC,NW,NH,ND,NI,NL,NK,NE,NP:HALFWORD;F:INTERNALFONT;
G:INTERNALFONT;A,B,C,D:EIGHTBITS;QW:FOURQUARTERS;SW:SCALED;
BCHLABEL:INTEGER;BCHAR:0..256;Z:SCALED;ALPHA:INTEGER;BETA:1..16;
BEGIN G:=0;{562:}{563:}FILEOPENED:=FALSE;
IF AIRE=338 THEN PACKFILENAME(NOM,785,812)ELSE PACKFILENAME(NOM,AIRE,812
);IF NOT BOPENIN(TFMFILE)THEN GOTO 11;FILEOPENED:=TRUE{:563};
{565:}BEGIN BEGIN LF:=TFMFILE^;IF LF>127 THEN GOTO 11;GET(TFMFILE);
LF:=LF*256+TFMFILE^;END;GET(TFMFILE);BEGIN LH:=TFMFILE^;
IF LH>127 THEN GOTO 11;GET(TFMFILE);LH:=LH*256+TFMFILE^;END;
GET(TFMFILE);BEGIN BC:=TFMFILE^;IF BC>127 THEN GOTO 11;GET(TFMFILE);
BC:=BC*256+TFMFILE^;END;GET(TFMFILE);BEGIN EC:=TFMFILE^;
IF EC>127 THEN GOTO 11;GET(TFMFILE);EC:=EC*256+TFMFILE^;END;
IF(BC>EC+1)OR(EC>255)THEN GOTO 11;IF BC>255 THEN BEGIN BC:=1;EC:=0;END;
GET(TFMFILE);BEGIN NW:=TFMFILE^;IF NW>127 THEN GOTO 11;GET(TFMFILE);
NW:=NW*256+TFMFILE^;END;GET(TFMFILE);BEGIN NH:=TFMFILE^;
IF NH>127 THEN GOTO 11;GET(TFMFILE);NH:=NH*256+TFMFILE^;END;
GET(TFMFILE);BEGIN ND:=TFMFILE^;IF ND>127 THEN GOTO 11;GET(TFMFILE);
ND:=ND*256+TFMFILE^;END;GET(TFMFILE);BEGIN NI:=TFMFILE^;
IF NI>127 THEN GOTO 11;GET(TFMFILE);NI:=NI*256+TFMFILE^;END;
GET(TFMFILE);BEGIN NL:=TFMFILE^;IF NL>127 THEN GOTO 11;GET(TFMFILE);
NL:=NL*256+TFMFILE^;END;GET(TFMFILE);BEGIN NK:=TFMFILE^;
IF NK>127 THEN GOTO 11;GET(TFMFILE);NK:=NK*256+TFMFILE^;END;
GET(TFMFILE);BEGIN NE:=TFMFILE^;IF NE>127 THEN GOTO 11;GET(TFMFILE);
NE:=NE*256+TFMFILE^;END;GET(TFMFILE);BEGIN NP:=TFMFILE^;
IF NP>127 THEN GOTO 11;GET(TFMFILE);NP:=NP*256+TFMFILE^;END;
IF LF<>6+LH+(EC-BC+1)+NW+NH+ND+NI+NL+NK+NE+NP THEN GOTO 11;
IF(NW=0)OR(NH=0)OR(ND=0)OR(NI=0)THEN GOTO 11;END{:565};
{566:}LF:=LF-6-LH;IF NP<7 THEN LF:=LF+7-NP;
IF(FONTPTR=FONTMAX)OR(FMEMPTR+LF>FONTMEMSIZE)THEN{567:}BEGIN BEGIN IF
INTERACTION=3 THEN;PRINTNL(262);PRINT(803);END;SPRINTCS(U);
PRINTCHAR(61);PRINTFILENAM(NOM,AIRE,338);IF S>=0 THEN BEGIN PRINT(741);
PRINTSCALED(S);PRINT(397);END ELSE IF S<>-1000 THEN BEGIN PRINT(804);
PRINTINT(-S);END;PRINT(813);BEGIN HELPPTR:=4;HELPLINE[3]:=814;
HELPLINE[2]:=815;HELPLINE[1]:=816;HELPLINE[0]:=817;END;ERROR;GOTO 30;
END{:567};F:=FONTPTR+1;CHARBASE[F]:=FMEMPTR-BC;
WIDTHBASE[F]:=CHARBASE[F]+EC+1;HEIGHTBASE[F]:=WIDTHBASE[F]+NW;
DEPTHBASE[F]:=HEIGHTBASE[F]+NH;ITALICBASE[F]:=DEPTHBASE[F]+ND;
LIGKERNBASE[F]:=ITALICBASE[F]+NI;
KERNBASE[F]:=LIGKERNBASE[F]+NL-256*(128);
EXTENBASE[F]:=KERNBASE[F]+256*(128)+NK;
PARAMBASE[F]:=EXTENBASE[F]+NE{:566};{568:}BEGIN IF LH<2 THEN GOTO 11;
BEGIN GET(TFMFILE);A:=TFMFILE^;QW.B0:=A;GET(TFMFILE);B:=TFMFILE^;
QW.B1:=B;GET(TFMFILE);C:=TFMFILE^;QW.B2:=C;GET(TFMFILE);D:=TFMFILE^;
QW.B3:=D;FONTCHECK[F]:=QW;END;GET(TFMFILE);BEGIN Z:=TFMFILE^;
IF Z>127 THEN GOTO 11;GET(TFMFILE);Z:=Z*256+TFMFILE^;END;GET(TFMFILE);
Z:=Z*256+TFMFILE^;GET(TFMFILE);Z:=(Z*16)+(TFMFILE^DIV 16);
IF Z<65536 THEN GOTO 11;WHILE LH>2 DO BEGIN GET(TFMFILE);GET(TFMFILE);
GET(TFMFILE);GET(TFMFILE);LH:=LH-1;END;FONTDSIZE[F]:=Z;
IF S<>-1000 THEN IF S>=0 THEN Z:=S ELSE Z:=XNOVERD(Z,-S,1000);
FONTSIZE[F]:=Z;END{:568};
{569:}FOR K:=FMEMPTR TO WIDTHBASE[F]-1 DO BEGIN BEGIN GET(TFMFILE);
A:=TFMFILE^;QW.B0:=A;GET(TFMFILE);B:=TFMFILE^;QW.B1:=B;GET(TFMFILE);
C:=TFMFILE^;QW.B2:=C;GET(TFMFILE);D:=TFMFILE^;QW.B3:=D;
FONTINFO[K].QQQQ:=QW;END;
IF(A>=NW)OR(B DIV 16>=NH)OR(B MOD 16>=ND)OR(C DIV 4>=NI)THEN GOTO 11;
CASE C MOD 4 OF 1:IF D>=NL THEN GOTO 11;3:IF D>=NE THEN GOTO 11;
2:{570:}BEGIN BEGIN IF(D<BC)OR(D>EC)THEN GOTO 11 END;
WHILE D<K+BC-FMEMPTR DO BEGIN QW:=FONTINFO[CHARBASE[F]+D].QQQQ;
IF((QW.B2)MOD 4)<>2 THEN GOTO 45;D:=QW.B3;END;
IF D=K+BC-FMEMPTR THEN GOTO 11;45:END{:570};ELSE END;END{:569};
{571:}BEGIN{572:}BEGIN ALPHA:=16;WHILE Z>=8388608 DO BEGIN Z:=Z DIV 2;
ALPHA:=ALPHA+ALPHA;END;BETA:=256 DIV ALPHA;ALPHA:=ALPHA*Z;END{:572};
FOR K:=WIDTHBASE[F]TO LIGKERNBASE[F]-1 DO BEGIN GET(TFMFILE);
A:=TFMFILE^;GET(TFMFILE);B:=TFMFILE^;GET(TFMFILE);C:=TFMFILE^;
GET(TFMFILE);D:=TFMFILE^;
SW:=(((((D*Z)DIV 256)+(C*Z))DIV 256)+(B*Z))DIV BETA;
IF A=0 THEN FONTINFO[K].INT:=SW ELSE IF A=255 THEN FONTINFO[K].INT:=SW-
ALPHA ELSE GOTO 11;END;IF FONTINFO[WIDTHBASE[F]].INT<>0 THEN GOTO 11;
IF FONTINFO[HEIGHTBASE[F]].INT<>0 THEN GOTO 11;
IF FONTINFO[DEPTHBASE[F]].INT<>0 THEN GOTO 11;
IF FONTINFO[ITALICBASE[F]].INT<>0 THEN GOTO 11;END{:571};
{573:}BCHLABEL:=32767;BCHAR:=256;
IF NL>0 THEN BEGIN FOR K:=LIGKERNBASE[F]TO KERNBASE[F]+256*(128)-1 DO
BEGIN BEGIN GET(TFMFILE);A:=TFMFILE^;QW.B0:=A;GET(TFMFILE);B:=TFMFILE^;
QW.B1:=B;GET(TFMFILE);C:=TFMFILE^;QW.B2:=C;GET(TFMFILE);D:=TFMFILE^;
QW.B3:=D;FONTINFO[K].QQQQ:=QW;END;
IF A>128 THEN BEGIN IF 256*C+D>=NL THEN GOTO 11;
IF A=255 THEN IF K=LIGKERNBASE[F]THEN BCHAR:=B;
END ELSE BEGIN IF B<>BCHAR THEN BEGIN BEGIN IF(B<BC)OR(B>EC)THEN GOTO 11
END;QW:=FONTINFO[CHARBASE[F]+B].QQQQ;IF NOT(QW.B0>0)THEN GOTO 11;END;
IF C<128 THEN BEGIN BEGIN IF(D<BC)OR(D>EC)THEN GOTO 11 END;
QW:=FONTINFO[CHARBASE[F]+D].QQQQ;IF NOT(QW.B0>0)THEN GOTO 11;
END ELSE IF 256*(C-128)+D>=NK THEN GOTO 11;
IF A<128 THEN IF K-LIGKERNBASE[F]+A+1>=NL THEN GOTO 11;END;END;
IF A=255 THEN BCHLABEL:=256*C+D;END;
FOR K:=KERNBASE[F]+256*(128)TO EXTENBASE[F]-1 DO BEGIN GET(TFMFILE);
A:=TFMFILE^;GET(TFMFILE);B:=TFMFILE^;GET(TFMFILE);C:=TFMFILE^;
GET(TFMFILE);D:=TFMFILE^;
SW:=(((((D*Z)DIV 256)+(C*Z))DIV 256)+(B*Z))DIV BETA;
IF A=0 THEN FONTINFO[K].INT:=SW ELSE IF A=255 THEN FONTINFO[K].INT:=SW-
ALPHA ELSE GOTO 11;END;{:573};
{574:}FOR K:=EXTENBASE[F]TO PARAMBASE[F]-1 DO BEGIN BEGIN GET(TFMFILE);
A:=TFMFILE^;QW.B0:=A;GET(TFMFILE);B:=TFMFILE^;QW.B1:=B;GET(TFMFILE);
C:=TFMFILE^;QW.B2:=C;GET(TFMFILE);D:=TFMFILE^;QW.B3:=D;
FONTINFO[K].QQQQ:=QW;END;
IF A<>0 THEN BEGIN BEGIN IF(A<BC)OR(A>EC)THEN GOTO 11 END;
QW:=FONTINFO[CHARBASE[F]+A].QQQQ;IF NOT(QW.B0>0)THEN GOTO 11;END;
IF B<>0 THEN BEGIN BEGIN IF(B<BC)OR(B>EC)THEN GOTO 11 END;
QW:=FONTINFO[CHARBASE[F]+B].QQQQ;IF NOT(QW.B0>0)THEN GOTO 11;END;
IF C<>0 THEN BEGIN BEGIN IF(C<BC)OR(C>EC)THEN GOTO 11 END;
QW:=FONTINFO[CHARBASE[F]+C].QQQQ;IF NOT(QW.B0>0)THEN GOTO 11;END;
BEGIN BEGIN IF(D<BC)OR(D>EC)THEN GOTO 11 END;
QW:=FONTINFO[CHARBASE[F]+D].QQQQ;IF NOT(QW.B0>0)THEN GOTO 11;END;
END{:574};{575:}BEGIN FOR K:=1 TO NP DO IF K=1 THEN BEGIN GET(TFMFILE);
SW:=TFMFILE^;IF SW>127 THEN SW:=SW-256;GET(TFMFILE);SW:=SW*256+TFMFILE^;
GET(TFMFILE);SW:=SW*256+TFMFILE^;GET(TFMFILE);
FONTINFO[PARAMBASE[F]].INT:=(SW*16)+(TFMFILE^DIV 16);
END ELSE BEGIN GET(TFMFILE);A:=TFMFILE^;GET(TFMFILE);B:=TFMFILE^;
GET(TFMFILE);C:=TFMFILE^;GET(TFMFILE);D:=TFMFILE^;
SW:=(((((D*Z)DIV 256)+(C*Z))DIV 256)+(B*Z))DIV BETA;
IF A=0 THEN FONTINFO[PARAMBASE[F]+K-1].INT:=SW ELSE IF A=255 THEN
FONTINFO[PARAMBASE[F]+K-1].INT:=SW-ALPHA ELSE GOTO 11;END;
FOR K:=NP+1 TO 7 DO FONTINFO[PARAMBASE[F]+K-1].INT:=0;END{:575};
{576:}IF NP>=7 THEN FONTPARAMS[F]:=NP ELSE FONTPARAMS[F]:=7;
HYPHENCHAR[F]:=EQTB[5309].INT;SKEWCHAR[F]:=EQTB[5310].INT;
IF BCHLABEL<NL THEN BCHARLABEL[F]:=BCHLABEL+LIGKERNBASE[F]ELSE
BCHARLABEL[F]:=0;FONTBCHAR[F]:=BCHAR;FONTFALSEBCH[F]:=BCHAR;
IF BCHAR<=EC THEN IF BCHAR>=BC THEN BEGIN QW:=FONTINFO[CHARBASE[F]+BCHAR
].QQQQ;IF(QW.B0>0)THEN FONTFALSEBCH[F]:=256;END;FONTNAME[F]:=NOM;
FONTAREA[F]:=AIRE;FONTBC[F]:=BC;FONTEC[F]:=EC;FONTGLUE[F]:=0;
CHARBASE[F]:=CHARBASE[F];WIDTHBASE[F]:=WIDTHBASE[F];
LIGKERNBASE[F]:=LIGKERNBASE[F];KERNBASE[F]:=KERNBASE[F];
EXTENBASE[F]:=EXTENBASE[F];PARAMBASE[F]:=PARAMBASE[F]-1;
FMEMPTR:=FMEMPTR+LF;FONTPTR:=F;G:=F;GOTO 30{:576}{:562};
11:{561:}BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(803);END;
SPRINTCS(U);PRINTCHAR(61);PRINTFILENAM(NOM,AIRE,338);
IF S>=0 THEN BEGIN PRINT(741);PRINTSCALED(S);PRINT(397);
END ELSE IF S<>-1000 THEN BEGIN PRINT(804);PRINTINT(-S);END;
IF FILEOPENED THEN PRINT(805)ELSE PRINT(806);BEGIN HELPPTR:=5;
HELPLINE[4]:=807;HELPLINE[3]:=808;HELPLINE[2]:=809;HELPLINE[1]:=810;
HELPLINE[0]:=811;END;ERROR{:561};30:IF FILEOPENED THEN BCLOSE(TFMFILE);
READFONTINFO:=G;END;{:560}{581:}PROCEDURE CHARWARNING(F:INTERNALFONT;
C:EIGHTBITS);BEGIN IF EQTB[5298].INT>0 THEN BEGIN BEGINDIAGNOS;
PRINTNL(826);PRINT(C);PRINT(827);SLOWPRINT(FONTNAME[F]);PRINTCHAR(33);
ENDDIAGNOSTI(FALSE);END;END;
{:581}{582:}FUNCTION NEWCHARACTER(F:INTERNALFONT;C:EIGHTBITS):HALFWORD;
LABEL 10;VAR P:HALFWORD;
BEGIN IF FONTBC[F]<=C THEN IF FONTEC[F]>=C THEN IF(FONTINFO[CHARBASE[F]+
C].QQQQ.B0>0)THEN BEGIN P:=GETAVAIL;MEM[P].HH.B0:=F;MEM[P].HH.B1:=C;
NEWCHARACTER:=P;GOTO 10;END;CHARWARNING(F,C);NEWCHARACTER:=0;10:END;
{:582}{597:}PROCEDURE WRITEDVI(A,B:DVIINDEX);
BEGIN BLOCKWRITE(DVIFILE,DVIBUF[A],B-A+1);END;
{:597}{598:}PROCEDURE DVISWAP;
BEGIN IF DVILIMIT=DVIBUFSIZE THEN BEGIN WRITEDVI(0,HALFBUF-1);
DVILIMIT:=HALFBUF;DVIOFFSET:=DVIOFFSET+DVIBUFSIZE;DVIPTR:=0;
END ELSE BEGIN WRITEDVI(HALFBUF,DVIBUFSIZE-1);DVILIMIT:=DVIBUFSIZE;END;
DVIGONE:=DVIGONE+HALFBUF;END;{:598}{600:}PROCEDURE DVIFOUR(X:INTEGER);
BEGIN IF X>=0 THEN BEGIN DVIBUF[DVIPTR]:=X DIV 16777216;
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;
END ELSE BEGIN X:=X+1073741824;X:=X+1073741824;
BEGIN DVIBUF[DVIPTR]:=(X DIV 16777216)+128;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;END;X:=X MOD 16777216;
BEGIN DVIBUF[DVIPTR]:=X DIV 65536;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;X:=X MOD 65536;
BEGIN DVIBUF[DVIPTR]:=X DIV 256;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;BEGIN DVIBUF[DVIPTR]:=X MOD 256;
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;END;
{:600}{601:}PROCEDURE DVIPOP(L:INTEGER);
BEGIN IF(L=DVIOFFSET+DVIPTR)AND(DVIPTR>0)THEN DVIPTR:=DVIPTR-1 ELSE
BEGIN DVIBUF[DVIPTR]:=142;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;END;
{:601}{602:}PROCEDURE DVIFONTDEF(F:INTERNALFONT);VAR K:POOLPOINTER;
BEGIN BEGIN DVIBUF[DVIPTR]:=243;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;BEGIN DVIBUF[DVIPTR]:=F-1;
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;
BEGIN DVIBUF[DVIPTR]:=FONTCHECK[F].B0;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;
BEGIN DVIBUF[DVIPTR]:=FONTCHECK[F].B1;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;
BEGIN DVIBUF[DVIPTR]:=FONTCHECK[F].B2;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;
BEGIN DVIBUF[DVIPTR]:=FONTCHECK[F].B3;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;DVIFOUR(FONTSIZE[F]);
DVIFOUR(FONTDSIZE[F]);
BEGIN DVIBUF[DVIPTR]:=(STRSTART[FONTAREA[F]+1]-STRSTART[FONTAREA[F]]);
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;
BEGIN DVIBUF[DVIPTR]:=(STRSTART[FONTNAME[F]+1]-STRSTART[FONTNAME[F]]);
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;
{603:}FOR K:=STRSTART[FONTAREA[F]]TO STRSTART[FONTAREA[F]+1]-1 DO BEGIN
DVIBUF[DVIPTR]:=STRPOOL[K];DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;
FOR K:=STRSTART[FONTNAME[F]]TO STRSTART[FONTNAME[F]+1]-1 DO BEGIN DVIBUF
[DVIPTR]:=STRPOOL[K];DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;
END{:603};END;{:602}{607:}PROCEDURE MOVEMENT(W:SCALED;O:EIGHTBITS);
LABEL 10,40,45,2,1;VAR MSTATE:SMALLNUMBER;P,Q:HALFWORD;K:INTEGER;
BEGIN Q:=GETNODE(3);MEM[Q+1].INT:=W;MEM[Q+2].INT:=DVIOFFSET+DVIPTR;
IF O=157 THEN BEGIN MEM[Q].HH.RH:=DOWNPTR;DOWNPTR:=Q;
END ELSE BEGIN MEM[Q].HH.RH:=RIGHTPTR;RIGHTPTR:=Q;END;
{611:}P:=MEM[Q].HH.RH;MSTATE:=0;
WHILE P<>0 DO BEGIN IF MEM[P+1].INT=W THEN{612:}CASE MSTATE+MEM[P].HH.LH
OF 3,4,15,16:IF MEM[P+2].INT<DVIGONE THEN GOTO 45 ELSE{613:}BEGIN K:=MEM
[P+2].INT-DVIOFFSET;IF K<0 THEN K:=K+DVIBUFSIZE;DVIBUF[K]:=DVIBUF[K]+5;
MEM[P].HH.LH:=1;GOTO 40;END{:613};
5,9,11:IF MEM[P+2].INT<DVIGONE THEN GOTO 45 ELSE{614:}BEGIN K:=MEM[P+2].
INT-DVIOFFSET;IF K<0 THEN K:=K+DVIBUFSIZE;DVIBUF[K]:=DVIBUF[K]+10;
MEM[P].HH.LH:=2;GOTO 40;END{:614};1,2,8,13:GOTO 40;
ELSE END{:612}ELSE CASE MSTATE+MEM[P].HH.LH OF 1:MSTATE:=6;2:MSTATE:=12;
8,13:GOTO 45;ELSE END;P:=MEM[P].HH.RH;END;45:{:611};
{610:}MEM[Q].HH.LH:=3;
IF ABS(W)>=8388608 THEN BEGIN BEGIN DVIBUF[DVIPTR]:=O+3;
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;DVIFOUR(W);GOTO 10;
END;IF ABS(W)>=32768 THEN BEGIN BEGIN DVIBUF[DVIPTR]:=O+2;
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;
IF W<0 THEN W:=W+16777216;BEGIN DVIBUF[DVIPTR]:=W DIV 65536;
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;W:=W MOD 65536;
GOTO 2;END;IF ABS(W)>=128 THEN BEGIN BEGIN DVIBUF[DVIPTR]:=O+1;
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;
IF W<0 THEN W:=W+65536;GOTO 2;END;BEGIN DVIBUF[DVIPTR]:=O;
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;
IF W<0 THEN W:=W+256;GOTO 1;2:BEGIN DVIBUF[DVIPTR]:=W DIV 256;
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;
1:BEGIN DVIBUF[DVIPTR]:=W MOD 256;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;GOTO 10{:610};
40:{609:}MEM[Q].HH.LH:=MEM[P].HH.LH;
IF MEM[Q].HH.LH=1 THEN BEGIN BEGIN DVIBUF[DVIPTR]:=O+4;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;
WHILE MEM[Q].HH.RH<>P DO BEGIN Q:=MEM[Q].HH.RH;
CASE MEM[Q].HH.LH OF 3:MEM[Q].HH.LH:=5;4:MEM[Q].HH.LH:=6;ELSE END;END;
END ELSE BEGIN BEGIN DVIBUF[DVIPTR]:=O+9;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;
WHILE MEM[Q].HH.RH<>P DO BEGIN Q:=MEM[Q].HH.RH;
CASE MEM[Q].HH.LH OF 3:MEM[Q].HH.LH:=4;5:MEM[Q].HH.LH:=6;ELSE END;END;
END{:609};10:END;{:607}{615:}PROCEDURE PRUNEMOVEMEN(L:INTEGER);
LABEL 30,10;VAR P:HALFWORD;
BEGIN WHILE DOWNPTR<>0 DO BEGIN IF MEM[DOWNPTR+2].INT<L THEN GOTO 30;
P:=DOWNPTR;DOWNPTR:=MEM[P].HH.RH;FREENODE(P,3);END;
30:WHILE RIGHTPTR<>0 DO BEGIN IF MEM[RIGHTPTR+2].INT<L THEN GOTO 10;
P:=RIGHTPTR;RIGHTPTR:=MEM[P].HH.RH;FREENODE(P,3);END;10:END;
{:615}{618:}PROCEDURE VLISTOUT;FORWARD;
{:618}{619:}{1368:}PROCEDURE SPECIALOUT(P:HALFWORD);
VAR OLDSETTING:0..21;K:POOLPOINTER;
BEGIN IF CURH<>DVIH THEN BEGIN MOVEMENT(CURH-DVIH,143);DVIH:=CURH;END;
IF CURV<>DVIV THEN BEGIN MOVEMENT(CURV-DVIV,157);DVIV:=CURV;END;
OLDSETTING:=SELECTOR;SELECTOR:=21;
SHOWTOKENLIS(MEM[MEM[P+1].HH.RH].HH.RH,0,POOLSIZE-POOLPTR);
SELECTOR:=OLDSETTING;
BEGIN IF POOLPTR+1>POOLSIZE THEN OVERFLOW(257,POOLSIZE-INITPOOLPTR);END;
IF(POOLPTR-STRSTART[STRPTR])<256 THEN BEGIN BEGIN DVIBUF[DVIPTR]:=239;
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;
BEGIN DVIBUF[DVIPTR]:=(POOLPTR-STRSTART[STRPTR]);DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;
END ELSE BEGIN BEGIN DVIBUF[DVIPTR]:=242;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;DVIFOUR((POOLPTR-STRSTART[STRPTR]));
END;
FOR K:=STRSTART[STRPTR]TO POOLPTR-1 DO BEGIN DVIBUF[DVIPTR]:=STRPOOL[K];
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;
POOLPTR:=STRSTART[STRPTR];END;
{:1368}{1370:}PROCEDURE WRITEOUT(P:HALFWORD);VAR OLDSETTING:0..21;
OLDMODE:INTEGER;J:SMALLNUMBER;Q,R:HALFWORD;BEGIN{1371:}Q:=GETAVAIL;
MEM[Q].HH.LH:=637;R:=GETAVAIL;MEM[Q].HH.RH:=R;MEM[R].HH.LH:=6717;
BEGINTOKENLI(Q,4);BEGINTOKENLI(MEM[P+1].HH.RH,15);Q:=GETAVAIL;
MEM[Q].HH.LH:=379;BEGINTOKENLI(Q,4);OLDMODE:=CURLIST.MODEFIELD;
CURLIST.MODEFIELD:=0;CURCS:=WRITELOC;Q:=SCANTOKS(FALSE,TRUE);GETTOKEN;
IF CURTOK<>6717 THEN{1372:}BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(1298);END;BEGIN HELPPTR:=2;HELPLINE[1]:=1299;
HELPLINE[0]:=1013;END;ERROR;REPEAT GETTOKEN;UNTIL CURTOK=6717;
END{:1372};CURLIST.MODEFIELD:=OLDMODE;ENDTOKENLIST{:1371};
OLDSETTING:=SELECTOR;J:=MEM[P+1].HH.LH;
IF WRITEOPEN[J]THEN SELECTOR:=J ELSE BEGIN IF(J=17)AND(SELECTOR=19)THEN
SELECTOR:=18;PRINTNL(338);END;TOKENSHOW(DEFREF);PRINTLN;
FLUSHLIST(DEFREF);SELECTOR:=OLDSETTING;END;
{:1370}{1373:}PROCEDURE OUTWHAT(P:HALFWORD);VAR J:SMALLNUMBER;
BEGIN CASE MEM[P].HH.B1 OF 0,1,2:{1374:}IF NOT DOINGLEADERS THEN BEGIN J
:=MEM[P+1].HH.LH;
IF MEM[P].HH.B1=1 THEN WRITEOUT(P)ELSE BEGIN IF WRITEOPEN[J]THEN ACLOSE(
WRITEFILE[J]);
IF MEM[P].HH.B1=2 THEN WRITEOPEN[J]:=FALSE ELSE IF J<16 THEN BEGIN
CURNAME:=MEM[P+1].HH.RH;CURAREA:=MEM[P+2].HH.LH;CUREXT:=MEM[P+2].HH.RH;
IF CUREXT=338 THEN CUREXT:=791;PACKFILENAME(CURNAME,CURAREA,CUREXT);
WHILE NOT AOPENOUT(WRITEFILE[J])DO PROMPTFILENA(1301,791);
WRITEOPEN[J]:=TRUE;END;END;END{:1374};3:SPECIALOUT(P);4:;
ELSE CONFUSION(1300)END;END;{:1373}PROCEDURE HLISTOUT;LABEL 21,13,14,15;
VAR BASELINE:SCALED;LEFTEDGE:SCALED;SAVEH,SAVEV:SCALED;THISBOX:HALFWORD;
GORDER:GLUEORD;GSIGN:0..2;P:HALFWORD;SAVELOC:INTEGER;LEADERBOX:HALFWORD;
LEADERWD:SCALED;LX:SCALED;OUTERDOINGLE:BOOLEAN;EDGE:SCALED;
GLUETEMP:REAL;CURGLUE:REAL;CURG:SCALED;BEGIN CURG:=0;CURGLUE:=0.0;
THISBOX:=TEMPPTR;GORDER:=MEM[THISBOX+5].HH.B1;
GSIGN:=MEM[THISBOX+5].HH.B0;P:=MEM[THISBOX+5].HH.RH;CURS:=CURS+1;
IF CURS>0 THEN BEGIN DVIBUF[DVIPTR]:=141;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;IF CURS>MAXPUSH THEN MAXPUSH:=CURS;
SAVELOC:=DVIOFFSET+DVIPTR;BASELINE:=CURV;LEFTEDGE:=CURH;
WHILE P<>0 DO{620:}21:IF(P>=HIMEMMIN)THEN BEGIN IF CURH<>DVIH THEN BEGIN
MOVEMENT(CURH-DVIH,143);DVIH:=CURH;END;
IF CURV<>DVIV THEN BEGIN MOVEMENT(CURV-DVIV,157);DVIV:=CURV;END;
REPEAT F:=MEM[P].HH.B0;C:=MEM[P].HH.B1;
IF F<>DVIF THEN{621:}BEGIN IF NOT FONTUSED[F]THEN BEGIN DVIFONTDEF(F);
FONTUSED[F]:=TRUE;END;IF F<=64 THEN BEGIN DVIBUF[DVIPTR]:=F+170;
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;
END ELSE BEGIN BEGIN DVIBUF[DVIPTR]:=235;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;BEGIN DVIBUF[DVIPTR]:=F-1;
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;END;DVIF:=F;
END{:621};IF C>=128 THEN BEGIN DVIBUF[DVIPTR]:=128;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;BEGIN DVIBUF[DVIPTR]:=C;
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;
CURH:=CURH+FONTINFO[WIDTHBASE[F]+FONTINFO[CHARBASE[F]+C].QQQQ.B0].INT;
P:=MEM[P].HH.RH;UNTIL NOT(P>=HIMEMMIN);DVIH:=CURH;
END ELSE{622:}BEGIN CASE MEM[P].HH.B0 OF 0,1:{623:}IF MEM[P+5].HH.RH=0
THEN CURH:=CURH+MEM[P+1].INT ELSE BEGIN SAVEH:=DVIH;SAVEV:=DVIV;
CURV:=BASELINE+MEM[P+4].INT;TEMPPTR:=P;EDGE:=CURH;
IF MEM[P].HH.B0=1 THEN VLISTOUT ELSE HLISTOUT;DVIH:=SAVEH;DVIV:=SAVEV;
CURH:=EDGE+MEM[P+1].INT;CURV:=BASELINE;END{:623};
2:BEGIN RULEHT:=MEM[P+3].INT;RULEDP:=MEM[P+2].INT;RULEWD:=MEM[P+1].INT;
GOTO 14;END;8:{1367:}OUTWHAT(P){:1367};10:{625:}BEGIN G:=MEM[P+1].HH.LH;
RULEWD:=MEM[G+1].INT-CURG;
IF GSIGN<>0 THEN BEGIN IF GSIGN=1 THEN BEGIN IF MEM[G].HH.B0=GORDER THEN
BEGIN CURGLUE:=CURGLUE+MEM[G+2].INT;GLUETEMP:=MEM[THISBOX+6].GR*CURGLUE;
IF GLUETEMP>1000000000.0 THEN GLUETEMP:=1000000000.0 ELSE IF GLUETEMP<
-1000000000.0 THEN GLUETEMP:=-1000000000.0;CURG:=ROUND(GLUETEMP);END;
END ELSE IF MEM[G].HH.B1=GORDER THEN BEGIN CURGLUE:=CURGLUE-MEM[G+3].INT
;GLUETEMP:=MEM[THISBOX+6].GR*CURGLUE;
IF GLUETEMP>1000000000.0 THEN GLUETEMP:=1000000000.0 ELSE IF GLUETEMP<
-1000000000.0 THEN GLUETEMP:=-1000000000.0;CURG:=ROUND(GLUETEMP);END;
END;RULEWD:=RULEWD+CURG;
IF MEM[P].HH.B1>=100 THEN{626:}BEGIN LEADERBOX:=MEM[P+1].HH.RH;
IF MEM[LEADERBOX].HH.B0=2 THEN BEGIN RULEHT:=MEM[LEADERBOX+3].INT;
RULEDP:=MEM[LEADERBOX+2].INT;GOTO 14;END;LEADERWD:=MEM[LEADERBOX+1].INT;
IF(LEADERWD>0)AND(RULEWD>0)THEN BEGIN RULEWD:=RULEWD+10;
EDGE:=CURH+RULEWD;LX:=0;
{627:}IF MEM[P].HH.B1=100 THEN BEGIN SAVEH:=CURH;
CURH:=LEFTEDGE+LEADERWD*((CURH-LEFTEDGE)DIV LEADERWD);
IF CURH<SAVEH THEN CURH:=CURH+LEADERWD;
END ELSE BEGIN LQ:=RULEWD DIV LEADERWD;LR:=RULEWD MOD LEADERWD;
IF MEM[P].HH.B1=101 THEN CURH:=CURH+(LR DIV 2)ELSE BEGIN LX:=LR DIV(LQ+1
);CURH:=CURH+((LR-(LQ-1)*LX)DIV 2);END;END{:627};
WHILE CURH+LEADERWD<=EDGE DO{628:}BEGIN CURV:=BASELINE+MEM[LEADERBOX+4].
INT;IF CURV<>DVIV THEN BEGIN MOVEMENT(CURV-DVIV,157);DVIV:=CURV;END;
SAVEV:=DVIV;IF CURH<>DVIH THEN BEGIN MOVEMENT(CURH-DVIH,143);DVIH:=CURH;
END;SAVEH:=DVIH;TEMPPTR:=LEADERBOX;OUTERDOINGLE:=DOINGLEADERS;
DOINGLEADERS:=TRUE;
IF MEM[LEADERBOX].HH.B0=1 THEN VLISTOUT ELSE HLISTOUT;
DOINGLEADERS:=OUTERDOINGLE;DVIV:=SAVEV;DVIH:=SAVEH;CURV:=BASELINE;
CURH:=SAVEH+LEADERWD+LX;END{:628};CURH:=EDGE-10;GOTO 15;END;END{:626};
GOTO 13;END{:625};11,9:CURH:=CURH+MEM[P+1].INT;
6:{652:}BEGIN MEM[29988]:=MEM[P+1];MEM[29988].HH.RH:=MEM[P].HH.RH;
P:=29988;GOTO 21;END{:652};ELSE END;GOTO 15;
14:{624:}IF(RULEHT=-1073741824)THEN RULEHT:=MEM[THISBOX+3].INT;
IF(RULEDP=-1073741824)THEN RULEDP:=MEM[THISBOX+2].INT;
RULEHT:=RULEHT+RULEDP;
IF(RULEHT>0)AND(RULEWD>0)THEN BEGIN IF CURH<>DVIH THEN BEGIN MOVEMENT(
CURH-DVIH,143);DVIH:=CURH;END;CURV:=BASELINE+RULEDP;
IF CURV<>DVIV THEN BEGIN MOVEMENT(CURV-DVIV,157);DVIV:=CURV;END;
BEGIN DVIBUF[DVIPTR]:=132;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;DVIFOUR(RULEHT);DVIFOUR(RULEWD);
CURV:=BASELINE;DVIH:=DVIH+RULEWD;END{:624};13:CURH:=CURH+RULEWD;
15:P:=MEM[P].HH.RH;END{:622}{:620};PRUNEMOVEMEN(SAVELOC);
IF CURS>0 THEN DVIPOP(SAVELOC);CURS:=CURS-1;END;
{:619}{629:}PROCEDURE VLISTOUT;LABEL 13,14,15;VAR LEFTEDGE:SCALED;
TOPEDGE:SCALED;SAVEH,SAVEV:SCALED;THISBOX:HALFWORD;GORDER:GLUEORD;
GSIGN:0..2;P:HALFWORD;SAVELOC:INTEGER;LEADERBOX:HALFWORD;
LEADERHT:SCALED;LX:SCALED;OUTERDOINGLE:BOOLEAN;EDGE:SCALED;
GLUETEMP:REAL;CURGLUE:REAL;CURG:SCALED;BEGIN CURG:=0;CURGLUE:=0.0;
THISBOX:=TEMPPTR;GORDER:=MEM[THISBOX+5].HH.B1;
GSIGN:=MEM[THISBOX+5].HH.B0;P:=MEM[THISBOX+5].HH.RH;CURS:=CURS+1;
IF CURS>0 THEN BEGIN DVIBUF[DVIPTR]:=141;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;IF CURS>MAXPUSH THEN MAXPUSH:=CURS;
SAVELOC:=DVIOFFSET+DVIPTR;LEFTEDGE:=CURH;CURV:=CURV-MEM[THISBOX+3].INT;
TOPEDGE:=CURV;
WHILE P<>0 DO{630:}BEGIN IF(P>=HIMEMMIN)THEN CONFUSION(829)ELSE{631:}
BEGIN CASE MEM[P].HH.B0 OF 0,1:{632:}IF MEM[P+5].HH.RH=0 THEN CURV:=CURV
+MEM[P+3].INT+MEM[P+2].INT ELSE BEGIN CURV:=CURV+MEM[P+3].INT;
IF CURV<>DVIV THEN BEGIN MOVEMENT(CURV-DVIV,157);DVIV:=CURV;END;
SAVEH:=DVIH;SAVEV:=DVIV;CURH:=LEFTEDGE+MEM[P+4].INT;TEMPPTR:=P;
IF MEM[P].HH.B0=1 THEN VLISTOUT ELSE HLISTOUT;DVIH:=SAVEH;DVIV:=SAVEV;
CURV:=SAVEV+MEM[P+2].INT;CURH:=LEFTEDGE;END{:632};
2:BEGIN RULEHT:=MEM[P+3].INT;RULEDP:=MEM[P+2].INT;RULEWD:=MEM[P+1].INT;
GOTO 14;END;8:{1366:}OUTWHAT(P){:1366};10:{634:}BEGIN G:=MEM[P+1].HH.LH;
RULEHT:=MEM[G+1].INT-CURG;
IF GSIGN<>0 THEN BEGIN IF GSIGN=1 THEN BEGIN IF MEM[G].HH.B0=GORDER THEN
BEGIN CURGLUE:=CURGLUE+MEM[G+2].INT;GLUETEMP:=MEM[THISBOX+6].GR*CURGLUE;
IF GLUETEMP>1000000000.0 THEN GLUETEMP:=1000000000.0 ELSE IF GLUETEMP<
-1000000000.0 THEN GLUETEMP:=-1000000000.0;CURG:=ROUND(GLUETEMP);END;
END ELSE IF MEM[G].HH.B1=GORDER THEN BEGIN CURGLUE:=CURGLUE-MEM[G+3].INT
;GLUETEMP:=MEM[THISBOX+6].GR*CURGLUE;
IF GLUETEMP>1000000000.0 THEN GLUETEMP:=1000000000.0 ELSE IF GLUETEMP<
-1000000000.0 THEN GLUETEMP:=-1000000000.0;CURG:=ROUND(GLUETEMP);END;
END;RULEHT:=RULEHT+CURG;
IF MEM[P].HH.B1>=100 THEN{635:}BEGIN LEADERBOX:=MEM[P+1].HH.RH;
IF MEM[LEADERBOX].HH.B0=2 THEN BEGIN RULEWD:=MEM[LEADERBOX+1].INT;
RULEDP:=0;GOTO 14;END;
LEADERHT:=MEM[LEADERBOX+3].INT+MEM[LEADERBOX+2].INT;
IF(LEADERHT>0)AND(RULEHT>0)THEN BEGIN RULEHT:=RULEHT+10;
EDGE:=CURV+RULEHT;LX:=0;
{636:}IF MEM[P].HH.B1=100 THEN BEGIN SAVEV:=CURV;
CURV:=TOPEDGE+LEADERHT*((CURV-TOPEDGE)DIV LEADERHT);
IF CURV<SAVEV THEN CURV:=CURV+LEADERHT;
END ELSE BEGIN LQ:=RULEHT DIV LEADERHT;LR:=RULEHT MOD LEADERHT;
IF MEM[P].HH.B1=101 THEN CURV:=CURV+(LR DIV 2)ELSE BEGIN LX:=LR DIV(LQ+1
);CURV:=CURV+((LR-(LQ-1)*LX)DIV 2);END;END{:636};
WHILE CURV+LEADERHT<=EDGE DO{637:}BEGIN CURH:=LEFTEDGE+MEM[LEADERBOX+4].
INT;IF CURH<>DVIH THEN BEGIN MOVEMENT(CURH-DVIH,143);DVIH:=CURH;END;
SAVEH:=DVIH;CURV:=CURV+MEM[LEADERBOX+3].INT;
IF CURV<>DVIV THEN BEGIN MOVEMENT(CURV-DVIV,157);DVIV:=CURV;END;
SAVEV:=DVIV;TEMPPTR:=LEADERBOX;OUTERDOINGLE:=DOINGLEADERS;
DOINGLEADERS:=TRUE;
IF MEM[LEADERBOX].HH.B0=1 THEN VLISTOUT ELSE HLISTOUT;
DOINGLEADERS:=OUTERDOINGLE;DVIV:=SAVEV;DVIH:=SAVEH;CURH:=LEFTEDGE;
CURV:=SAVEV-MEM[LEADERBOX+3].INT+LEADERHT+LX;END{:637};CURV:=EDGE-10;
GOTO 15;END;END{:635};GOTO 13;END{:634};11:CURV:=CURV+MEM[P+1].INT;
ELSE END;GOTO 15;
14:{633:}IF(RULEWD=-1073741824)THEN RULEWD:=MEM[THISBOX+1].INT;
RULEHT:=RULEHT+RULEDP;CURV:=CURV+RULEHT;
IF(RULEHT>0)AND(RULEWD>0)THEN BEGIN IF CURH<>DVIH THEN BEGIN MOVEMENT(
CURH-DVIH,143);DVIH:=CURH;END;
IF CURV<>DVIV THEN BEGIN MOVEMENT(CURV-DVIV,157);DVIV:=CURV;END;
BEGIN DVIBUF[DVIPTR]:=137;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;DVIFOUR(RULEHT);DVIFOUR(RULEWD);END;
GOTO 15{:633};13:CURV:=CURV+RULEHT;END{:631};15:P:=MEM[P].HH.RH;
END{:630};PRUNEMOVEMEN(SAVELOC);IF CURS>0 THEN DVIPOP(SAVELOC);
CURS:=CURS-1;END;{:629}{638:}PROCEDURE SHIPOUT(P:HALFWORD);LABEL 30;
VAR PAGELOC:INTEGER;J,K:0..9;S:POOLPOINTER;OLDSETTING:0..21;
BEGIN IF EQTB[5297].INT>0 THEN BEGIN PRINTNL(338);PRINTLN;PRINT(830);
END;IF TERMOFFSET>MAXPRINTLINE-9 THEN PRINTLN ELSE IF(TERMOFFSET>0)OR(
FILEOFFSET>0)THEN PRINTCHAR(32);PRINTCHAR(91);J:=9;
WHILE(EQTB[5318+J].INT=0)AND(J>0)DO J:=J-1;
FOR K:=0 TO J DO BEGIN PRINTINT(EQTB[5318+K].INT);
IF K<J THEN PRINTCHAR(46);END;FLUSH(OUTPUT);
IF EQTB[5297].INT>0 THEN BEGIN PRINTCHAR(93);BEGINDIAGNOS;SHOWBOX(P);
ENDDIAGNOSTI(TRUE);END;
{640:}{641:}IF(MEM[P+3].INT>1073741823)OR(MEM[P+2].INT>1073741823)OR(MEM
[P+3].INT+MEM[P+2].INT+EQTB[5849].INT>1073741823)OR(MEM[P+1].INT+EQTB[
5848].INT>1073741823)THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(834);END;BEGIN HELPPTR:=2;HELPLINE[1]:=835;
HELPLINE[0]:=836;END;ERROR;IF EQTB[5297].INT<=0 THEN BEGIN BEGINDIAGNOS;
PRINTNL(837);SHOWBOX(P);ENDDIAGNOSTI(TRUE);END;GOTO 30;END;
IF MEM[P+3].INT+MEM[P+2].INT+EQTB[5849].INT>MAXV THEN MAXV:=MEM[P+3].INT
+MEM[P+2].INT+EQTB[5849].INT;
IF MEM[P+1].INT+EQTB[5848].INT>MAXH THEN MAXH:=MEM[P+1].INT+EQTB[5848].
INT{:641};{617:}DVIH:=0;DVIV:=0;CURH:=EQTB[5848].INT;DVIF:=0;
IF OUTPUTFILENA=0 THEN BEGIN IF JOBNAME=0 THEN OPENLOGFILE;
PACKJOBNAME(795);WHILE NOT BOPENOUT(DVIFILE)DO PROMPTFILENA(796,795);
OUTPUTFILENA:=BMAKENAMESTR(DVIFILE);END;
IF TOTALPAGES=0 THEN BEGIN BEGIN DVIBUF[DVIPTR]:=247;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;BEGIN DVIBUF[DVIPTR]:=2;
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;DVIFOUR(25400000);
DVIFOUR(473628672);PREPAREMAG;DVIFOUR(EQTB[5280].INT);
OLDSETTING:=SELECTOR;SELECTOR:=21;PRINT(828);PRINTINT(EQTB[5286].INT);
PRINTCHAR(46);PRINTTWO(EQTB[5285].INT);PRINTCHAR(46);
PRINTTWO(EQTB[5284].INT);PRINTCHAR(58);PRINTTWO(EQTB[5283].INT DIV 60);
PRINTTWO(EQTB[5283].INT MOD 60);SELECTOR:=OLDSETTING;
BEGIN DVIBUF[DVIPTR]:=(POOLPTR-STRSTART[STRPTR]);DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;
FOR S:=STRSTART[STRPTR]TO POOLPTR-1 DO BEGIN DVIBUF[DVIPTR]:=STRPOOL[S];
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;
POOLPTR:=STRSTART[STRPTR];END{:617};PAGELOC:=DVIOFFSET+DVIPTR;
BEGIN DVIBUF[DVIPTR]:=139;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;
FOR K:=0 TO 9 DO DVIFOUR(EQTB[5318+K].INT);DVIFOUR(LASTBOP);
LASTBOP:=PAGELOC;CURV:=MEM[P+3].INT+EQTB[5849].INT;TEMPPTR:=P;
IF MEM[P].HH.B0=1 THEN VLISTOUT ELSE HLISTOUT;BEGIN DVIBUF[DVIPTR]:=140;
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;
TOTALPAGES:=TOTALPAGES+1;CURS:=-1;30:{:640};
IF EQTB[5297].INT<=0 THEN PRINTCHAR(93);DEADCYCLES:=0;FLUSH(OUTPUT);
{639:}IF EQTB[5294].INT>1 THEN BEGIN PRINTNL(831);PRINTINT(VARUSED);
PRINTCHAR(38);PRINTINT(DYNUSED);PRINTCHAR(59);END;FLUSHNODELIS(P);
IF EQTB[5294].INT>1 THEN BEGIN PRINT(832);PRINTINT(VARUSED);
PRINTCHAR(38);PRINTINT(DYNUSED);PRINT(833);
PRINTINT(HIMEMMIN-LOMEMMAX-1);PRINTLN;END;{:639};END;
{:638}{645:}PROCEDURE SCANSPEC(C:GROUPCODE;THREECODES:BOOLEAN);LABEL 40;
VAR S:INTEGER;SPECCODE:0..1;
BEGIN IF THREECODES THEN S:=SAVESTACK[SAVEPTR+0].INT;
IF SCANKEYWORD(843)THEN SPECCODE:=0 ELSE IF SCANKEYWORD(844)THEN
SPECCODE:=1 ELSE BEGIN SPECCODE:=1;CURVAL:=0;GOTO 40;END;
SCANDIMEN(FALSE,FALSE,FALSE);
40:IF THREECODES THEN BEGIN SAVESTACK[SAVEPTR+0].INT:=S;
SAVEPTR:=SAVEPTR+1;END;SAVESTACK[SAVEPTR+0].INT:=SPECCODE;
SAVESTACK[SAVEPTR+1].INT:=CURVAL;SAVEPTR:=SAVEPTR+2;NEWSAVELEVEL(C);
SCANLEFTBRAC;END;{:645}{649:}FUNCTION HPACK(P:HALFWORD;W:SCALED;
M:SMALLNUMBER):HALFWORD;LABEL 21,50,10;VAR R:HALFWORD;Q:HALFWORD;
H,D,X:SCALED;S:SCALED;G:HALFWORD;O:GLUEORD;F:INTERNALFONT;
I:FOURQUARTERS;HD:EIGHTBITS;BEGIN LASTBADNESS:=0;R:=GETNODE(7);
MEM[R].HH.B0:=0;MEM[R].HH.B1:=0;MEM[R+4].INT:=0;Q:=R+5;MEM[Q].HH.RH:=P;
H:=0;{650:}D:=0;X:=0;TOTALSTRETCH[0]:=0;TOTALSHRINK[0]:=0;
TOTALSTRETCH[1]:=0;TOTALSHRINK[1]:=0;TOTALSTRETCH[2]:=0;
TOTALSHRINK[2]:=0;TOTALSTRETCH[3]:=0;TOTALSHRINK[3]:=0{:650};
WHILE P<>0 DO{651:}BEGIN 21:WHILE(P>=HIMEMMIN)DO{654:}BEGIN F:=MEM[P].HH
.B0;I:=FONTINFO[CHARBASE[F]+MEM[P].HH.B1].QQQQ;HD:=I.B1;
X:=X+FONTINFO[WIDTHBASE[F]+I.B0].INT;
S:=FONTINFO[HEIGHTBASE[F]+(HD)DIV 16].INT;IF S>H THEN H:=S;
S:=FONTINFO[DEPTHBASE[F]+(HD)MOD 16].INT;IF S>D THEN D:=S;
P:=MEM[P].HH.RH;END{:654};
IF P<>0 THEN BEGIN CASE MEM[P].HH.B0 OF 0,1,2,13:{653:}BEGIN X:=X+MEM[P
+1].INT;IF MEM[P].HH.B0>=2 THEN S:=0 ELSE S:=MEM[P+4].INT;
IF MEM[P+3].INT-S>H THEN H:=MEM[P+3].INT-S;
IF MEM[P+2].INT+S>D THEN D:=MEM[P+2].INT+S;END{:653};
3,4,5:IF ADJUSTTAIL<>0 THEN{655:}BEGIN WHILE MEM[Q].HH.RH<>P DO Q:=MEM[Q
].HH.RH;
IF MEM[P].HH.B0=5 THEN BEGIN MEM[ADJUSTTAIL].HH.RH:=MEM[P+1].INT;
WHILE MEM[ADJUSTTAIL].HH.RH<>0 DO ADJUSTTAIL:=MEM[ADJUSTTAIL].HH.RH;
P:=MEM[P].HH.RH;FREENODE(MEM[Q].HH.RH,2);
END ELSE BEGIN MEM[ADJUSTTAIL].HH.RH:=P;ADJUSTTAIL:=P;P:=MEM[P].HH.RH;
END;MEM[Q].HH.RH:=P;P:=Q;END{:655};8:{1360:}{:1360};
10:{656:}BEGIN G:=MEM[P+1].HH.LH;X:=X+MEM[G+1].INT;O:=MEM[G].HH.B0;
TOTALSTRETCH[O]:=TOTALSTRETCH[O]+MEM[G+2].INT;O:=MEM[G].HH.B1;
TOTALSHRINK[O]:=TOTALSHRINK[O]+MEM[G+3].INT;
IF MEM[P].HH.B1>=100 THEN BEGIN G:=MEM[P+1].HH.RH;
IF MEM[G+3].INT>H THEN H:=MEM[G+3].INT;
IF MEM[G+2].INT>D THEN D:=MEM[G+2].INT;END;END{:656};
11,9:X:=X+MEM[P+1].INT;6:{652:}BEGIN MEM[29988]:=MEM[P+1];
MEM[29988].HH.RH:=MEM[P].HH.RH;P:=29988;GOTO 21;END{:652};ELSE END;
P:=MEM[P].HH.RH;END;END{:651};
IF ADJUSTTAIL<>0 THEN MEM[ADJUSTTAIL].HH.RH:=0;MEM[R+3].INT:=H;
MEM[R+2].INT:=D;{657:}IF M=1 THEN W:=X+W;MEM[R+1].INT:=W;X:=W-X;
IF X=0 THEN BEGIN MEM[R+5].HH.B0:=0;MEM[R+5].HH.B1:=0;MEM[R+6].GR:=0.0;
GOTO 10;
END ELSE IF X>0 THEN{658:}BEGIN{659:}IF TOTALSTRETCH[3]<>0 THEN O:=3
ELSE IF TOTALSTRETCH[2]<>0 THEN O:=2 ELSE IF TOTALSTRETCH[1]<>0 THEN O:=
1 ELSE O:=0{:659};MEM[R+5].HH.B1:=O;MEM[R+5].HH.B0:=1;
IF TOTALSTRETCH[O]<>0 THEN MEM[R+6].GR:=X/TOTALSTRETCH[O]ELSE BEGIN MEM[
R+5].HH.B0:=0;MEM[R+6].GR:=0.0;END;
IF O=0 THEN IF MEM[R+5].HH.RH<>0 THEN{660:}BEGIN LASTBADNESS:=BADNESS(X,
TOTALSTRETCH[0]);IF LASTBADNESS>EQTB[5289].INT THEN BEGIN PRINTLN;
IF LASTBADNESS>100 THEN PRINTNL(845)ELSE PRINTNL(846);PRINT(847);
PRINTINT(LASTBADNESS);GOTO 50;END;END{:660};GOTO 10;
END{:658}ELSE{664:}BEGIN{665:}IF TOTALSHRINK[3]<>0 THEN O:=3 ELSE IF
TOTALSHRINK[2]<>0 THEN O:=2 ELSE IF TOTALSHRINK[1]<>0 THEN O:=1 ELSE O:=
0{:665};MEM[R+5].HH.B1:=O;MEM[R+5].HH.B0:=2;
IF TOTALSHRINK[O]<>0 THEN MEM[R+6].GR:=(-X)/TOTALSHRINK[O]ELSE BEGIN MEM
[R+5].HH.B0:=0;MEM[R+6].GR:=0.0;END;
IF(TOTALSHRINK[O]<-X)AND(O=0)AND(MEM[R+5].HH.RH<>0)THEN BEGIN
LASTBADNESS:=1000000;MEM[R+6].GR:=1.0;
{666:}IF(-X-TOTALSHRINK[0]>EQTB[5838].INT)OR(EQTB[5289].INT<100)THEN
BEGIN IF(EQTB[5846].INT>0)AND(-X-TOTALSHRINK[0]>EQTB[5838].INT)THEN
BEGIN WHILE MEM[Q].HH.RH<>0 DO Q:=MEM[Q].HH.RH;MEM[Q].HH.RH:=NEWRULE;
MEM[MEM[Q].HH.RH+1].INT:=EQTB[5846].INT;END;PRINTLN;PRINTNL(853);
PRINTSCALED(-X-TOTALSHRINK[0]);PRINT(854);GOTO 50;END{:666};
END ELSE IF O=0 THEN IF MEM[R+5].HH.RH<>0 THEN{667:}BEGIN LASTBADNESS:=
BADNESS(-X,TOTALSHRINK[0]);
IF LASTBADNESS>EQTB[5289].INT THEN BEGIN PRINTLN;PRINTNL(855);
PRINTINT(LASTBADNESS);GOTO 50;END;END{:667};GOTO 10;END{:664}{:657};
50:{663:}IF OUTPUTACTIVE THEN PRINT(848)ELSE BEGIN IF PACKBEGINLIN<>0
THEN BEGIN IF PACKBEGINLIN>0 THEN PRINT(849)ELSE PRINT(850);
PRINTINT(ABS(PACKBEGINLIN));PRINT(851);END ELSE PRINT(852);
PRINTINT(LINE);END;PRINTLN;FONTINSHORTD:=0;SHORTDISPLAY(MEM[R+5].HH.RH);
PRINTLN;BEGINDIAGNOS;SHOWBOX(R);ENDDIAGNOSTI(TRUE){:663};10:HPACK:=R;
END;{:649}{668:}FUNCTION VPACKAGE(P:HALFWORD;H:SCALED;M:SMALLNUMBER;
L:SCALED):HALFWORD;LABEL 50,10;VAR R:HALFWORD;W,D,X:SCALED;S:SCALED;
G:HALFWORD;O:GLUEORD;BEGIN LASTBADNESS:=0;R:=GETNODE(7);MEM[R].HH.B0:=1;
MEM[R].HH.B1:=0;MEM[R+4].INT:=0;MEM[R+5].HH.RH:=P;W:=0;{650:}D:=0;X:=0;
TOTALSTRETCH[0]:=0;TOTALSHRINK[0]:=0;TOTALSTRETCH[1]:=0;
TOTALSHRINK[1]:=0;TOTALSTRETCH[2]:=0;TOTALSHRINK[2]:=0;
TOTALSTRETCH[3]:=0;TOTALSHRINK[3]:=0{:650};
WHILE P<>0 DO{669:}BEGIN IF(P>=HIMEMMIN)THEN CONFUSION(856)ELSE CASE MEM
[P].HH.B0 OF 0,1,2,13:{670:}BEGIN X:=X+D+MEM[P+3].INT;D:=MEM[P+2].INT;
IF MEM[P].HH.B0>=2 THEN S:=0 ELSE S:=MEM[P+4].INT;
IF MEM[P+1].INT+S>W THEN W:=MEM[P+1].INT+S;END{:670};8:{1359:}{:1359};
10:{671:}BEGIN X:=X+D;D:=0;G:=MEM[P+1].HH.LH;X:=X+MEM[G+1].INT;
O:=MEM[G].HH.B0;TOTALSTRETCH[O]:=TOTALSTRETCH[O]+MEM[G+2].INT;
O:=MEM[G].HH.B1;TOTALSHRINK[O]:=TOTALSHRINK[O]+MEM[G+3].INT;
IF MEM[P].HH.B1>=100 THEN BEGIN G:=MEM[P+1].HH.RH;
IF MEM[G+1].INT>W THEN W:=MEM[G+1].INT;END;END{:671};
11:BEGIN X:=X+D+MEM[P+1].INT;D:=0;END;ELSE END;P:=MEM[P].HH.RH;
END{:669};MEM[R+1].INT:=W;IF D>L THEN BEGIN X:=X+D-L;MEM[R+2].INT:=L;
END ELSE MEM[R+2].INT:=D;{672:}IF M=1 THEN H:=X+H;MEM[R+3].INT:=H;
X:=H-X;IF X=0 THEN BEGIN MEM[R+5].HH.B0:=0;MEM[R+5].HH.B1:=0;
MEM[R+6].GR:=0.0;GOTO 10;
END ELSE IF X>0 THEN{673:}BEGIN{659:}IF TOTALSTRETCH[3]<>0 THEN O:=3
ELSE IF TOTALSTRETCH[2]<>0 THEN O:=2 ELSE IF TOTALSTRETCH[1]<>0 THEN O:=
1 ELSE O:=0{:659};MEM[R+5].HH.B1:=O;MEM[R+5].HH.B0:=1;
IF TOTALSTRETCH[O]<>0 THEN MEM[R+6].GR:=X/TOTALSTRETCH[O]ELSE BEGIN MEM[
R+5].HH.B0:=0;MEM[R+6].GR:=0.0;END;
IF O=0 THEN IF MEM[R+5].HH.RH<>0 THEN{674:}BEGIN LASTBADNESS:=BADNESS(X,
TOTALSTRETCH[0]);IF LASTBADNESS>EQTB[5290].INT THEN BEGIN PRINTLN;
IF LASTBADNESS>100 THEN PRINTNL(845)ELSE PRINTNL(846);PRINT(857);
PRINTINT(LASTBADNESS);GOTO 50;END;END{:674};GOTO 10;
END{:673}ELSE{676:}BEGIN{665:}IF TOTALSHRINK[3]<>0 THEN O:=3 ELSE IF
TOTALSHRINK[2]<>0 THEN O:=2 ELSE IF TOTALSHRINK[1]<>0 THEN O:=1 ELSE O:=
0{:665};MEM[R+5].HH.B1:=O;MEM[R+5].HH.B0:=2;
IF TOTALSHRINK[O]<>0 THEN MEM[R+6].GR:=(-X)/TOTALSHRINK[O]ELSE BEGIN MEM
[R+5].HH.B0:=0;MEM[R+6].GR:=0.0;END;
IF(TOTALSHRINK[O]<-X)AND(O=0)AND(MEM[R+5].HH.RH<>0)THEN BEGIN
LASTBADNESS:=1000000;MEM[R+6].GR:=1.0;
{677:}IF(-X-TOTALSHRINK[0]>EQTB[5839].INT)OR(EQTB[5290].INT<100)THEN
BEGIN PRINTLN;PRINTNL(858);PRINTSCALED(-X-TOTALSHRINK[0]);PRINT(859);
GOTO 50;END{:677};
END ELSE IF O=0 THEN IF MEM[R+5].HH.RH<>0 THEN{678:}BEGIN LASTBADNESS:=
BADNESS(-X,TOTALSHRINK[0]);
IF LASTBADNESS>EQTB[5290].INT THEN BEGIN PRINTLN;PRINTNL(860);
PRINTINT(LASTBADNESS);GOTO 50;END;END{:678};GOTO 10;END{:676}{:672};
50:{675:}IF OUTPUTACTIVE THEN PRINT(848)ELSE BEGIN IF PACKBEGINLIN<>0
THEN BEGIN PRINT(850);PRINTINT(ABS(PACKBEGINLIN));PRINT(851);
END ELSE PRINT(852);PRINTINT(LINE);PRINTLN;END;BEGINDIAGNOS;SHOWBOX(R);
ENDDIAGNOSTI(TRUE){:675};10:VPACKAGE:=R;END;
{:668}{679:}PROCEDURE APPENDTOVLIS(B:HALFWORD);VAR D:SCALED;P:HALFWORD;
BEGIN IF CURLIST.AUXFIELD.INT>-65536000 THEN BEGIN D:=MEM[EQTB[2883].HH.
RH+1].INT-CURLIST.AUXFIELD.INT-MEM[B+3].INT;
IF D<EQTB[5832].INT THEN P:=NEWPARAMGLUE(0)ELSE BEGIN P:=NEWSKIPPARAM(1)
;MEM[TEMPPTR+1].INT:=D;END;MEM[CURLIST.TAILFIELD].HH.RH:=P;
CURLIST.TAILFIELD:=P;END;MEM[CURLIST.TAILFIELD].HH.RH:=B;
CURLIST.TAILFIELD:=B;CURLIST.AUXFIELD.INT:=MEM[B+2].INT;END;
{:679}{686:}FUNCTION NEWNOAD:HALFWORD;VAR P:HALFWORD;
BEGIN P:=GETNODE(4);MEM[P].HH.B0:=16;MEM[P].HH.B1:=0;
MEM[P+1].HH:=EMPTYFIELD;MEM[P+3].HH:=EMPTYFIELD;MEM[P+2].HH:=EMPTYFIELD;
NEWNOAD:=P;END;{:686}{688:}FUNCTION NEWSTYLE(S:SMALLNUMBER):HALFWORD;
VAR P:HALFWORD;BEGIN P:=GETNODE(3);MEM[P].HH.B0:=14;MEM[P].HH.B1:=S;
MEM[P+1].INT:=0;MEM[P+2].INT:=0;NEWSTYLE:=P;END;
{:688}{689:}FUNCTION NEWCHOICE:HALFWORD;VAR P:HALFWORD;
BEGIN P:=GETNODE(3);MEM[P].HH.B0:=15;MEM[P].HH.B1:=0;MEM[P+1].HH.LH:=0;
MEM[P+1].HH.RH:=0;MEM[P+2].HH.LH:=0;MEM[P+2].HH.RH:=0;NEWCHOICE:=P;END;
{:689}{693:}PROCEDURE SHOWINFO;BEGIN SHOWNODELIST(MEM[TEMPPTR].HH.LH);
END;{:693}{704:}FUNCTION FRACTIONRULE(T:SCALED):HALFWORD;VAR P:HALFWORD;
BEGIN P:=NEWRULE;MEM[P+3].INT:=T;MEM[P+2].INT:=0;FRACTIONRULE:=P;END;
{:704}{705:}FUNCTION OVERBAR(B:HALFWORD;K,T:SCALED):HALFWORD;
VAR P,Q:HALFWORD;BEGIN P:=NEWKERN(K);MEM[P].HH.RH:=B;Q:=FRACTIONRULE(T);
MEM[Q].HH.RH:=P;P:=NEWKERN(T);MEM[P].HH.RH:=Q;
OVERBAR:=VPACKAGE(P,0,1,1073741823);END;
{:705}{706:}{709:}FUNCTION CHARBOX(F:INTERNALFONT;
C:QUARTERWORD):HALFWORD;VAR Q:FOURQUARTERS;HD:EIGHTBITS;B,P:HALFWORD;
BEGIN Q:=FONTINFO[CHARBASE[F]+C].QQQQ;HD:=Q.B1;B:=NEWNULLBOX;
MEM[B+1].INT:=FONTINFO[WIDTHBASE[F]+Q.B0].INT+FONTINFO[ITALICBASE[F]+(Q.
B2)DIV 4].INT;MEM[B+3].INT:=FONTINFO[HEIGHTBASE[F]+(HD)DIV 16].INT;
MEM[B+2].INT:=FONTINFO[DEPTHBASE[F]+(HD)MOD 16].INT;P:=GETAVAIL;
MEM[P].HH.B1:=C;MEM[P].HH.B0:=F;MEM[B+5].HH.RH:=P;CHARBOX:=B;END;
{:709}{711:}PROCEDURE STACKINTOBOX(B:HALFWORD;F:INTERNALFONT;
C:QUARTERWORD);VAR P:HALFWORD;BEGIN P:=CHARBOX(F,C);
MEM[P].HH.RH:=MEM[B+5].HH.RH;MEM[B+5].HH.RH:=P;
MEM[B+3].INT:=MEM[P+3].INT;END;
{:711}{712:}FUNCTION HEIGHTPLUSDE(F:INTERNALFONT;C:QUARTERWORD):SCALED;
VAR Q:FOURQUARTERS;HD:EIGHTBITS;BEGIN Q:=FONTINFO[CHARBASE[F]+C].QQQQ;
HD:=Q.B1;
HEIGHTPLUSDE:=FONTINFO[HEIGHTBASE[F]+(HD)DIV 16].INT+FONTINFO[DEPTHBASE[
F]+(HD)MOD 16].INT;END;{:712}FUNCTION VARDELIMITER(D:HALFWORD;
S:SMALLNUMBER;V:SCALED):HALFWORD;LABEL 40,22;VAR B:HALFWORD;
F,G:INTERNALFONT;C,X,Y:QUARTERWORD;M,N:INTEGER;U:SCALED;W:SCALED;
Q:FOURQUARTERS;HD:EIGHTBITS;R:FOURQUARTERS;Z:SMALLNUMBER;
LARGEATTEMPT:BOOLEAN;BEGIN F:=0;W:=0;LARGEATTEMPT:=FALSE;
Z:=MEM[D].QQQQ.B0;X:=MEM[D].QQQQ.B1;
WHILE TRUE DO BEGIN{707:}IF(Z<>0)OR(X<>0)THEN BEGIN Z:=Z+S+16;
REPEAT Z:=Z-16;G:=EQTB[3935+Z].HH.RH;IF G<>0 THEN{708:}BEGIN Y:=X;
IF(Y>=FONTBC[G])AND(Y<=FONTEC[G])THEN BEGIN 22:Q:=FONTINFO[CHARBASE[G]+Y
].QQQQ;IF(Q.B0>0)THEN BEGIN IF((Q.B2)MOD 4)=3 THEN BEGIN F:=G;C:=Y;
GOTO 40;END;HD:=Q.B1;
U:=FONTINFO[HEIGHTBASE[G]+(HD)DIV 16].INT+FONTINFO[DEPTHBASE[G]+(HD)MOD
16].INT;IF U>W THEN BEGIN F:=G;C:=Y;W:=U;IF U>=V THEN GOTO 40;END;
IF((Q.B2)MOD 4)=2 THEN BEGIN Y:=Q.B3;GOTO 22;END;END;END;END{:708};
UNTIL Z<16;END{:707};IF LARGEATTEMPT THEN GOTO 40;LARGEATTEMPT:=TRUE;
Z:=MEM[D].QQQQ.B2;X:=MEM[D].QQQQ.B3;END;
40:IF F<>0 THEN{710:}IF((Q.B2)MOD 4)=3 THEN{713:}BEGIN B:=NEWNULLBOX;
MEM[B].HH.B0:=1;R:=FONTINFO[EXTENBASE[F]+Q.B3].QQQQ;{714:}C:=R.B3;
U:=HEIGHTPLUSDE(F,C);W:=0;Q:=FONTINFO[CHARBASE[F]+C].QQQQ;
MEM[B+1].INT:=FONTINFO[WIDTHBASE[F]+Q.B0].INT+FONTINFO[ITALICBASE[F]+(Q.
B2)DIV 4].INT;C:=R.B2;IF C<>0 THEN W:=W+HEIGHTPLUSDE(F,C);C:=R.B1;
IF C<>0 THEN W:=W+HEIGHTPLUSDE(F,C);C:=R.B0;
IF C<>0 THEN W:=W+HEIGHTPLUSDE(F,C);N:=0;
IF U>0 THEN WHILE W<V DO BEGIN W:=W+U;N:=N+1;IF R.B1<>0 THEN W:=W+U;
END{:714};C:=R.B2;IF C<>0 THEN STACKINTOBOX(B,F,C);C:=R.B3;
FOR M:=1 TO N DO STACKINTOBOX(B,F,C);C:=R.B1;
IF C<>0 THEN BEGIN STACKINTOBOX(B,F,C);C:=R.B3;
FOR M:=1 TO N DO STACKINTOBOX(B,F,C);END;C:=R.B0;
IF C<>0 THEN STACKINTOBOX(B,F,C);MEM[B+2].INT:=W-MEM[B+3].INT;
END{:713}ELSE B:=CHARBOX(F,C){:710}ELSE BEGIN B:=NEWNULLBOX;
MEM[B+1].INT:=EQTB[5841].INT;END;
MEM[B+4].INT:=HALF(MEM[B+3].INT-MEM[B+2].INT)-FONTINFO[22+PARAMBASE[EQTB
[3937+S].HH.RH]].INT;VARDELIMITER:=B;END;
{:706}{715:}FUNCTION REBOX(B:HALFWORD;W:SCALED):HALFWORD;VAR P:HALFWORD;
F:INTERNALFONT;V:SCALED;
BEGIN IF(MEM[B+1].INT<>W)AND(MEM[B+5].HH.RH<>0)THEN BEGIN IF MEM[B].HH.
B0=1 THEN B:=HPACK(B,0,1);P:=MEM[B+5].HH.RH;
IF((P>=HIMEMMIN))AND(MEM[P].HH.RH=0)THEN BEGIN F:=MEM[P].HH.B0;
V:=FONTINFO[WIDTHBASE[F]+FONTINFO[CHARBASE[F]+MEM[P].HH.B1].QQQQ.B0].INT
;IF V<>MEM[B+1].INT THEN MEM[P].HH.RH:=NEWKERN(MEM[B+1].INT-V);END;
FREENODE(B,7);B:=NEWGLUE(12);MEM[B].HH.RH:=P;
WHILE MEM[P].HH.RH<>0 DO P:=MEM[P].HH.RH;MEM[P].HH.RH:=NEWGLUE(12);
REBOX:=HPACK(B,W,0);END ELSE BEGIN MEM[B+1].INT:=W;REBOX:=B;END;END;
{:715}{716:}FUNCTION MATHGLUE(G:HALFWORD;M:SCALED):HALFWORD;
VAR P:HALFWORD;N:INTEGER;F:SCALED;BEGIN N:=XOVERN(M,65536);F:=REMAINDER;
IF F<0 THEN BEGIN N:=N-1;F:=F+65536;END;P:=GETNODE(4);
MEM[P+1].INT:=MULTANDADD(N,MEM[G+1].INT,XNOVERD(MEM[G+1].INT,F,65536),
1073741823);MEM[P].HH.B0:=MEM[G].HH.B0;
IF MEM[P].HH.B0=0 THEN MEM[P+2].INT:=MULTANDADD(N,MEM[G+2].INT,XNOVERD(
MEM[G+2].INT,F,65536),1073741823)ELSE MEM[P+2].INT:=MEM[G+2].INT;
MEM[P].HH.B1:=MEM[G].HH.B1;
IF MEM[P].HH.B1=0 THEN MEM[P+3].INT:=MULTANDADD(N,MEM[G+3].INT,XNOVERD(
MEM[G+3].INT,F,65536),1073741823)ELSE MEM[P+3].INT:=MEM[G+3].INT;
MATHGLUE:=P;END;{:716}{717:}PROCEDURE MATHKERN(P:HALFWORD;M:SCALED);
VAR N:INTEGER;F:SCALED;
BEGIN IF MEM[P].HH.B1=99 THEN BEGIN N:=XOVERN(M,65536);F:=REMAINDER;
IF F<0 THEN BEGIN N:=N-1;F:=F+65536;END;
MEM[P+1].INT:=MULTANDADD(N,MEM[P+1].INT,XNOVERD(MEM[P+1].INT,F,65536),
1073741823);MEM[P].HH.B1:=1;END;END;{:717}{718:}PROCEDURE FLUSHMATH;
BEGIN FLUSHNODELIS(MEM[CURLIST.HEADFIELD].HH.RH);
FLUSHNODELIS(CURLIST.AUXFIELD.INT);MEM[CURLIST.HEADFIELD].HH.RH:=0;
CURLIST.TAILFIELD:=CURLIST.HEADFIELD;CURLIST.AUXFIELD.INT:=0;END;
{:718}{720:}PROCEDURE MLISTTOHLIST;FORWARD;FUNCTION CLEANBOX(P:HALFWORD;
S:SMALLNUMBER):HALFWORD;LABEL 40;VAR Q:HALFWORD;SAVESTYLE:SMALLNUMBER;
X:HALFWORD;R:HALFWORD;
BEGIN CASE MEM[P].HH.RH OF 1:BEGIN CURMLIST:=NEWNOAD;
MEM[CURMLIST+1]:=MEM[P];END;2:BEGIN Q:=MEM[P].HH.LH;GOTO 40;END;
3:CURMLIST:=MEM[P].HH.LH;ELSE BEGIN Q:=NEWNULLBOX;GOTO 40;END END;
SAVESTYLE:=CURSTYLE;CURSTYLE:=S;MLISTPENALTI:=FALSE;MLISTTOHLIST;
Q:=MEM[29997].HH.RH;CURSTYLE:=SAVESTYLE;
{703:}BEGIN IF CURSTYLE<4 THEN CURSIZE:=0 ELSE CURSIZE:=16*((CURSTYLE-2)
DIV 2);
CURMU:=XOVERN(FONTINFO[6+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].INT,18);
END{:703};
40:IF(Q>=HIMEMMIN)OR(Q=0)THEN X:=HPACK(Q,0,1)ELSE IF(MEM[Q].HH.RH=0)AND(
MEM[Q].HH.B0<=1)AND(MEM[Q+4].INT=0)THEN X:=Q ELSE X:=HPACK(Q,0,1);
{721:}Q:=MEM[X+5].HH.RH;IF(Q>=HIMEMMIN)THEN BEGIN R:=MEM[Q].HH.RH;
IF R<>0 THEN IF MEM[R].HH.RH=0 THEN IF NOT(R>=HIMEMMIN)THEN IF MEM[R].HH
.B0=11 THEN BEGIN FREENODE(R,2);MEM[Q].HH.RH:=0;END;END{:721};
CLEANBOX:=X;END;{:720}{722:}PROCEDURE FETCH(A:HALFWORD);
BEGIN CURC:=MEM[A].HH.B1;CURF:=EQTB[3935+MEM[A].HH.B0+CURSIZE].HH.RH;
IF CURF=0 THEN{723:}BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(338);END;PRINTSIZE(CURSIZE);PRINTCHAR(32);PRINTINT(MEM[A].HH.B0);
PRINT(885);PRINT(CURC);PRINTCHAR(41);BEGIN HELPPTR:=4;HELPLINE[3]:=886;
HELPLINE[2]:=887;HELPLINE[1]:=888;HELPLINE[0]:=889;END;ERROR;
CURI:=NULLCHARACTE;MEM[A].HH.RH:=0;
END{:723}ELSE BEGIN IF(CURC>=FONTBC[CURF])AND(CURC<=FONTEC[CURF])THEN
CURI:=FONTINFO[CHARBASE[CURF]+CURC].QQQQ ELSE CURI:=NULLCHARACTE;
IF NOT((CURI.B0>0))THEN BEGIN CHARWARNING(CURF,CURC);MEM[A].HH.RH:=0;
CURI:=NULLCHARACTE;END;END;END;
{:722}{726:}{734:}PROCEDURE MAKEOVER(Q:HALFWORD);
BEGIN MEM[Q+1].HH.LH:=OVERBAR(CLEANBOX(Q+1,2*(CURSTYLE DIV 2)+1),3*
FONTINFO[8+PARAMBASE[EQTB[3938+CURSIZE].HH.RH]].INT,FONTINFO[8+PARAMBASE
[EQTB[3938+CURSIZE].HH.RH]].INT);MEM[Q+1].HH.RH:=2;END;
{:734}{735:}PROCEDURE MAKEUNDER(Q:HALFWORD);VAR P,X,Y:HALFWORD;
DELTA:SCALED;BEGIN X:=CLEANBOX(Q+1,CURSTYLE);
P:=NEWKERN(3*FONTINFO[8+PARAMBASE[EQTB[3938+CURSIZE].HH.RH]].INT);
MEM[X].HH.RH:=P;
MEM[P].HH.RH:=FRACTIONRULE(FONTINFO[8+PARAMBASE[EQTB[3938+CURSIZE].HH.RH
]].INT);Y:=VPACKAGE(X,0,1,1073741823);
DELTA:=MEM[Y+3].INT+MEM[Y+2].INT+FONTINFO[8+PARAMBASE[EQTB[3938+CURSIZE]
.HH.RH]].INT;MEM[Y+3].INT:=MEM[X+3].INT;
MEM[Y+2].INT:=DELTA-MEM[Y+3].INT;MEM[Q+1].HH.LH:=Y;MEM[Q+1].HH.RH:=2;
END;{:735}{736:}PROCEDURE MAKEVCENTER(Q:HALFWORD);VAR V:HALFWORD;
DELTA:SCALED;BEGIN V:=MEM[Q+1].HH.LH;
IF MEM[V].HH.B0<>1 THEN CONFUSION(539);DELTA:=MEM[V+3].INT+MEM[V+2].INT;
MEM[V+3].INT:=FONTINFO[22+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].INT+HALF(
DELTA);MEM[V+2].INT:=DELTA-MEM[V+3].INT;END;
{:736}{737:}PROCEDURE MAKERADICAL(Q:HALFWORD);VAR X,Y:HALFWORD;
DELTA,CLR:SCALED;BEGIN X:=CLEANBOX(Q+1,2*(CURSTYLE DIV 2)+1);
IF CURSTYLE<2 THEN CLR:=FONTINFO[8+PARAMBASE[EQTB[3938+CURSIZE].HH.RH]].
INT+(ABS(FONTINFO[5+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].INT)DIV 4)ELSE
BEGIN CLR:=FONTINFO[8+PARAMBASE[EQTB[3938+CURSIZE].HH.RH]].INT;
CLR:=CLR+(ABS(CLR)DIV 4);END;
Y:=VARDELIMITER(Q+4,CURSIZE,MEM[X+3].INT+MEM[X+2].INT+CLR+FONTINFO[8+
PARAMBASE[EQTB[3938+CURSIZE].HH.RH]].INT);
DELTA:=MEM[Y+2].INT-(MEM[X+3].INT+MEM[X+2].INT+CLR);
IF DELTA>0 THEN CLR:=CLR+HALF(DELTA);MEM[Y+4].INT:=-(MEM[X+3].INT+CLR);
MEM[Y].HH.RH:=OVERBAR(X,CLR,MEM[Y+3].INT);MEM[Q+1].HH.LH:=HPACK(Y,0,1);
MEM[Q+1].HH.RH:=2;END;{:737}{738:}PROCEDURE MAKEMATHACCE(Q:HALFWORD);
LABEL 30,31;VAR P,X,Y:HALFWORD;A:INTEGER;C:QUARTERWORD;F:INTERNALFONT;
I:FOURQUARTERS;S:SCALED;H:SCALED;DELTA:SCALED;W:SCALED;BEGIN FETCH(Q+4);
IF(CURI.B0>0)THEN BEGIN I:=CURI;C:=CURC;F:=CURF;{741:}S:=0;
IF MEM[Q+1].HH.RH=1 THEN BEGIN FETCH(Q+1);
IF((CURI.B2)MOD 4)=1 THEN BEGIN A:=LIGKERNBASE[CURF]+CURI.B3;
CURI:=FONTINFO[A].QQQQ;
IF CURI.B0>128 THEN BEGIN A:=LIGKERNBASE[CURF]+256*CURI.B2+CURI.B3
+32768-256*(128);CURI:=FONTINFO[A].QQQQ;END;
WHILE TRUE DO BEGIN IF CURI.B1=SKEWCHAR[CURF]THEN BEGIN IF CURI.B2>=128
THEN IF CURI.B0<=128 THEN S:=FONTINFO[KERNBASE[CURF]+256*CURI.B2+CURI.B3
].INT;GOTO 31;END;IF CURI.B0>=128 THEN GOTO 31;A:=A+CURI.B0+1;
CURI:=FONTINFO[A].QQQQ;END;END;END;31:{:741};
X:=CLEANBOX(Q+1,2*(CURSTYLE DIV 2)+1);W:=MEM[X+1].INT;H:=MEM[X+3].INT;
{740:}WHILE TRUE DO BEGIN IF((I.B2)MOD 4)<>2 THEN GOTO 30;Y:=I.B3;
I:=FONTINFO[CHARBASE[F]+Y].QQQQ;IF NOT(I.B0>0)THEN GOTO 30;
IF FONTINFO[WIDTHBASE[F]+I.B0].INT>W THEN GOTO 30;C:=Y;END;30:{:740};
IF H<FONTINFO[5+PARAMBASE[F]].INT THEN DELTA:=H ELSE DELTA:=FONTINFO[5+
PARAMBASE[F]].INT;
IF(MEM[Q+2].HH.RH<>0)OR(MEM[Q+3].HH.RH<>0)THEN IF MEM[Q+1].HH.RH=1 THEN
{742:}BEGIN FLUSHNODELIS(X);X:=NEWNOAD;MEM[X+1]:=MEM[Q+1];
MEM[X+2]:=MEM[Q+2];MEM[X+3]:=MEM[Q+3];MEM[Q+2].HH:=EMPTYFIELD;
MEM[Q+3].HH:=EMPTYFIELD;MEM[Q+1].HH.RH:=3;MEM[Q+1].HH.LH:=X;
X:=CLEANBOX(Q+1,CURSTYLE);DELTA:=DELTA+MEM[X+3].INT-H;H:=MEM[X+3].INT;
END{:742};Y:=CHARBOX(F,C);MEM[Y+4].INT:=S+HALF(W-MEM[Y+1].INT);
MEM[Y+1].INT:=0;P:=NEWKERN(-DELTA);MEM[P].HH.RH:=X;MEM[Y].HH.RH:=P;
Y:=VPACKAGE(Y,0,1,1073741823);MEM[Y+1].INT:=MEM[X+1].INT;
IF MEM[Y+3].INT<H THEN{739:}BEGIN P:=NEWKERN(H-MEM[Y+3].INT);
MEM[P].HH.RH:=MEM[Y+5].HH.RH;MEM[Y+5].HH.RH:=P;MEM[Y+3].INT:=H;
END{:739};MEM[Q+1].HH.LH:=Y;MEM[Q+1].HH.RH:=2;END;END;
{:738}{743:}PROCEDURE MAKEFRACTION(Q:HALFWORD);VAR P,V,X,Y,Z:HALFWORD;
DELTA,DELTA1,DELTA2,SHIFTUP,SHIFTDOWN,CLR:SCALED;
BEGIN IF MEM[Q+1].INT=1073741824 THEN MEM[Q+1].INT:=FONTINFO[8+PARAMBASE
[EQTB[3938+CURSIZE].HH.RH]].INT;
{744:}X:=CLEANBOX(Q+2,CURSTYLE+2-2*(CURSTYLE DIV 6));
Z:=CLEANBOX(Q+3,2*(CURSTYLE DIV 2)+3-2*(CURSTYLE DIV 6));
IF MEM[X+1].INT<MEM[Z+1].INT THEN X:=REBOX(X,MEM[Z+1].INT)ELSE Z:=REBOX(
Z,MEM[X+1].INT);
IF CURSTYLE<2 THEN BEGIN SHIFTUP:=FONTINFO[8+PARAMBASE[EQTB[3937+CURSIZE
].HH.RH]].INT;
SHIFTDOWN:=FONTINFO[11+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].INT;
END ELSE BEGIN SHIFTDOWN:=FONTINFO[12+PARAMBASE[EQTB[3937+CURSIZE].HH.RH
]].INT;
IF MEM[Q+1].INT<>0 THEN SHIFTUP:=FONTINFO[9+PARAMBASE[EQTB[3937+CURSIZE]
.HH.RH]].INT ELSE SHIFTUP:=FONTINFO[10+PARAMBASE[EQTB[3937+CURSIZE].HH.
RH]].INT;END{:744};
IF MEM[Q+1].INT=0 THEN{745:}BEGIN IF CURSTYLE<2 THEN CLR:=7*FONTINFO[8+
PARAMBASE[EQTB[3938+CURSIZE].HH.RH]].INT ELSE CLR:=3*FONTINFO[8+
PARAMBASE[EQTB[3938+CURSIZE].HH.RH]].INT;
DELTA:=HALF(CLR-((SHIFTUP-MEM[X+2].INT)-(MEM[Z+3].INT-SHIFTDOWN)));
IF DELTA>0 THEN BEGIN SHIFTUP:=SHIFTUP+DELTA;SHIFTDOWN:=SHIFTDOWN+DELTA;
END;
END{:745}ELSE{746:}BEGIN IF CURSTYLE<2 THEN CLR:=3*MEM[Q+1].INT ELSE CLR
:=MEM[Q+1].INT;DELTA:=HALF(MEM[Q+1].INT);
DELTA1:=CLR-((SHIFTUP-MEM[X+2].INT)-(FONTINFO[22+PARAMBASE[EQTB[3937+
CURSIZE].HH.RH]].INT+DELTA));
DELTA2:=CLR-((FONTINFO[22+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].INT-DELTA
)-(MEM[Z+3].INT-SHIFTDOWN));IF DELTA1>0 THEN SHIFTUP:=SHIFTUP+DELTA1;
IF DELTA2>0 THEN SHIFTDOWN:=SHIFTDOWN+DELTA2;END{:746};
{747:}V:=NEWNULLBOX;MEM[V].HH.B0:=1;MEM[V+3].INT:=SHIFTUP+MEM[X+3].INT;
MEM[V+2].INT:=MEM[Z+2].INT+SHIFTDOWN;MEM[V+1].INT:=MEM[X+1].INT;
IF MEM[Q+1].INT=0 THEN BEGIN P:=NEWKERN((SHIFTUP-MEM[X+2].INT)-(MEM[Z+3]
.INT-SHIFTDOWN));MEM[P].HH.RH:=Z;
END ELSE BEGIN Y:=FRACTIONRULE(MEM[Q+1].INT);
P:=NEWKERN((FONTINFO[22+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].INT-DELTA)-
(MEM[Z+3].INT-SHIFTDOWN));MEM[Y].HH.RH:=P;MEM[P].HH.RH:=Z;
P:=NEWKERN((SHIFTUP-MEM[X+2].INT)-(FONTINFO[22+PARAMBASE[EQTB[3937+
CURSIZE].HH.RH]].INT+DELTA));MEM[P].HH.RH:=Y;END;MEM[X].HH.RH:=P;
MEM[V+5].HH.RH:=X{:747};
{748:}IF CURSTYLE<2 THEN DELTA:=FONTINFO[20+PARAMBASE[EQTB[3937+CURSIZE]
.HH.RH]].INT ELSE DELTA:=FONTINFO[21+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]
].INT;X:=VARDELIMITER(Q+4,CURSIZE,DELTA);MEM[X].HH.RH:=V;
Z:=VARDELIMITER(Q+5,CURSIZE,DELTA);MEM[V].HH.RH:=Z;
MEM[Q+1].INT:=HPACK(X,0,1){:748};END;
{:743}{749:}FUNCTION MAKEOP(Q:HALFWORD):SCALED;VAR DELTA:SCALED;
P,V,X,Y,Z:HALFWORD;C:QUARTERWORD;I:FOURQUARTERS;
SHIFTUP,SHIFTDOWN:SCALED;
BEGIN IF(MEM[Q].HH.B1=0)AND(CURSTYLE<2)THEN MEM[Q].HH.B1:=1;
IF MEM[Q+1].HH.RH=1 THEN BEGIN FETCH(Q+1);
IF(CURSTYLE<2)AND(((CURI.B2)MOD 4)=2)THEN BEGIN C:=CURI.B3;
I:=FONTINFO[CHARBASE[CURF]+C].QQQQ;IF(I.B0>0)THEN BEGIN CURC:=C;CURI:=I;
MEM[Q+1].HH.B1:=C;END;END;
DELTA:=FONTINFO[ITALICBASE[CURF]+(CURI.B2)DIV 4].INT;
X:=CLEANBOX(Q+1,CURSTYLE);
IF(MEM[Q+3].HH.RH<>0)AND(MEM[Q].HH.B1<>1)THEN MEM[X+1].INT:=MEM[X+1].INT
-DELTA;
MEM[X+4].INT:=HALF(MEM[X+3].INT-MEM[X+2].INT)-FONTINFO[22+PARAMBASE[EQTB
[3937+CURSIZE].HH.RH]].INT;MEM[Q+1].HH.RH:=2;MEM[Q+1].HH.LH:=X;
END ELSE DELTA:=0;
IF MEM[Q].HH.B1=1 THEN{750:}BEGIN X:=CLEANBOX(Q+2,2*(CURSTYLE DIV 4)+4+(
CURSTYLE MOD 2));Y:=CLEANBOX(Q+1,CURSTYLE);
Z:=CLEANBOX(Q+3,2*(CURSTYLE DIV 4)+5);V:=NEWNULLBOX;MEM[V].HH.B0:=1;
MEM[V+1].INT:=MEM[Y+1].INT;
IF MEM[X+1].INT>MEM[V+1].INT THEN MEM[V+1].INT:=MEM[X+1].INT;
IF MEM[Z+1].INT>MEM[V+1].INT THEN MEM[V+1].INT:=MEM[Z+1].INT;
X:=REBOX(X,MEM[V+1].INT);Y:=REBOX(Y,MEM[V+1].INT);
Z:=REBOX(Z,MEM[V+1].INT);MEM[X+4].INT:=HALF(DELTA);
MEM[Z+4].INT:=-MEM[X+4].INT;MEM[V+3].INT:=MEM[Y+3].INT;
MEM[V+2].INT:=MEM[Y+2].INT;
{751:}IF MEM[Q+2].HH.RH=0 THEN BEGIN FREENODE(X,7);MEM[V+5].HH.RH:=Y;
END ELSE BEGIN SHIFTUP:=FONTINFO[11+PARAMBASE[EQTB[3938+CURSIZE].HH.RH]]
.INT-MEM[X+2].INT;
IF SHIFTUP<FONTINFO[9+PARAMBASE[EQTB[3938+CURSIZE].HH.RH]].INT THEN
SHIFTUP:=FONTINFO[9+PARAMBASE[EQTB[3938+CURSIZE].HH.RH]].INT;
P:=NEWKERN(SHIFTUP);MEM[P].HH.RH:=Y;MEM[X].HH.RH:=P;
P:=NEWKERN(FONTINFO[13+PARAMBASE[EQTB[3938+CURSIZE].HH.RH]].INT);
MEM[P].HH.RH:=X;MEM[V+5].HH.RH:=P;
MEM[V+3].INT:=MEM[V+3].INT+FONTINFO[13+PARAMBASE[EQTB[3938+CURSIZE].HH.
RH]].INT+MEM[X+3].INT+MEM[X+2].INT+SHIFTUP;END;
IF MEM[Q+3].HH.RH=0 THEN FREENODE(Z,7)ELSE BEGIN SHIFTDOWN:=FONTINFO[12+
PARAMBASE[EQTB[3938+CURSIZE].HH.RH]].INT-MEM[Z+3].INT;
IF SHIFTDOWN<FONTINFO[10+PARAMBASE[EQTB[3938+CURSIZE].HH.RH]].INT THEN
SHIFTDOWN:=FONTINFO[10+PARAMBASE[EQTB[3938+CURSIZE].HH.RH]].INT;
P:=NEWKERN(SHIFTDOWN);MEM[Y].HH.RH:=P;MEM[P].HH.RH:=Z;
P:=NEWKERN(FONTINFO[13+PARAMBASE[EQTB[3938+CURSIZE].HH.RH]].INT);
MEM[Z].HH.RH:=P;
MEM[V+2].INT:=MEM[V+2].INT+FONTINFO[13+PARAMBASE[EQTB[3938+CURSIZE].HH.
RH]].INT+MEM[Z+3].INT+MEM[Z+2].INT+SHIFTDOWN;END{:751};MEM[Q+1].INT:=V;
END{:750};MAKEOP:=DELTA;END;{:749}{752:}PROCEDURE MAKEORD(Q:HALFWORD);
LABEL 20,10;VAR A:INTEGER;P,R:HALFWORD;
BEGIN 20:IF MEM[Q+3].HH.RH=0 THEN IF MEM[Q+2].HH.RH=0 THEN IF MEM[Q+1].
HH.RH=1 THEN BEGIN P:=MEM[Q].HH.RH;
IF P<>0 THEN IF(MEM[P].HH.B0>=16)AND(MEM[P].HH.B0<=22)THEN IF MEM[P+1].
HH.RH=1 THEN IF MEM[P+1].HH.B0=MEM[Q+1].HH.B0 THEN BEGIN MEM[Q+1].HH.RH
:=4;FETCH(Q+1);
IF((CURI.B2)MOD 4)=1 THEN BEGIN A:=LIGKERNBASE[CURF]+CURI.B3;
CURC:=MEM[P+1].HH.B1;CURI:=FONTINFO[A].QQQQ;
IF CURI.B0>128 THEN BEGIN A:=LIGKERNBASE[CURF]+256*CURI.B2+CURI.B3
+32768-256*(128);CURI:=FONTINFO[A].QQQQ;END;
WHILE TRUE DO BEGIN{753:}IF CURI.B1=CURC THEN IF CURI.B0<=128 THEN IF
CURI.B2>=128 THEN BEGIN P:=NEWKERN(FONTINFO[KERNBASE[CURF]+256*CURI.B2+
CURI.B3].INT);MEM[P].HH.RH:=MEM[Q].HH.RH;MEM[Q].HH.RH:=P;GOTO 10;
END ELSE BEGIN BEGIN IF INTERRUPT<>0 THEN PAUSEFORINST;END;
CASE CURI.B2 OF 1,5:MEM[Q+1].HH.B1:=CURI.B3;2,6:MEM[P+1].HH.B1:=CURI.B3;
3,7,11:BEGIN R:=NEWNOAD;MEM[R+1].HH.B1:=CURI.B3;
MEM[R+1].HH.B0:=MEM[Q+1].HH.B0;MEM[Q].HH.RH:=R;MEM[R].HH.RH:=P;
IF CURI.B2<11 THEN MEM[R+1].HH.RH:=1 ELSE MEM[R+1].HH.RH:=4;END;
ELSE BEGIN MEM[Q].HH.RH:=MEM[P].HH.RH;MEM[Q+1].HH.B1:=CURI.B3;
MEM[Q+3]:=MEM[P+3];MEM[Q+2]:=MEM[P+2];FREENODE(P,4);END END;
IF CURI.B2>3 THEN GOTO 10;MEM[Q+1].HH.RH:=1;GOTO 20;END{:753};
IF CURI.B0>=128 THEN GOTO 10;A:=A+CURI.B0+1;CURI:=FONTINFO[A].QQQQ;END;
END;END;END;10:END;{:752}{756:}PROCEDURE MAKESCRIPTS(Q:HALFWORD;
DELTA:SCALED);VAR P,X,Y,Z:HALFWORD;SHIFTUP,SHIFTDOWN,CLR:SCALED;
T:SMALLNUMBER;BEGIN P:=MEM[Q+1].INT;
IF(P>=HIMEMMIN)THEN BEGIN SHIFTUP:=0;SHIFTDOWN:=0;
END ELSE BEGIN Z:=HPACK(P,0,1);IF CURSTYLE<4 THEN T:=16 ELSE T:=32;
SHIFTUP:=MEM[Z+3].INT-FONTINFO[18+PARAMBASE[EQTB[3937+T].HH.RH]].INT;
SHIFTDOWN:=MEM[Z+2].INT+FONTINFO[19+PARAMBASE[EQTB[3937+T].HH.RH]].INT;
FREENODE(Z,7);END;
IF MEM[Q+2].HH.RH=0 THEN{757:}BEGIN X:=CLEANBOX(Q+3,2*(CURSTYLE DIV 4)+5
);MEM[X+1].INT:=MEM[X+1].INT+EQTB[5842].INT;
IF SHIFTDOWN<FONTINFO[16+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].INT THEN
SHIFTDOWN:=FONTINFO[16+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].INT;
CLR:=MEM[X+3].INT-(ABS(FONTINFO[5+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].
INT*4)DIV 5);IF SHIFTDOWN<CLR THEN SHIFTDOWN:=CLR;
MEM[X+4].INT:=SHIFTDOWN;
END{:757}ELSE BEGIN{758:}BEGIN X:=CLEANBOX(Q+2,2*(CURSTYLE DIV 4)+4+(
CURSTYLE MOD 2));MEM[X+1].INT:=MEM[X+1].INT+EQTB[5842].INT;
IF ODD(CURSTYLE)THEN CLR:=FONTINFO[15+PARAMBASE[EQTB[3937+CURSIZE].HH.RH
]].INT ELSE IF CURSTYLE<2 THEN CLR:=FONTINFO[13+PARAMBASE[EQTB[3937+
CURSIZE].HH.RH]].INT ELSE CLR:=FONTINFO[14+PARAMBASE[EQTB[3937+CURSIZE].
HH.RH]].INT;IF SHIFTUP<CLR THEN SHIFTUP:=CLR;
CLR:=MEM[X+2].INT+(ABS(FONTINFO[5+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].
INT)DIV 4);IF SHIFTUP<CLR THEN SHIFTUP:=CLR;END{:758};
IF MEM[Q+3].HH.RH=0 THEN MEM[X+4].INT:=-SHIFTUP ELSE{759:}BEGIN Y:=
CLEANBOX(Q+3,2*(CURSTYLE DIV 4)+5);
MEM[Y+1].INT:=MEM[Y+1].INT+EQTB[5842].INT;
IF SHIFTDOWN<FONTINFO[17+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].INT THEN
SHIFTDOWN:=FONTINFO[17+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].INT;
CLR:=4*FONTINFO[8+PARAMBASE[EQTB[3938+CURSIZE].HH.RH]].INT-((SHIFTUP-MEM
[X+2].INT)-(MEM[Y+3].INT-SHIFTDOWN));
IF CLR>0 THEN BEGIN SHIFTDOWN:=SHIFTDOWN+CLR;
CLR:=(ABS(FONTINFO[5+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].INT*4)DIV 5)-(
SHIFTUP-MEM[X+2].INT);IF CLR>0 THEN BEGIN SHIFTUP:=SHIFTUP+CLR;
SHIFTDOWN:=SHIFTDOWN-CLR;END;END;MEM[X+4].INT:=DELTA;
P:=NEWKERN((SHIFTUP-MEM[X+2].INT)-(MEM[Y+3].INT-SHIFTDOWN));
MEM[X].HH.RH:=P;MEM[P].HH.RH:=Y;X:=VPACKAGE(X,0,1,1073741823);
MEM[X+4].INT:=SHIFTDOWN;END{:759};END;
IF MEM[Q+1].INT=0 THEN MEM[Q+1].INT:=X ELSE BEGIN P:=MEM[Q+1].INT;
WHILE MEM[P].HH.RH<>0 DO P:=MEM[P].HH.RH;MEM[P].HH.RH:=X;END;END;
{:756}{762:}FUNCTION MAKELEFTRIGH(Q:HALFWORD;STYLE:SMALLNUMBER;
MAXD,MAXH:SCALED):SMALLNUMBER;VAR DELTA,DELTA1,DELTA2:SCALED;
BEGIN IF STYLE<4 THEN CURSIZE:=0 ELSE CURSIZE:=16*((STYLE-2)DIV 2);
DELTA2:=MAXD+FONTINFO[22+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].INT;
DELTA1:=MAXH+MAXD-DELTA2;IF DELTA2>DELTA1 THEN DELTA1:=DELTA2;
DELTA:=(DELTA1 DIV 500)*EQTB[5281].INT;
DELTA2:=DELTA1+DELTA1-EQTB[5840].INT;IF DELTA<DELTA2 THEN DELTA:=DELTA2;
MEM[Q+1].INT:=VARDELIMITER(Q+1,CURSIZE,DELTA);
MAKELEFTRIGH:=MEM[Q].HH.B0-(10);END;{:762}PROCEDURE MLISTTOHLIST;
LABEL 21,82,80,81,83,30;VAR MLIST:HALFWORD;PENALTIES:BOOLEAN;
STYLE:SMALLNUMBER;SAVESTYLE:SMALLNUMBER;Q:HALFWORD;R:HALFWORD;
RTYPE:SMALLNUMBER;T:SMALLNUMBER;P,X,Y,Z:HALFWORD;PEN:INTEGER;
S:SMALLNUMBER;MAXH,MAXD:SCALED;DELTA:SCALED;BEGIN MLIST:=CURMLIST;
PENALTIES:=MLISTPENALTI;STYLE:=CURSTYLE;Q:=MLIST;R:=0;RTYPE:=17;MAXH:=0;
MAXD:=0;
{703:}BEGIN IF CURSTYLE<4 THEN CURSIZE:=0 ELSE CURSIZE:=16*((CURSTYLE-2)
DIV 2);
CURMU:=XOVERN(FONTINFO[6+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].INT,18);
END{:703};WHILE Q<>0 DO{727:}BEGIN{728:}21:DELTA:=0;
CASE MEM[Q].HH.B0 OF 18:CASE RTYPE OF 18,17,19,20,22,30:BEGIN MEM[Q].HH.
B0:=16;GOTO 21;END;ELSE END;
19,21,22,31:BEGIN{729:}IF RTYPE=18 THEN MEM[R].HH.B0:=16{:729};
IF MEM[Q].HH.B0=31 THEN GOTO 80;END;{733:}30:GOTO 80;
25:BEGIN MAKEFRACTION(Q);GOTO 82;END;17:BEGIN DELTA:=MAKEOP(Q);
IF MEM[Q].HH.B1=1 THEN GOTO 82;END;16:MAKEORD(Q);20,23:;
24:MAKERADICAL(Q);27:MAKEOVER(Q);26:MAKEUNDER(Q);28:MAKEMATHACCE(Q);
29:MAKEVCENTER(Q);{:733}{730:}14:BEGIN CURSTYLE:=MEM[Q].HH.B1;
{703:}BEGIN IF CURSTYLE<4 THEN CURSIZE:=0 ELSE CURSIZE:=16*((CURSTYLE-2)
DIV 2);
CURMU:=XOVERN(FONTINFO[6+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].INT,18);
END{:703};GOTO 81;END;
15:{731:}BEGIN CASE CURSTYLE DIV 2 OF 0:BEGIN P:=MEM[Q+1].HH.LH;
MEM[Q+1].HH.LH:=0;END;1:BEGIN P:=MEM[Q+1].HH.RH;MEM[Q+1].HH.RH:=0;END;
2:BEGIN P:=MEM[Q+2].HH.LH;MEM[Q+2].HH.LH:=0;END;
3:BEGIN P:=MEM[Q+2].HH.RH;MEM[Q+2].HH.RH:=0;END;END;
FLUSHNODELIS(MEM[Q+1].HH.LH);FLUSHNODELIS(MEM[Q+1].HH.RH);
FLUSHNODELIS(MEM[Q+2].HH.LH);FLUSHNODELIS(MEM[Q+2].HH.RH);
MEM[Q].HH.B0:=14;MEM[Q].HH.B1:=CURSTYLE;MEM[Q+1].INT:=0;MEM[Q+2].INT:=0;
IF P<>0 THEN BEGIN Z:=MEM[Q].HH.RH;MEM[Q].HH.RH:=P;
WHILE MEM[P].HH.RH<>0 DO P:=MEM[P].HH.RH;MEM[P].HH.RH:=Z;END;GOTO 81;
END{:731};3,4,5,8,12,7:GOTO 81;
2:BEGIN IF MEM[Q+3].INT>MAXH THEN MAXH:=MEM[Q+3].INT;
IF MEM[Q+2].INT>MAXD THEN MAXD:=MEM[Q+2].INT;GOTO 81;END;
10:BEGIN{732:}IF MEM[Q].HH.B1=99 THEN BEGIN X:=MEM[Q+1].HH.LH;
Y:=MATHGLUE(X,CURMU);DELETEGLUERE(X);MEM[Q+1].HH.LH:=Y;MEM[Q].HH.B1:=0;
END ELSE IF(CURSIZE<>0)AND(MEM[Q].HH.B1=98)THEN BEGIN P:=MEM[Q].HH.RH;
IF P<>0 THEN IF(MEM[P].HH.B0=10)OR(MEM[P].HH.B0=11)THEN BEGIN MEM[Q].HH.
RH:=MEM[P].HH.RH;MEM[P].HH.RH:=0;FLUSHNODELIS(P);END;END{:732};GOTO 81;
END;11:BEGIN MATHKERN(Q,CURMU);GOTO 81;END;{:730}ELSE CONFUSION(890)END;
{754:}CASE MEM[Q+1].HH.RH OF 1,4:{755:}BEGIN FETCH(Q+1);
IF(CURI.B0>0)THEN BEGIN DELTA:=FONTINFO[ITALICBASE[CURF]+(CURI.B2)DIV 4]
.INT;P:=NEWCHARACTER(CURF,CURC);
IF(MEM[Q+1].HH.RH=4)AND(FONTINFO[2+PARAMBASE[CURF]].INT<>0)THEN DELTA:=0
;
IF(MEM[Q+3].HH.RH=0)AND(DELTA<>0)THEN BEGIN MEM[P].HH.RH:=NEWKERN(DELTA)
;DELTA:=0;END;END ELSE P:=0;END{:755};0:P:=0;2:P:=MEM[Q+1].HH.LH;
3:BEGIN CURMLIST:=MEM[Q+1].HH.LH;SAVESTYLE:=CURSTYLE;
MLISTPENALTI:=FALSE;MLISTTOHLIST;CURSTYLE:=SAVESTYLE;
{703:}BEGIN IF CURSTYLE<4 THEN CURSIZE:=0 ELSE CURSIZE:=16*((CURSTYLE-2)
DIV 2);
CURMU:=XOVERN(FONTINFO[6+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].INT,18);
END{:703};P:=HPACK(MEM[29997].HH.RH,0,1);END;ELSE CONFUSION(891)END;
MEM[Q+1].INT:=P;IF(MEM[Q+3].HH.RH=0)AND(MEM[Q+2].HH.RH=0)THEN GOTO 82;
MAKESCRIPTS(Q,DELTA){:754}{:728};82:Z:=HPACK(MEM[Q+1].INT,0,1);
IF MEM[Z+3].INT>MAXH THEN MAXH:=MEM[Z+3].INT;
IF MEM[Z+2].INT>MAXD THEN MAXD:=MEM[Z+2].INT;FREENODE(Z,7);80:R:=Q;
RTYPE:=MEM[R].HH.B0;81:Q:=MEM[Q].HH.RH;END{:727};
{729:}IF RTYPE=18 THEN MEM[R].HH.B0:=16{:729};{760:}P:=29997;
MEM[P].HH.RH:=0;Q:=MLIST;RTYPE:=0;CURSTYLE:=STYLE;
{703:}BEGIN IF CURSTYLE<4 THEN CURSIZE:=0 ELSE CURSIZE:=16*((CURSTYLE-2)
DIV 2);
CURMU:=XOVERN(FONTINFO[6+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].INT,18);
END{:703};WHILE Q<>0 DO BEGIN{761:}T:=16;S:=4;PEN:=10000;
CASE MEM[Q].HH.B0 OF 17,20,21,22,23:T:=MEM[Q].HH.B0;18:BEGIN T:=18;
PEN:=EQTB[5272].INT;END;19:BEGIN T:=19;PEN:=EQTB[5273].INT;END;
16,29,27,26:;24:S:=5;28:S:=5;25:S:=6;
30,31:T:=MAKELEFTRIGH(Q,STYLE,MAXD,MAXH);
14:{763:}BEGIN CURSTYLE:=MEM[Q].HH.B1;S:=3;
{703:}BEGIN IF CURSTYLE<4 THEN CURSIZE:=0 ELSE CURSIZE:=16*((CURSTYLE-2)
DIV 2);
CURMU:=XOVERN(FONTINFO[6+PARAMBASE[EQTB[3937+CURSIZE].HH.RH]].INT,18);
END{:703};GOTO 83;END{:763};8,12,2,7,5,3,4,10,11:BEGIN MEM[P].HH.RH:=Q;
P:=Q;Q:=MEM[Q].HH.RH;MEM[P].HH.RH:=0;GOTO 30;END;
ELSE CONFUSION(892)END{:761};
{766:}IF RTYPE>0 THEN BEGIN CASE STRPOOL[RTYPE*8+T+MAGICOFFSET]OF 48:X:=
0;49:IF CURSTYLE<4 THEN X:=15 ELSE X:=0;50:X:=15;
51:IF CURSTYLE<4 THEN X:=16 ELSE X:=0;
52:IF CURSTYLE<4 THEN X:=17 ELSE X:=0;ELSE CONFUSION(894)END;
IF X<>0 THEN BEGIN Y:=MATHGLUE(EQTB[2882+X].HH.RH,CURMU);Z:=NEWGLUE(Y);
MEM[Y].HH.RH:=0;MEM[P].HH.RH:=Z;P:=Z;MEM[Z].HH.B1:=X+1;END;END{:766};
{767:}IF MEM[Q+1].INT<>0 THEN BEGIN MEM[P].HH.RH:=MEM[Q+1].INT;
REPEAT P:=MEM[P].HH.RH;UNTIL MEM[P].HH.RH=0;END;
IF PENALTIES THEN IF MEM[Q].HH.RH<>0 THEN IF PEN<10000 THEN BEGIN RTYPE
:=MEM[MEM[Q].HH.RH].HH.B0;
IF RTYPE<>12 THEN IF RTYPE<>19 THEN BEGIN Z:=NEWPENALTY(PEN);
MEM[P].HH.RH:=Z;P:=Z;END;END{:767};RTYPE:=T;83:R:=Q;Q:=MEM[Q].HH.RH;
FREENODE(R,S);30:END{:760};END;{:726}{772:}PROCEDURE PUSHALIGNMEN;
VAR P:HALFWORD;BEGIN P:=GETNODE(5);MEM[P].HH.RH:=ALIGNPTR;
MEM[P].HH.LH:=CURALIGN;MEM[P+1].HH.LH:=MEM[29992].HH.RH;
MEM[P+1].HH.RH:=CURSPAN;MEM[P+2].INT:=CURLOOP;MEM[P+3].INT:=ALIGNSTATE;
MEM[P+4].HH.LH:=CURHEAD;MEM[P+4].HH.RH:=CURTAIL;ALIGNPTR:=P;
CURHEAD:=GETAVAIL;END;PROCEDURE POPALIGNMENT;VAR P:HALFWORD;
BEGIN BEGIN MEM[CURHEAD].HH.RH:=AVAIL;AVAIL:=CURHEAD;DYNUSED:=DYNUSED-1;
END;P:=ALIGNPTR;CURTAIL:=MEM[P+4].HH.RH;CURHEAD:=MEM[P+4].HH.LH;
ALIGNSTATE:=MEM[P+3].INT;CURLOOP:=MEM[P+2].INT;CURSPAN:=MEM[P+1].HH.RH;
MEM[29992].HH.RH:=MEM[P+1].HH.LH;CURALIGN:=MEM[P].HH.LH;
ALIGNPTR:=MEM[P].HH.RH;FREENODE(P,5);END;
{:772}{774:}{782:}PROCEDURE GETPREAMBLET;LABEL 20;BEGIN 20:GETTOKEN;
WHILE(CURCHR=256)AND(CURCMD=4)DO BEGIN GETTOKEN;
IF CURCMD>100 THEN BEGIN EXPAND;GETTOKEN;END;END;
IF CURCMD=9 THEN FATALERROR(595);
IF(CURCMD=75)AND(CURCHR=2893)THEN BEGIN SCANOPTIONAL;SCANGLUE(2);
IF EQTB[5306].INT>0 THEN GEQDEFINE(2893,117,CURVAL)ELSE EQDEFINE(2893,
117,CURVAL);GOTO 20;END;END;{:782}PROCEDURE ALIGNPEEK;FORWARD;
PROCEDURE NORMALPARAGR;FORWARD;PROCEDURE INITALIGN;LABEL 30,31,32,22;
VAR SAVECSPTR:HALFWORD;P:HALFWORD;BEGIN SAVECSPTR:=CURCS;PUSHALIGNMEN;
ALIGNSTATE:=-1000000;
{776:}IF(CURLIST.MODEFIELD=203)AND((CURLIST.TAILFIELD<>CURLIST.HEADFIELD
)OR(CURLIST.AUXFIELD.INT<>0))THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(680);END;PRINTESC(520);PRINT(895);BEGIN HELPPTR:=3;
HELPLINE[2]:=896;HELPLINE[1]:=897;HELPLINE[0]:=898;END;ERROR;FLUSHMATH;
END{:776};PUSHNEST;
{775:}IF CURLIST.MODEFIELD=203 THEN BEGIN CURLIST.MODEFIELD:=-1;
CURLIST.AUXFIELD.INT:=NEST[NESTPTR-2].AUXFIELD.INT;
END ELSE IF CURLIST.MODEFIELD>0 THEN CURLIST.MODEFIELD:=-CURLIST.
MODEFIELD{:775};SCANSPEC(6,FALSE);{777:}MEM[29992].HH.RH:=0;
CURALIGN:=29992;CURLOOP:=0;SCANNERSTATU:=4;WARNINGINDEX:=SAVECSPTR;
ALIGNSTATE:=-1000000;
WHILE TRUE DO BEGIN{778:}MEM[CURALIGN].HH.RH:=NEWPARAMGLUE(11);
CURALIGN:=MEM[CURALIGN].HH.RH{:778};IF CURCMD=5 THEN GOTO 30;
{779:}{783:}P:=29996;MEM[P].HH.RH:=0;WHILE TRUE DO BEGIN GETPREAMBLET;
IF CURCMD=6 THEN GOTO 31;
IF(CURCMD<=5)AND(CURCMD>=4)AND(ALIGNSTATE=-1000000)THEN IF(P=29996)AND(
CURLOOP=0)AND(CURCMD=4)THEN CURLOOP:=CURALIGN ELSE BEGIN BEGIN IF
INTERACTION=3 THEN;PRINTNL(262);PRINT(904);END;BEGIN HELPPTR:=3;
HELPLINE[2]:=905;HELPLINE[1]:=906;HELPLINE[0]:=907;END;BACKERROR;
GOTO 31;
END ELSE IF(CURCMD<>10)OR(P<>29996)THEN BEGIN MEM[P].HH.RH:=GETAVAIL;
P:=MEM[P].HH.RH;MEM[P].HH.LH:=CURTOK;END;END;31:{:783};
MEM[CURALIGN].HH.RH:=NEWNULLBOX;CURALIGN:=MEM[CURALIGN].HH.RH;
MEM[CURALIGN].HH.LH:=29991;MEM[CURALIGN+1].INT:=-1073741824;
MEM[CURALIGN+3].INT:=MEM[29996].HH.RH;{784:}P:=29996;MEM[P].HH.RH:=0;
WHILE TRUE DO BEGIN 22:GETPREAMBLET;
IF(CURCMD<=5)AND(CURCMD>=4)AND(ALIGNSTATE=-1000000)THEN GOTO 32;
IF CURCMD=6 THEN BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(908);END;BEGIN HELPPTR:=3;HELPLINE[2]:=905;HELPLINE[1]:=906;
HELPLINE[0]:=909;END;ERROR;GOTO 22;END;MEM[P].HH.RH:=GETAVAIL;
P:=MEM[P].HH.RH;MEM[P].HH.LH:=CURTOK;END;32:MEM[P].HH.RH:=GETAVAIL;
P:=MEM[P].HH.RH;MEM[P].HH.LH:=6714{:784};
MEM[CURALIGN+2].INT:=MEM[29996].HH.RH{:779};END;
30:SCANNERSTATU:=0{:777};NEWSAVELEVEL(6);
IF EQTB[3420].HH.RH<>0 THEN BEGINTOKENLI(EQTB[3420].HH.RH,13);ALIGNPEEK;
END;{:774}{786:}{787:}PROCEDURE INITSPAN(P:HALFWORD);BEGIN PUSHNEST;
IF CURLIST.MODEFIELD=-102 THEN CURLIST.AUXFIELD.HH.LH:=1000 ELSE BEGIN
CURLIST.AUXFIELD.INT:=-65536000;NORMALPARAGR;END;CURSPAN:=P;END;
{:787}PROCEDURE INITROW;BEGIN PUSHNEST;
CURLIST.MODEFIELD:=(-103)-CURLIST.MODEFIELD;
IF CURLIST.MODEFIELD=-102 THEN CURLIST.AUXFIELD.HH.LH:=0 ELSE CURLIST.
AUXFIELD.INT:=0;
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWGLUE(MEM[MEM[29992].HH.RH+1].HH.
LH);CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
MEM[CURLIST.TAILFIELD].HH.B1:=12;CURALIGN:=MEM[MEM[29992].HH.RH].HH.RH;
CURTAIL:=CURHEAD;INITSPAN(CURALIGN);END;{:786}{788:}PROCEDURE INITCOL;
BEGIN MEM[CURALIGN+5].HH.LH:=CURCMD;
IF CURCMD=63 THEN ALIGNSTATE:=0 ELSE BEGIN BACKINPUT;
BEGINTOKENLI(MEM[CURALIGN+3].INT,1);END;END;
{:788}{791:}FUNCTION FINCOL:BOOLEAN;LABEL 10;VAR P:HALFWORD;
Q,R:HALFWORD;S:HALFWORD;U:HALFWORD;W:SCALED;O:GLUEORD;N:HALFWORD;
BEGIN IF CURALIGN=0 THEN CONFUSION(910);Q:=MEM[CURALIGN].HH.RH;
IF Q=0 THEN CONFUSION(910);IF ALIGNSTATE<500000 THEN FATALERROR(595);
P:=MEM[Q].HH.RH;
{792:}IF(P=0)AND(MEM[CURALIGN+5].HH.LH<257)THEN IF CURLOOP<>0 THEN{793:}
BEGIN MEM[Q].HH.RH:=NEWNULLBOX;P:=MEM[Q].HH.RH;MEM[P].HH.LH:=29991;
MEM[P+1].INT:=-1073741824;CURLOOP:=MEM[CURLOOP].HH.RH;{794:}Q:=29996;
R:=MEM[CURLOOP+3].INT;WHILE R<>0 DO BEGIN MEM[Q].HH.RH:=GETAVAIL;
Q:=MEM[Q].HH.RH;MEM[Q].HH.LH:=MEM[R].HH.LH;R:=MEM[R].HH.RH;END;
MEM[Q].HH.RH:=0;MEM[P+3].INT:=MEM[29996].HH.RH;Q:=29996;
R:=MEM[CURLOOP+2].INT;WHILE R<>0 DO BEGIN MEM[Q].HH.RH:=GETAVAIL;
Q:=MEM[Q].HH.RH;MEM[Q].HH.LH:=MEM[R].HH.LH;R:=MEM[R].HH.RH;END;
MEM[Q].HH.RH:=0;MEM[P+2].INT:=MEM[29996].HH.RH{:794};
CURLOOP:=MEM[CURLOOP].HH.RH;MEM[P].HH.RH:=NEWGLUE(MEM[CURLOOP+1].HH.LH);
MEM[MEM[P].HH.RH].HH.B1:=12;
END{:793}ELSE BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(911);
END;PRINTESC(900);BEGIN HELPPTR:=3;HELPLINE[2]:=912;HELPLINE[1]:=913;
HELPLINE[0]:=914;END;MEM[CURALIGN+5].HH.LH:=257;ERROR;END{:792};
IF MEM[CURALIGN+5].HH.LH<>256 THEN BEGIN UNSAVE;NEWSAVELEVEL(6);
{796:}BEGIN IF CURLIST.MODEFIELD=-102 THEN BEGIN ADJUSTTAIL:=CURTAIL;
U:=HPACK(MEM[CURLIST.HEADFIELD].HH.RH,0,1);W:=MEM[U+1].INT;
CURTAIL:=ADJUSTTAIL;ADJUSTTAIL:=0;
END ELSE BEGIN U:=VPACKAGE(MEM[CURLIST.HEADFIELD].HH.RH,0,1,0);
W:=MEM[U+3].INT;END;N:=0;
IF CURSPAN<>CURALIGN THEN{798:}BEGIN Q:=CURSPAN;REPEAT N:=N+1;
Q:=MEM[MEM[Q].HH.RH].HH.RH;UNTIL Q=CURALIGN;
IF N>255 THEN CONFUSION(915);Q:=CURSPAN;
WHILE MEM[MEM[Q].HH.LH].HH.RH<N DO Q:=MEM[Q].HH.LH;
IF MEM[MEM[Q].HH.LH].HH.RH>N THEN BEGIN S:=GETNODE(2);
MEM[S].HH.LH:=MEM[Q].HH.LH;MEM[S].HH.RH:=N;MEM[Q].HH.LH:=S;
MEM[S+1].INT:=W;
END ELSE IF MEM[MEM[Q].HH.LH+1].INT<W THEN MEM[MEM[Q].HH.LH+1].INT:=W;
END{:798}ELSE IF W>MEM[CURALIGN+1].INT THEN MEM[CURALIGN+1].INT:=W;
MEM[U].HH.B0:=13;MEM[U].HH.B1:=N;
{659:}IF TOTALSTRETCH[3]<>0 THEN O:=3 ELSE IF TOTALSTRETCH[2]<>0 THEN O
:=2 ELSE IF TOTALSTRETCH[1]<>0 THEN O:=1 ELSE O:=0{:659};
MEM[U+5].HH.B1:=O;MEM[U+6].INT:=TOTALSTRETCH[O];
{665:}IF TOTALSHRINK[3]<>0 THEN O:=3 ELSE IF TOTALSHRINK[2]<>0 THEN O:=2
ELSE IF TOTALSHRINK[1]<>0 THEN O:=1 ELSE O:=0{:665};MEM[U+5].HH.B0:=O;
MEM[U+4].INT:=TOTALSHRINK[O];POPNEST;MEM[CURLIST.TAILFIELD].HH.RH:=U;
CURLIST.TAILFIELD:=U;END{:796};
{795:}BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWGLUE(MEM[MEM[CURALIGN].HH.
RH+1].HH.LH);CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
MEM[CURLIST.TAILFIELD].HH.B1:=12{:795};
IF MEM[CURALIGN+5].HH.LH>=257 THEN BEGIN FINCOL:=TRUE;GOTO 10;END;
INITSPAN(P);END;ALIGNSTATE:=1000000;{406:}REPEAT GETXTOKEN;
UNTIL CURCMD<>10{:406};CURALIGN:=P;INITCOL;FINCOL:=FALSE;10:END;
{:791}{799:}PROCEDURE FINROW;VAR P:HALFWORD;
BEGIN IF CURLIST.MODEFIELD=-102 THEN BEGIN P:=HPACK(MEM[CURLIST.
HEADFIELD].HH.RH,0,1);POPNEST;APPENDTOVLIS(P);
IF CURHEAD<>CURTAIL THEN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=MEM[CURHEAD
].HH.RH;CURLIST.TAILFIELD:=CURTAIL;END;
END ELSE BEGIN P:=VPACKAGE(MEM[CURLIST.HEADFIELD].HH.RH,0,1,1073741823);
POPNEST;MEM[CURLIST.TAILFIELD].HH.RH:=P;CURLIST.TAILFIELD:=P;
CURLIST.AUXFIELD.HH.LH:=1000;END;MEM[P].HH.B0:=13;MEM[P+6].INT:=0;
IF EQTB[3420].HH.RH<>0 THEN BEGINTOKENLI(EQTB[3420].HH.RH,13);ALIGNPEEK;
END;{:799}{800:}PROCEDURE DOASSIGNMENT;FORWARD;PROCEDURE RESUMEAFTERD;
FORWARD;PROCEDURE BUILDPAGE;FORWARD;PROCEDURE FINALIGN;
VAR P,Q,R,S,U,V:HALFWORD;T,W:SCALED;O:SCALED;N:HALFWORD;RULESAVE:SCALED;
AUXSAVE:MEMORYWORD;BEGIN IF CURGROUP<>6 THEN CONFUSION(916);UNSAVE;
IF CURGROUP<>6 THEN CONFUSION(917);UNSAVE;
IF NEST[NESTPTR-1].MODEFIELD=203 THEN O:=EQTB[5845].INT ELSE O:=0;
{801:}Q:=MEM[MEM[29992].HH.RH].HH.RH;REPEAT FLUSHLIST(MEM[Q+3].INT);
FLUSHLIST(MEM[Q+2].INT);P:=MEM[MEM[Q].HH.RH].HH.RH;
IF MEM[Q+1].INT=-1073741824 THEN{802:}BEGIN MEM[Q+1].INT:=0;
R:=MEM[Q].HH.RH;S:=MEM[R+1].HH.LH;
IF S<>0 THEN BEGIN MEM[0].HH.RH:=MEM[0].HH.RH+1;DELETEGLUERE(S);
MEM[R+1].HH.LH:=0;END;END{:802};
IF MEM[Q].HH.LH<>29991 THEN{803:}BEGIN T:=MEM[Q+1].INT+MEM[MEM[MEM[Q].HH
.RH+1].HH.LH+1].INT;R:=MEM[Q].HH.LH;S:=29991;MEM[S].HH.LH:=P;N:=1;
REPEAT MEM[R+1].INT:=MEM[R+1].INT-T;U:=MEM[R].HH.LH;
WHILE MEM[R].HH.RH>N DO BEGIN S:=MEM[S].HH.LH;
N:=MEM[MEM[S].HH.LH].HH.RH+1;END;
IF MEM[R].HH.RH<N THEN BEGIN MEM[R].HH.LH:=MEM[S].HH.LH;MEM[S].HH.LH:=R;
MEM[R].HH.RH:=MEM[R].HH.RH-1;S:=R;
END ELSE BEGIN IF MEM[R+1].INT>MEM[MEM[S].HH.LH+1].INT THEN MEM[MEM[S].
HH.LH+1].INT:=MEM[R+1].INT;FREENODE(R,2);END;R:=U;UNTIL R=29991;
END{:803};MEM[Q].HH.B0:=13;MEM[Q].HH.B1:=0;MEM[Q+3].INT:=0;
MEM[Q+2].INT:=0;MEM[Q+5].HH.B1:=0;MEM[Q+5].HH.B0:=0;MEM[Q+6].INT:=0;
MEM[Q+4].INT:=0;Q:=P;UNTIL Q=0{:801};{804:}SAVEPTR:=SAVEPTR-2;
PACKBEGINLIN:=-CURLIST.MLFIELD;
IF CURLIST.MODEFIELD=-1 THEN BEGIN RULESAVE:=EQTB[5846].INT;
EQTB[5846].INT:=0;
P:=HPACK(MEM[29992].HH.RH,SAVESTACK[SAVEPTR+1].INT,SAVESTACK[SAVEPTR+0].
INT);EQTB[5846].INT:=RULESAVE;
END ELSE BEGIN Q:=MEM[MEM[29992].HH.RH].HH.RH;
REPEAT MEM[Q+3].INT:=MEM[Q+1].INT;MEM[Q+1].INT:=0;
Q:=MEM[MEM[Q].HH.RH].HH.RH;UNTIL Q=0;
P:=VPACKAGE(MEM[29992].HH.RH,SAVESTACK[SAVEPTR+1].INT,SAVESTACK[SAVEPTR
+0].INT,1073741823);Q:=MEM[MEM[29992].HH.RH].HH.RH;
REPEAT MEM[Q+1].INT:=MEM[Q+3].INT;MEM[Q+3].INT:=0;
Q:=MEM[MEM[Q].HH.RH].HH.RH;UNTIL Q=0;END;PACKBEGINLIN:=0{:804};
{805:}Q:=MEM[CURLIST.HEADFIELD].HH.RH;S:=CURLIST.HEADFIELD;
WHILE Q<>0 DO BEGIN IF NOT(Q>=HIMEMMIN)THEN IF MEM[Q].HH.B0=13 THEN
{807:}BEGIN IF CURLIST.MODEFIELD=-1 THEN BEGIN MEM[Q].HH.B0:=0;
MEM[Q+1].INT:=MEM[P+1].INT;END ELSE BEGIN MEM[Q].HH.B0:=1;
MEM[Q+3].INT:=MEM[P+3].INT;END;MEM[Q+5].HH.B1:=MEM[P+5].HH.B1;
MEM[Q+5].HH.B0:=MEM[P+5].HH.B0;MEM[Q+6].GR:=MEM[P+6].GR;MEM[Q+4].INT:=O;
R:=MEM[MEM[Q+5].HH.RH].HH.RH;S:=MEM[MEM[P+5].HH.RH].HH.RH;
REPEAT{808:}N:=MEM[R].HH.B1;T:=MEM[S+1].INT;W:=T;U:=29996;
WHILE N>0 DO BEGIN N:=N-1;{809:}S:=MEM[S].HH.RH;V:=MEM[S+1].HH.LH;
MEM[U].HH.RH:=NEWGLUE(V);U:=MEM[U].HH.RH;MEM[U].HH.B1:=12;
T:=T+MEM[V+1].INT;
IF MEM[P+5].HH.B0=1 THEN BEGIN IF MEM[V].HH.B0=MEM[P+5].HH.B1 THEN T:=T+
ROUND(MEM[P+6].GR*MEM[V+2].INT);
END ELSE IF MEM[P+5].HH.B0=2 THEN BEGIN IF MEM[V].HH.B1=MEM[P+5].HH.B1
THEN T:=T-ROUND(MEM[P+6].GR*MEM[V+3].INT);END;S:=MEM[S].HH.RH;
MEM[U].HH.RH:=NEWNULLBOX;U:=MEM[U].HH.RH;T:=T+MEM[S+1].INT;
IF CURLIST.MODEFIELD=-1 THEN MEM[U+1].INT:=MEM[S+1].INT ELSE BEGIN MEM[U
].HH.B0:=1;MEM[U+3].INT:=MEM[S+1].INT;END{:809};END;
IF CURLIST.MODEFIELD=-1 THEN{810:}BEGIN MEM[R+3].INT:=MEM[Q+3].INT;
MEM[R+2].INT:=MEM[Q+2].INT;
IF T=MEM[R+1].INT THEN BEGIN MEM[R+5].HH.B0:=0;MEM[R+5].HH.B1:=0;
MEM[R+6].GR:=0.0;
END ELSE IF T>MEM[R+1].INT THEN BEGIN MEM[R+5].HH.B0:=1;
IF MEM[R+6].INT=0 THEN MEM[R+6].GR:=0.0 ELSE MEM[R+6].GR:=(T-MEM[R+1].
INT)/MEM[R+6].INT;END ELSE BEGIN MEM[R+5].HH.B1:=MEM[R+5].HH.B0;
MEM[R+5].HH.B0:=2;
IF MEM[R+4].INT=0 THEN MEM[R+6].GR:=0.0 ELSE IF(MEM[R+5].HH.B1=0)AND(MEM
[R+1].INT-T>MEM[R+4].INT)THEN MEM[R+6].GR:=1.0 ELSE MEM[R+6].GR:=(MEM[R
+1].INT-T)/MEM[R+4].INT;END;MEM[R+1].INT:=W;MEM[R].HH.B0:=0;
END{:810}ELSE{811:}BEGIN MEM[R+1].INT:=MEM[Q+1].INT;
IF T=MEM[R+3].INT THEN BEGIN MEM[R+5].HH.B0:=0;MEM[R+5].HH.B1:=0;
MEM[R+6].GR:=0.0;
END ELSE IF T>MEM[R+3].INT THEN BEGIN MEM[R+5].HH.B0:=1;
IF MEM[R+6].INT=0 THEN MEM[R+6].GR:=0.0 ELSE MEM[R+6].GR:=(T-MEM[R+3].
INT)/MEM[R+6].INT;END ELSE BEGIN MEM[R+5].HH.B1:=MEM[R+5].HH.B0;
MEM[R+5].HH.B0:=2;
IF MEM[R+4].INT=0 THEN MEM[R+6].GR:=0.0 ELSE IF(MEM[R+5].HH.B1=0)AND(MEM
[R+3].INT-T>MEM[R+4].INT)THEN MEM[R+6].GR:=1.0 ELSE MEM[R+6].GR:=(MEM[R
+3].INT-T)/MEM[R+4].INT;END;MEM[R+3].INT:=W;MEM[R].HH.B0:=1;END{:811};
MEM[R+4].INT:=0;IF U<>29996 THEN BEGIN MEM[U].HH.RH:=MEM[R].HH.RH;
MEM[R].HH.RH:=MEM[29996].HH.RH;R:=U;END{:808};
R:=MEM[MEM[R].HH.RH].HH.RH;S:=MEM[MEM[S].HH.RH].HH.RH;UNTIL R=0;
END{:807}ELSE IF MEM[Q].HH.B0=2 THEN{806:}BEGIN IF(MEM[Q+1].INT=
-1073741824)THEN MEM[Q+1].INT:=MEM[P+1].INT;
IF(MEM[Q+3].INT=-1073741824)THEN MEM[Q+3].INT:=MEM[P+3].INT;
IF(MEM[Q+2].INT=-1073741824)THEN MEM[Q+2].INT:=MEM[P+2].INT;
IF O<>0 THEN BEGIN R:=MEM[Q].HH.RH;MEM[Q].HH.RH:=0;Q:=HPACK(Q,0,1);
MEM[Q+4].INT:=O;MEM[Q].HH.RH:=R;MEM[S].HH.RH:=Q;END;END{:806};S:=Q;
Q:=MEM[Q].HH.RH;END{:805};FLUSHNODELIS(P);POPALIGNMENT;
{812:}AUXSAVE:=CURLIST.AUXFIELD;P:=MEM[CURLIST.HEADFIELD].HH.RH;
Q:=CURLIST.TAILFIELD;POPNEST;
IF CURLIST.MODEFIELD=203 THEN{1206:}BEGIN DOASSIGNMENT;
IF CURCMD<>3 THEN{1207:}BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(1171);END;BEGIN HELPPTR:=2;HELPLINE[1]:=896;HELPLINE[0]:=897;END;
BACKERROR;END{:1207}ELSE{1197:}BEGIN GETXTOKEN;
IF CURCMD<>3 THEN BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(1167);END;BEGIN HELPPTR:=2;HELPLINE[1]:=1168;HELPLINE[0]:=1169;
END;BACKERROR;END;END{:1197};POPNEST;
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWPENALTY(EQTB[5274].INT);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWPARAMGLUE(3);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
MEM[CURLIST.TAILFIELD].HH.RH:=P;IF P<>0 THEN CURLIST.TAILFIELD:=Q;
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWPENALTY(EQTB[5275].INT);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWPARAMGLUE(4);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
CURLIST.AUXFIELD.INT:=AUXSAVE.INT;RESUMEAFTERD;
END{:1206}ELSE BEGIN CURLIST.AUXFIELD:=AUXSAVE;
MEM[CURLIST.TAILFIELD].HH.RH:=P;IF P<>0 THEN CURLIST.TAILFIELD:=Q;
IF CURLIST.MODEFIELD=1 THEN BUILDPAGE;END{:812};END;
{785:}PROCEDURE ALIGNPEEK;LABEL 20;BEGIN 20:ALIGNSTATE:=1000000;
{406:}REPEAT GETXTOKEN;UNTIL CURCMD<>10{:406};
IF CURCMD=34 THEN BEGIN SCANLEFTBRAC;NEWSAVELEVEL(7);
IF CURLIST.MODEFIELD=-1 THEN NORMALPARAGR;
END ELSE IF CURCMD=2 THEN FINALIGN ELSE IF(CURCMD=5)AND(CURCHR=258)THEN
GOTO 20 ELSE BEGIN INITROW;INITCOL;END;END;
{:785}{:800}{815:}{826:}FUNCTION FINITESHRINK(P:HALFWORD):HALFWORD;
VAR Q:HALFWORD;BEGIN IF NOSHRINKERRO THEN BEGIN NOSHRINKERRO:=FALSE;
IF EQTB[5295].INT>0 THEN ENDDIAGNOSTI(TRUE);BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(918);END;BEGIN HELPPTR:=5;HELPLINE[4]:=919;
HELPLINE[3]:=920;HELPLINE[2]:=921;HELPLINE[1]:=922;HELPLINE[0]:=923;END;
ERROR;IF EQTB[5295].INT>0 THEN BEGINDIAGNOS;END;Q:=NEWSPEC(P);
MEM[Q].HH.B1:=0;DELETEGLUERE(P);FINITESHRINK:=Q;END;
{:826}{829:}PROCEDURE TRYBREAK(PI:INTEGER;BREAKTYPE:SMALLNUMBER);
LABEL 10,30,31,22,60;VAR R:HALFWORD;PREVR:HALFWORD;OLDL:HALFWORD;
NOBREAKYET:BOOLEAN;{830:}PREVPREVR:HALFWORD;S:HALFWORD;Q:HALFWORD;
V:HALFWORD;T:INTEGER;F:INTERNALFONT;L:HALFWORD;NODERSTAYSAC:BOOLEAN;
LINEWIDTH:SCALED;FITCLASS:0..3;B:HALFWORD;D:INTEGER;
ARTIFICIALDE:BOOLEAN;SAVELINK:HALFWORD;SHORTFALL:SCALED;
{:830}BEGIN{831:}IF ABS(PI)>=10000 THEN IF PI>0 THEN GOTO 10 ELSE PI:=
-10000{:831};NOBREAKYET:=TRUE;PREVR:=29993;OLDL:=0;
CURACTIVEWID[1]:=ACTIVEWIDTH[1];CURACTIVEWID[2]:=ACTIVEWIDTH[2];
CURACTIVEWID[3]:=ACTIVEWIDTH[3];CURACTIVEWID[4]:=ACTIVEWIDTH[4];
CURACTIVEWID[5]:=ACTIVEWIDTH[5];CURACTIVEWID[6]:=ACTIVEWIDTH[6];
WHILE TRUE DO BEGIN 22:R:=MEM[PREVR].HH.RH;
{832:}IF MEM[R].HH.B0=2 THEN BEGIN CURACTIVEWID[1]:=CURACTIVEWID[1]+MEM[
R+1].INT;CURACTIVEWID[2]:=CURACTIVEWID[2]+MEM[R+2].INT;
CURACTIVEWID[3]:=CURACTIVEWID[3]+MEM[R+3].INT;
CURACTIVEWID[4]:=CURACTIVEWID[4]+MEM[R+4].INT;
CURACTIVEWID[5]:=CURACTIVEWID[5]+MEM[R+5].INT;
CURACTIVEWID[6]:=CURACTIVEWID[6]+MEM[R+6].INT;PREVPREVR:=PREVR;PREVR:=R;
GOTO 22;END{:832};{835:}BEGIN L:=MEM[R+1].HH.LH;
IF L>OLDL THEN BEGIN IF(MINIMUMDEMER<1073741823)AND((OLDL<>EASYLINE)OR(R
=29993))THEN{836:}BEGIN IF NOBREAKYET THEN{837:}BEGIN NOBREAKYET:=FALSE;
BREAKWIDTH[1]:=BACKGROUND[1];BREAKWIDTH[2]:=BACKGROUND[2];
BREAKWIDTH[3]:=BACKGROUND[3];BREAKWIDTH[4]:=BACKGROUND[4];
BREAKWIDTH[5]:=BACKGROUND[5];BREAKWIDTH[6]:=BACKGROUND[6];S:=CURP;
IF BREAKTYPE>0 THEN IF CURP<>0 THEN{840:}BEGIN T:=MEM[CURP].HH.B1;
V:=CURP;S:=MEM[CURP+1].HH.RH;WHILE T>0 DO BEGIN T:=T-1;V:=MEM[V].HH.RH;
{841:}IF(V>=HIMEMMIN)THEN BEGIN F:=MEM[V].HH.B0;
BREAKWIDTH[1]:=BREAKWIDTH[1]-FONTINFO[WIDTHBASE[F]+FONTINFO[CHARBASE[F]+
MEM[V].HH.B1].QQQQ.B0].INT;
END ELSE CASE MEM[V].HH.B0 OF 6:BEGIN F:=MEM[V+1].HH.B0;
BREAKWIDTH[1]:=BREAKWIDTH[1]-FONTINFO[WIDTHBASE[F]+FONTINFO[CHARBASE[F]+
MEM[V+1].HH.B1].QQQQ.B0].INT;END;
0,1,2,11:BREAKWIDTH[1]:=BREAKWIDTH[1]-MEM[V+1].INT;
ELSE CONFUSION(924)END{:841};END;
WHILE S<>0 DO BEGIN{842:}IF(S>=HIMEMMIN)THEN BEGIN F:=MEM[S].HH.B0;
BREAKWIDTH[1]:=BREAKWIDTH[1]+FONTINFO[WIDTHBASE[F]+FONTINFO[CHARBASE[F]+
MEM[S].HH.B1].QQQQ.B0].INT;
END ELSE CASE MEM[S].HH.B0 OF 6:BEGIN F:=MEM[S+1].HH.B0;
BREAKWIDTH[1]:=BREAKWIDTH[1]+FONTINFO[WIDTHBASE[F]+FONTINFO[CHARBASE[F]+
MEM[S+1].HH.B1].QQQQ.B0].INT;END;
0,1,2,11:BREAKWIDTH[1]:=BREAKWIDTH[1]+MEM[S+1].INT;
ELSE CONFUSION(925)END{:842};S:=MEM[S].HH.RH;END;
BREAKWIDTH[1]:=BREAKWIDTH[1]+DISCWIDTH;
IF MEM[CURP+1].HH.RH=0 THEN S:=MEM[V].HH.RH;END{:840};
WHILE S<>0 DO BEGIN IF(S>=HIMEMMIN)THEN GOTO 30;
CASE MEM[S].HH.B0 OF 10:{838:}BEGIN V:=MEM[S+1].HH.LH;
BREAKWIDTH[1]:=BREAKWIDTH[1]-MEM[V+1].INT;
BREAKWIDTH[2+MEM[V].HH.B0]:=BREAKWIDTH[2+MEM[V].HH.B0]-MEM[V+2].INT;
BREAKWIDTH[6]:=BREAKWIDTH[6]-MEM[V+3].INT;END{:838};12:;
9:BREAKWIDTH[1]:=BREAKWIDTH[1]-MEM[S+1].INT;
11:IF MEM[S].HH.B1<>1 THEN GOTO 30 ELSE BREAKWIDTH[1]:=BREAKWIDTH[1]-MEM
[S+1].INT;ELSE GOTO 30 END;S:=MEM[S].HH.RH;END;30:END{:837};
{843:}IF MEM[PREVR].HH.B0=2 THEN BEGIN MEM[PREVR+1].INT:=MEM[PREVR+1].
INT-CURACTIVEWID[1]+BREAKWIDTH[1];
MEM[PREVR+2].INT:=MEM[PREVR+2].INT-CURACTIVEWID[2]+BREAKWIDTH[2];
MEM[PREVR+3].INT:=MEM[PREVR+3].INT-CURACTIVEWID[3]+BREAKWIDTH[3];
MEM[PREVR+4].INT:=MEM[PREVR+4].INT-CURACTIVEWID[4]+BREAKWIDTH[4];
MEM[PREVR+5].INT:=MEM[PREVR+5].INT-CURACTIVEWID[5]+BREAKWIDTH[5];
MEM[PREVR+6].INT:=MEM[PREVR+6].INT-CURACTIVEWID[6]+BREAKWIDTH[6];
END ELSE IF PREVR=29993 THEN BEGIN ACTIVEWIDTH[1]:=BREAKWIDTH[1];
ACTIVEWIDTH[2]:=BREAKWIDTH[2];ACTIVEWIDTH[3]:=BREAKWIDTH[3];
ACTIVEWIDTH[4]:=BREAKWIDTH[4];ACTIVEWIDTH[5]:=BREAKWIDTH[5];
ACTIVEWIDTH[6]:=BREAKWIDTH[6];END ELSE BEGIN Q:=GETNODE(7);
MEM[Q].HH.RH:=R;MEM[Q].HH.B0:=2;MEM[Q].HH.B1:=0;
MEM[Q+1].INT:=BREAKWIDTH[1]-CURACTIVEWID[1];
MEM[Q+2].INT:=BREAKWIDTH[2]-CURACTIVEWID[2];
MEM[Q+3].INT:=BREAKWIDTH[3]-CURACTIVEWID[3];
MEM[Q+4].INT:=BREAKWIDTH[4]-CURACTIVEWID[4];
MEM[Q+5].INT:=BREAKWIDTH[5]-CURACTIVEWID[5];
MEM[Q+6].INT:=BREAKWIDTH[6]-CURACTIVEWID[6];MEM[PREVR].HH.RH:=Q;
PREVPREVR:=PREVR;PREVR:=Q;END{:843};
IF ABS(EQTB[5279].INT)>=1073741823-MINIMUMDEMER THEN MINIMUMDEMER:=
1073741822 ELSE MINIMUMDEMER:=MINIMUMDEMER+ABS(EQTB[5279].INT);
FOR FITCLASS:=0 TO 3 DO BEGIN IF MINIMALDEMER[FITCLASS]<=MINIMUMDEMER
THEN{845:}BEGIN Q:=GETNODE(2);MEM[Q].HH.RH:=PASSIVE;PASSIVE:=Q;
MEM[Q+1].HH.RH:=CURP;PASSNUMBER:=PASSNUMBER+1;MEM[Q].HH.LH:=PASSNUMBER;
MEM[Q+1].HH.LH:=BESTPLACE[FITCLASS];Q:=GETNODE(3);
MEM[Q+1].HH.RH:=PASSIVE;MEM[Q+1].HH.LH:=BESTPLLINE[FITCLASS]+1;
MEM[Q].HH.B1:=FITCLASS;MEM[Q].HH.B0:=BREAKTYPE;
MEM[Q+2].INT:=MINIMALDEMER[FITCLASS];MEM[Q].HH.RH:=R;
MEM[PREVR].HH.RH:=Q;PREVR:=Q;
IF EQTB[5295].INT>0 THEN{846:}BEGIN PRINTNL(926);
PRINTINT(MEM[PASSIVE].HH.LH);PRINT(927);PRINTINT(MEM[Q+1].HH.LH-1);
PRINTCHAR(46);PRINTINT(FITCLASS);IF BREAKTYPE=1 THEN PRINTCHAR(45);
PRINT(928);PRINTINT(MEM[Q+2].INT);PRINT(929);
IF MEM[PASSIVE+1].HH.LH=0 THEN PRINTCHAR(48)ELSE PRINTINT(MEM[MEM[
PASSIVE+1].HH.LH].HH.LH);END{:846};END{:845};
MINIMALDEMER[FITCLASS]:=1073741823;END;MINIMUMDEMER:=1073741823;
{844:}IF R<>29993 THEN BEGIN Q:=GETNODE(7);MEM[Q].HH.RH:=R;
MEM[Q].HH.B0:=2;MEM[Q].HH.B1:=0;
MEM[Q+1].INT:=CURACTIVEWID[1]-BREAKWIDTH[1];
MEM[Q+2].INT:=CURACTIVEWID[2]-BREAKWIDTH[2];
MEM[Q+3].INT:=CURACTIVEWID[3]-BREAKWIDTH[3];
MEM[Q+4].INT:=CURACTIVEWID[4]-BREAKWIDTH[4];
MEM[Q+5].INT:=CURACTIVEWID[5]-BREAKWIDTH[5];
MEM[Q+6].INT:=CURACTIVEWID[6]-BREAKWIDTH[6];MEM[PREVR].HH.RH:=Q;
PREVPREVR:=PREVR;PREVR:=Q;END{:844};END{:836};IF R=29993 THEN GOTO 10;
{850:}IF L>EASYLINE THEN BEGIN LINEWIDTH:=SECONDWIDTH;OLDL:=65534;
END ELSE BEGIN OLDL:=L;
IF L>LASTSPECIALL THEN LINEWIDTH:=SECONDWIDTH ELSE IF EQTB[3412].HH.RH=0
THEN LINEWIDTH:=FIRSTWIDTH ELSE LINEWIDTH:=MEM[EQTB[3412].HH.RH+2*L].INT
;END{:850};END;END{:835};{851:}BEGIN ARTIFICIALDE:=FALSE;
SHORTFALL:=LINEWIDTH-CURACTIVEWID[1];
IF SHORTFALL>0 THEN{852:}IF(CURACTIVEWID[3]<>0)OR(CURACTIVEWID[4]<>0)OR(
CURACTIVEWID[5]<>0)THEN BEGIN B:=0;FITCLASS:=2;
END ELSE BEGIN IF SHORTFALL>7230584 THEN IF CURACTIVEWID[2]<1663497 THEN
BEGIN B:=10000;FITCLASS:=0;GOTO 31;END;
B:=BADNESS(SHORTFALL,CURACTIVEWID[2]);
IF B>12 THEN IF B>99 THEN FITCLASS:=0 ELSE FITCLASS:=1 ELSE FITCLASS:=2;
31:END{:852}ELSE{853:}BEGIN IF-SHORTFALL>CURACTIVEWID[6]THEN B:=10001
ELSE B:=BADNESS(-SHORTFALL,CURACTIVEWID[6]);
IF B>12 THEN FITCLASS:=3 ELSE FITCLASS:=2;END{:853};
IF(B>10000)OR(PI=-10000)THEN{854:}BEGIN IF FINALPASS AND(MINIMUMDEMER=
1073741823)AND(MEM[R].HH.RH=29993)AND(PREVR=29993)THEN ARTIFICIALDE:=
TRUE ELSE IF B>THRESHOLD THEN GOTO 60;NODERSTAYSAC:=FALSE;
END{:854}ELSE BEGIN PREVR:=R;IF B>THRESHOLD THEN GOTO 22;
NODERSTAYSAC:=TRUE;END;
{855:}IF ARTIFICIALDE THEN D:=0 ELSE{859:}BEGIN D:=EQTB[5265].INT+B;
IF ABS(D)>=10000 THEN D:=100000000 ELSE D:=D*D;
IF PI<>0 THEN IF PI>0 THEN D:=D+PI*PI ELSE IF PI>-10000 THEN D:=D-PI*PI;
IF(BREAKTYPE=1)AND(MEM[R].HH.B0=1)THEN IF CURP<>0 THEN D:=D+EQTB[5277].
INT ELSE D:=D+EQTB[5278].INT;
IF ABS(FITCLASS-MEM[R].HH.B1)>1 THEN D:=D+EQTB[5279].INT;END{:859};
IF EQTB[5295].INT>0 THEN{856:}BEGIN IF PRINTEDNODE<>CURP THEN{857:}BEGIN
PRINTNL(338);
IF CURP=0 THEN SHORTDISPLAY(MEM[PRINTEDNODE].HH.RH)ELSE BEGIN SAVELINK:=
MEM[CURP].HH.RH;MEM[CURP].HH.RH:=0;PRINTNL(338);
SHORTDISPLAY(MEM[PRINTEDNODE].HH.RH);MEM[CURP].HH.RH:=SAVELINK;END;
PRINTEDNODE:=CURP;END{:857};PRINTNL(64);
IF CURP=0 THEN PRINTESC(597)ELSE IF MEM[CURP].HH.B0<>10 THEN BEGIN IF
MEM[CURP].HH.B0=12 THEN PRINTESC(531)ELSE IF MEM[CURP].HH.B0=7 THEN
PRINTESC(349)ELSE IF MEM[CURP].HH.B0=11 THEN PRINTESC(340)ELSE PRINTESC(
343);END;PRINT(930);
IF MEM[R+1].HH.RH=0 THEN PRINTCHAR(48)ELSE PRINTINT(MEM[MEM[R+1].HH.RH].
HH.LH);PRINT(931);IF B>10000 THEN PRINTCHAR(42)ELSE PRINTINT(B);
PRINT(932);PRINTINT(PI);PRINT(933);
IF ARTIFICIALDE THEN PRINTCHAR(42)ELSE PRINTINT(D);END{:856};
D:=D+MEM[R+2].INT;
IF D<=MINIMALDEMER[FITCLASS]THEN BEGIN MINIMALDEMER[FITCLASS]:=D;
BESTPLACE[FITCLASS]:=MEM[R+1].HH.RH;BESTPLLINE[FITCLASS]:=L;
IF D<MINIMUMDEMER THEN MINIMUMDEMER:=D;END{:855};
IF NODERSTAYSAC THEN GOTO 22;60:{860:}MEM[PREVR].HH.RH:=MEM[R].HH.RH;
FREENODE(R,3);IF PREVR=29993 THEN{861:}BEGIN R:=MEM[29993].HH.RH;
IF MEM[R].HH.B0=2 THEN BEGIN ACTIVEWIDTH[1]:=ACTIVEWIDTH[1]+MEM[R+1].INT
;ACTIVEWIDTH[2]:=ACTIVEWIDTH[2]+MEM[R+2].INT;
ACTIVEWIDTH[3]:=ACTIVEWIDTH[3]+MEM[R+3].INT;
ACTIVEWIDTH[4]:=ACTIVEWIDTH[4]+MEM[R+4].INT;
ACTIVEWIDTH[5]:=ACTIVEWIDTH[5]+MEM[R+5].INT;
ACTIVEWIDTH[6]:=ACTIVEWIDTH[6]+MEM[R+6].INT;
CURACTIVEWID[1]:=ACTIVEWIDTH[1];CURACTIVEWID[2]:=ACTIVEWIDTH[2];
CURACTIVEWID[3]:=ACTIVEWIDTH[3];CURACTIVEWID[4]:=ACTIVEWIDTH[4];
CURACTIVEWID[5]:=ACTIVEWIDTH[5];CURACTIVEWID[6]:=ACTIVEWIDTH[6];
MEM[29993].HH.RH:=MEM[R].HH.RH;FREENODE(R,7);END;
END{:861}ELSE IF MEM[PREVR].HH.B0=2 THEN BEGIN R:=MEM[PREVR].HH.RH;
IF R=29993 THEN BEGIN CURACTIVEWID[1]:=CURACTIVEWID[1]-MEM[PREVR+1].INT;
CURACTIVEWID[2]:=CURACTIVEWID[2]-MEM[PREVR+2].INT;
CURACTIVEWID[3]:=CURACTIVEWID[3]-MEM[PREVR+3].INT;
CURACTIVEWID[4]:=CURACTIVEWID[4]-MEM[PREVR+4].INT;
CURACTIVEWID[5]:=CURACTIVEWID[5]-MEM[PREVR+5].INT;
CURACTIVEWID[6]:=CURACTIVEWID[6]-MEM[PREVR+6].INT;
MEM[PREVPREVR].HH.RH:=29993;FREENODE(PREVR,7);PREVR:=PREVPREVR;
END ELSE IF MEM[R].HH.B0=2 THEN BEGIN CURACTIVEWID[1]:=CURACTIVEWID[1]+
MEM[R+1].INT;CURACTIVEWID[2]:=CURACTIVEWID[2]+MEM[R+2].INT;
CURACTIVEWID[3]:=CURACTIVEWID[3]+MEM[R+3].INT;
CURACTIVEWID[4]:=CURACTIVEWID[4]+MEM[R+4].INT;
CURACTIVEWID[5]:=CURACTIVEWID[5]+MEM[R+5].INT;
CURACTIVEWID[6]:=CURACTIVEWID[6]+MEM[R+6].INT;
MEM[PREVR+1].INT:=MEM[PREVR+1].INT+MEM[R+1].INT;
MEM[PREVR+2].INT:=MEM[PREVR+2].INT+MEM[R+2].INT;
MEM[PREVR+3].INT:=MEM[PREVR+3].INT+MEM[R+3].INT;
MEM[PREVR+4].INT:=MEM[PREVR+4].INT+MEM[R+4].INT;
MEM[PREVR+5].INT:=MEM[PREVR+5].INT+MEM[R+5].INT;
MEM[PREVR+6].INT:=MEM[PREVR+6].INT+MEM[R+6].INT;
MEM[PREVR].HH.RH:=MEM[R].HH.RH;FREENODE(R,7);END;END{:860};END{:851};
END;
10:{858:}IF CURP=PRINTEDNODE THEN IF CURP<>0 THEN IF MEM[CURP].HH.B0=7
THEN BEGIN T:=MEM[CURP].HH.B1;WHILE T>0 DO BEGIN T:=T-1;
PRINTEDNODE:=MEM[PRINTEDNODE].HH.RH;END;END{:858}END;
{:829}{877:}PROCEDURE POSTLINEBREA(FINALWIDOWPE:INTEGER;
NONPRUNABLEP:HALFWORD);LABEL 30,31;VAR Q,R,S:HALFWORD;DISCBREAK:BOOLEAN;
POSTDISCBREA:BOOLEAN;CURWIDTH:SCALED;CURINDENT:SCALED;T:QUARTERWORD;
PEN:INTEGER;CURLINE:HALFWORD;BEGIN{878:}Q:=MEM[BESTBET+1].HH.RH;CURP:=0;
REPEAT R:=Q;Q:=MEM[Q+1].HH.LH;MEM[R+1].HH.LH:=CURP;CURP:=R;
UNTIL Q=0{:878};CURLINE:=CURLIST.PGFIELD+1;
REPEAT{880:}{881:}Q:=MEM[CURP+1].HH.RH;DISCBREAK:=FALSE;
POSTDISCBREA:=FALSE;
IF Q<>0 THEN IF MEM[Q].HH.B0=10 THEN BEGIN DELETEGLUERE(MEM[Q+1].HH.LH);
MEM[Q+1].HH.LH:=EQTB[2890].HH.RH;MEM[Q].HH.B1:=9;
MEM[EQTB[2890].HH.RH].HH.RH:=MEM[EQTB[2890].HH.RH].HH.RH+1;GOTO 30;
END ELSE BEGIN IF MEM[Q].HH.B0=7 THEN{882:}BEGIN T:=MEM[Q].HH.B1;
{883:}IF T=0 THEN R:=MEM[Q].HH.RH ELSE BEGIN R:=Q;
WHILE T>1 DO BEGIN R:=MEM[R].HH.RH;T:=T-1;END;S:=MEM[R].HH.RH;
R:=MEM[S].HH.RH;MEM[S].HH.RH:=0;FLUSHNODELIS(MEM[Q].HH.RH);
MEM[Q].HH.B1:=0;END{:883};
IF MEM[Q+1].HH.RH<>0 THEN{884:}BEGIN S:=MEM[Q+1].HH.RH;
WHILE MEM[S].HH.RH<>0 DO S:=MEM[S].HH.RH;MEM[S].HH.RH:=R;
R:=MEM[Q+1].HH.RH;MEM[Q+1].HH.RH:=0;POSTDISCBREA:=TRUE;END{:884};
IF MEM[Q+1].HH.LH<>0 THEN{885:}BEGIN S:=MEM[Q+1].HH.LH;MEM[Q].HH.RH:=S;
WHILE MEM[S].HH.RH<>0 DO S:=MEM[S].HH.RH;MEM[Q+1].HH.LH:=0;Q:=S;
END{:885};MEM[Q].HH.RH:=R;DISCBREAK:=TRUE;
END{:882}ELSE IF(MEM[Q].HH.B0=9)OR(MEM[Q].HH.B0=11)THEN MEM[Q+1].INT:=0;
END ELSE BEGIN Q:=29997;WHILE MEM[Q].HH.RH<>0 DO Q:=MEM[Q].HH.RH;END;
{886:}R:=NEWPARAMGLUE(8);MEM[R].HH.RH:=MEM[Q].HH.RH;MEM[Q].HH.RH:=R;
Q:=R{:886};30:{:881};{887:}R:=MEM[Q].HH.RH;MEM[Q].HH.RH:=0;
Q:=MEM[29997].HH.RH;MEM[29997].HH.RH:=R;
IF EQTB[2889].HH.RH<>0 THEN BEGIN R:=NEWPARAMGLUE(7);MEM[R].HH.RH:=Q;
Q:=R;END{:887};
{889:}IF CURLINE>LASTSPECIALL THEN BEGIN CURWIDTH:=SECONDWIDTH;
CURINDENT:=SECONDINDENT;
END ELSE IF EQTB[3412].HH.RH=0 THEN BEGIN CURWIDTH:=FIRSTWIDTH;
CURINDENT:=FIRSTINDENT;
END ELSE BEGIN CURWIDTH:=MEM[EQTB[3412].HH.RH+2*CURLINE].INT;
CURINDENT:=MEM[EQTB[3412].HH.RH+2*CURLINE-1].INT;END;ADJUSTTAIL:=29995;
JUSTBOX:=HPACK(Q,CURWIDTH,0);MEM[JUSTBOX+4].INT:=CURINDENT{:889};
{888:}APPENDTOVLIS(JUSTBOX);
IF 29995<>ADJUSTTAIL THEN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=MEM[29995]
.HH.RH;CURLIST.TAILFIELD:=ADJUSTTAIL;END;ADJUSTTAIL:=0{:888};
{890:}IF CURLINE+1<>BESTLINE THEN BEGIN PEN:=EQTB[5276].INT;
IF CURLINE=CURLIST.PGFIELD+1 THEN PEN:=PEN+EQTB[5268].INT;
IF CURLINE+2=BESTLINE THEN PEN:=PEN+FINALWIDOWPE;
IF DISCBREAK THEN PEN:=PEN+EQTB[5271].INT;
IF PEN<>0 THEN BEGIN R:=NEWPENALTY(PEN);MEM[CURLIST.TAILFIELD].HH.RH:=R;
CURLIST.TAILFIELD:=R;END;END{:890}{:880};CURLINE:=CURLINE+1;
CURP:=MEM[CURP+1].HH.LH;
IF CURP<>0 THEN IF NOT POSTDISCBREA THEN{879:}BEGIN R:=29997;
WHILE TRUE DO BEGIN Q:=MEM[R].HH.RH;IF Q=MEM[CURP+1].HH.RH THEN GOTO 31;
IF(Q>=HIMEMMIN)THEN GOTO 31;IF(MEM[Q].HH.B0<9)THEN GOTO 31;
IF Q=NONPRUNABLEP THEN GOTO 31;
IF MEM[Q].HH.B0=11 THEN IF MEM[Q].HH.B1<>1 THEN GOTO 31;R:=Q;END;
31:IF R<>29997 THEN BEGIN MEM[R].HH.RH:=0;
FLUSHNODELIS(MEM[29997].HH.RH);MEM[29997].HH.RH:=Q;END;END{:879};
UNTIL CURP=0;
IF(CURLINE<>BESTLINE)OR(MEM[29997].HH.RH<>0)THEN CONFUSION(940);
CURLIST.PGFIELD:=BESTLINE-1;END;
{:877}{895:}{906:}FUNCTION RECONSTITUTE(J,N:SMALLNUMBER;
BCHAR,HCHAR:HALFWORD):SMALLNUMBER;LABEL 22,30;VAR P:HALFWORD;T:HALFWORD;
Q:FOURQUARTERS;CURRH:HALFWORD;TESTCHAR:HALFWORD;W:SCALED;K:FONTINDEX;
BEGIN HYPHENPASSED:=0;T:=29996;W:=0;MEM[29996].HH.RH:=0;
{908:}CURL:=HU[J];CURQ:=T;IF J=0 THEN BEGIN LIGATUREPRES:=INITLIG;
P:=INITLIST;IF LIGATUREPRES THEN LFTHIT:=INITLFT;
WHILE P>0 DO BEGIN BEGIN MEM[T].HH.RH:=GETAVAIL;T:=MEM[T].HH.RH;
MEM[T].HH.B0:=HF;MEM[T].HH.B1:=MEM[P].HH.B1;END;P:=MEM[P].HH.RH;END;
END ELSE IF CURL<256 THEN BEGIN MEM[T].HH.RH:=GETAVAIL;T:=MEM[T].HH.RH;
MEM[T].HH.B0:=HF;MEM[T].HH.B1:=CURL;END;LIGSTACK:=0;
BEGIN IF J<N THEN CURR:=HU[J+1]ELSE CURR:=BCHAR;
IF ODD(HYF[J])THEN CURRH:=HCHAR ELSE CURRH:=256;END{:908};
22:{909:}IF CURL=256 THEN BEGIN K:=BCHARLABEL[HF];
IF K=0 THEN GOTO 30 ELSE Q:=FONTINFO[K].QQQQ;
END ELSE BEGIN Q:=FONTINFO[CHARBASE[HF]+CURL].QQQQ;
IF((Q.B2)MOD 4)<>1 THEN GOTO 30;K:=LIGKERNBASE[HF]+Q.B3;
Q:=FONTINFO[K].QQQQ;
IF Q.B0>128 THEN BEGIN K:=LIGKERNBASE[HF]+256*Q.B2+Q.B3+32768-256*(128);
Q:=FONTINFO[K].QQQQ;END;END;
IF CURRH<256 THEN TESTCHAR:=CURRH ELSE TESTCHAR:=CURR;
WHILE TRUE DO BEGIN IF Q.B1=TESTCHAR THEN IF Q.B0<=128 THEN IF CURRH<256
THEN BEGIN HYPHENPASSED:=J;HCHAR:=256;CURRH:=256;GOTO 22;
END ELSE BEGIN IF HCHAR<256 THEN IF ODD(HYF[J])THEN BEGIN HYPHENPASSED:=
J;HCHAR:=256;END;
IF Q.B2<128 THEN{911:}BEGIN IF CURL=256 THEN LFTHIT:=TRUE;
IF J=N THEN IF LIGSTACK=0 THEN RTHIT:=TRUE;
BEGIN IF INTERRUPT<>0 THEN PAUSEFORINST;END;
CASE Q.B2 OF 1,5:BEGIN CURL:=Q.B3;LIGATUREPRES:=TRUE;END;
2,6:BEGIN CURR:=Q.B3;
IF LIGSTACK>0 THEN MEM[LIGSTACK].HH.B1:=CURR ELSE BEGIN LIGSTACK:=
NEWLIGITEM(CURR);IF J=N THEN BCHAR:=256 ELSE BEGIN P:=GETAVAIL;
MEM[LIGSTACK+1].HH.RH:=P;MEM[P].HH.B1:=HU[J+1];MEM[P].HH.B0:=HF;END;END;
END;3:BEGIN CURR:=Q.B3;P:=LIGSTACK;LIGSTACK:=NEWLIGITEM(CURR);
MEM[LIGSTACK].HH.RH:=P;END;
7,11:BEGIN IF LIGATUREPRES THEN BEGIN P:=NEWLIGATURE(HF,CURL,MEM[CURQ].
HH.RH);IF LFTHIT THEN BEGIN MEM[P].HH.B1:=2;LFTHIT:=FALSE;END;
IF FALSE THEN IF LIGSTACK=0 THEN BEGIN MEM[P].HH.B1:=MEM[P].HH.B1+1;
RTHIT:=FALSE;END;MEM[CURQ].HH.RH:=P;T:=P;LIGATUREPRES:=FALSE;END;
CURQ:=T;CURL:=Q.B3;LIGATUREPRES:=TRUE;END;ELSE BEGIN CURL:=Q.B3;
LIGATUREPRES:=TRUE;
IF LIGSTACK>0 THEN BEGIN IF MEM[LIGSTACK+1].HH.RH>0 THEN BEGIN MEM[T].HH
.RH:=MEM[LIGSTACK+1].HH.RH;T:=MEM[T].HH.RH;J:=J+1;END;P:=LIGSTACK;
LIGSTACK:=MEM[P].HH.RH;FREENODE(P,2);
IF LIGSTACK=0 THEN BEGIN IF J<N THEN CURR:=HU[J+1]ELSE CURR:=BCHAR;
IF ODD(HYF[J])THEN CURRH:=HCHAR ELSE CURRH:=256;
END ELSE CURR:=MEM[LIGSTACK].HH.B1;
END ELSE IF J=N THEN GOTO 30 ELSE BEGIN BEGIN MEM[T].HH.RH:=GETAVAIL;
T:=MEM[T].HH.RH;MEM[T].HH.B0:=HF;MEM[T].HH.B1:=CURR;END;J:=J+1;
BEGIN IF J<N THEN CURR:=HU[J+1]ELSE CURR:=BCHAR;
IF ODD(HYF[J])THEN CURRH:=HCHAR ELSE CURRH:=256;END;END;END END;
IF Q.B2>4 THEN IF Q.B2<>7 THEN GOTO 30;GOTO 22;END{:911};
W:=FONTINFO[KERNBASE[HF]+256*Q.B2+Q.B3].INT;GOTO 30;END;
IF Q.B0>=128 THEN IF CURRH=256 THEN GOTO 30 ELSE BEGIN CURRH:=256;
GOTO 22;END;K:=K+Q.B0+1;Q:=FONTINFO[K].QQQQ;END;30:{:909};
{910:}IF LIGATUREPRES THEN BEGIN P:=NEWLIGATURE(HF,CURL,MEM[CURQ].HH.RH)
;IF LFTHIT THEN BEGIN MEM[P].HH.B1:=2;LFTHIT:=FALSE;END;
IF RTHIT THEN IF LIGSTACK=0 THEN BEGIN MEM[P].HH.B1:=MEM[P].HH.B1+1;
RTHIT:=FALSE;END;MEM[CURQ].HH.RH:=P;T:=P;LIGATUREPRES:=FALSE;END;
IF W<>0 THEN BEGIN MEM[T].HH.RH:=NEWKERN(W);T:=MEM[T].HH.RH;W:=0;END;
IF LIGSTACK>0 THEN BEGIN CURQ:=T;CURL:=MEM[LIGSTACK].HH.B1;
LIGATUREPRES:=TRUE;
BEGIN IF MEM[LIGSTACK+1].HH.RH>0 THEN BEGIN MEM[T].HH.RH:=MEM[LIGSTACK+1
].HH.RH;T:=MEM[T].HH.RH;J:=J+1;END;P:=LIGSTACK;LIGSTACK:=MEM[P].HH.RH;
FREENODE(P,2);
IF LIGSTACK=0 THEN BEGIN IF J<N THEN CURR:=HU[J+1]ELSE CURR:=BCHAR;
IF ODD(HYF[J])THEN CURRH:=HCHAR ELSE CURRH:=256;
END ELSE CURR:=MEM[LIGSTACK].HH.B1;END;GOTO 22;END{:910};
RECONSTITUTE:=J;END;{:906}PROCEDURE HYPHENATE;
LABEL 50,30,40,41,42,45,10;VAR{901:}I,J,L:0..65;Q,R,S:HALFWORD;
BCHAR:HALFWORD;{:901}{912:}MAJORTAIL,MINORTAIL:HALFWORD;C:ASCIICODE;
CLOC:0..63;RCOUNT:INTEGER;HYFNODE:HALFWORD;{:912}{922:}Z:TRIEPOINTER;
V:INTEGER;{:922}{929:}H:HYPHPOINTER;K:STRNUMBER;U:POOLPOINTER;
{:929}BEGIN{923:}FOR J:=0 TO HN DO HYF[J]:=0;{930:}H:=HC[1];HN:=HN+1;
HC[HN]:=CURLANG;FOR J:=2 TO HN DO H:=(H+H+HC[J])MOD 307;
WHILE TRUE DO BEGIN{931:}K:=HYPHWORD[H];IF K=0 THEN GOTO 45;
IF(STRSTART[K+1]-STRSTART[K])<HN THEN GOTO 45;
IF(STRSTART[K+1]-STRSTART[K])=HN THEN BEGIN J:=1;U:=STRSTART[K];
REPEAT IF STRPOOL[U]<HC[J]THEN GOTO 45;IF STRPOOL[U]>HC[J]THEN GOTO 30;
J:=J+1;U:=U+1;UNTIL J>HN;{932:}S:=HYPHLIST[H];
WHILE S<>0 DO BEGIN HYF[MEM[S].HH.LH]:=1;S:=MEM[S].HH.RH;END{:932};
HN:=HN-1;GOTO 40;END;30:{:931};IF H>0 THEN H:=H-1 ELSE H:=307;END;
45:HN:=HN-1{:930};IF TRIE[CURLANG+1].B1<>CURLANG THEN GOTO 10;HC[0]:=0;
HC[HN+1]:=0;HC[HN+2]:=256;
FOR J:=0 TO HN-RHYF+1 DO BEGIN Z:=TRIE[CURLANG+1].RH+HC[J];L:=J;
WHILE HC[L]=TRIE[Z].B1 DO BEGIN IF TRIE[Z].B0<>0 THEN{924:}BEGIN V:=TRIE
[Z].B0;REPEAT V:=V+OPSTART[CURLANG];I:=L-HYFDISTANCE[V];
IF HYFNUM[V]>HYF[I]THEN HYF[I]:=HYFNUM[V];V:=HYFNEXT[V];UNTIL V=0;
END{:924};L:=L+1;Z:=TRIE[Z].RH+HC[L];END;END;
40:FOR J:=0 TO LHYF-1 DO HYF[J]:=0;
FOR J:=0 TO RHYF-1 DO HYF[HN-J]:=0{:923};
{902:}FOR J:=LHYF TO HN-RHYF DO IF ODD(HYF[J])THEN GOTO 41;GOTO 10;
41:{:902};{903:}Q:=MEM[HB].HH.RH;MEM[HB].HH.RH:=0;R:=MEM[HA].HH.RH;
MEM[HA].HH.RH:=0;BCHAR:=HYFBCHAR;
IF(HA>=HIMEMMIN)THEN IF MEM[HA].HH.B0<>HF THEN GOTO 42 ELSE BEGIN
INITLIST:=HA;INITLIG:=FALSE;HU[0]:=MEM[HA].HH.B1;
END ELSE IF MEM[HA].HH.B0=6 THEN IF MEM[HA+1].HH.B0<>HF THEN GOTO 42
ELSE BEGIN INITLIST:=MEM[HA+1].HH.RH;INITLIG:=TRUE;
INITLFT:=(MEM[HA].HH.B1>1);HU[0]:=MEM[HA+1].HH.B1;
IF INITLIST=0 THEN IF INITLFT THEN BEGIN HU[0]:=256;INITLIG:=FALSE;END;
FREENODE(HA,2);
END ELSE BEGIN IF NOT(R>=HIMEMMIN)THEN IF MEM[R].HH.B0=6 THEN IF MEM[R].
HH.B1>1 THEN GOTO 42;J:=1;S:=HA;INITLIST:=0;GOTO 50;END;S:=CURP;
WHILE MEM[S].HH.RH<>HA DO S:=MEM[S].HH.RH;J:=0;GOTO 50;42:S:=HA;J:=0;
HU[0]:=256;INITLIG:=FALSE;INITLIST:=0;50:FLUSHNODELIS(R);
{913:}REPEAT L:=J;J:=RECONSTITUTE(J,HN,BCHAR,HYFCHAR)+1;
IF HYPHENPASSED=0 THEN BEGIN MEM[S].HH.RH:=MEM[29996].HH.RH;
WHILE MEM[S].HH.RH>0 DO S:=MEM[S].HH.RH;IF ODD(HYF[J-1])THEN BEGIN L:=J;
HYPHENPASSED:=J-1;MEM[29996].HH.RH:=0;END;END;
IF HYPHENPASSED>0 THEN{914:}REPEAT R:=GETNODE(2);
MEM[R].HH.RH:=MEM[29996].HH.RH;MEM[R].HH.B0:=7;MAJORTAIL:=R;RCOUNT:=0;
WHILE MEM[MAJORTAIL].HH.RH>0 DO BEGIN MAJORTAIL:=MEM[MAJORTAIL].HH.RH;
RCOUNT:=RCOUNT+1;END;I:=HYPHENPASSED;HYF[I]:=0;{915:}MINORTAIL:=0;
MEM[R+1].HH.LH:=0;HYFNODE:=NEWCHARACTER(HF,HYFCHAR);
IF HYFNODE<>0 THEN BEGIN I:=I+1;C:=HU[I];HU[I]:=HYFCHAR;
BEGIN MEM[HYFNODE].HH.RH:=AVAIL;AVAIL:=HYFNODE;DYNUSED:=DYNUSED-1;END;
END;WHILE L<=I DO BEGIN L:=RECONSTITUTE(L,I,FONTBCHAR[HF],256)+1;
IF MEM[29996].HH.RH>0 THEN BEGIN IF MINORTAIL=0 THEN MEM[R+1].HH.LH:=MEM
[29996].HH.RH ELSE MEM[MINORTAIL].HH.RH:=MEM[29996].HH.RH;
MINORTAIL:=MEM[29996].HH.RH;
WHILE MEM[MINORTAIL].HH.RH>0 DO MINORTAIL:=MEM[MINORTAIL].HH.RH;END;END;
IF HYFNODE<>0 THEN BEGIN HU[I]:=C;L:=I;I:=I-1;END{:915};
{916:}MINORTAIL:=0;MEM[R+1].HH.RH:=0;CLOC:=0;
IF BCHARLABEL[HF]<>0 THEN BEGIN L:=L-1;C:=HU[L];CLOC:=L;HU[L]:=256;END;
WHILE L<J DO BEGIN REPEAT L:=RECONSTITUTE(L,HN,BCHAR,256)+1;
IF CLOC>0 THEN BEGIN HU[CLOC]:=C;CLOC:=0;END;
IF MEM[29996].HH.RH>0 THEN BEGIN IF MINORTAIL=0 THEN MEM[R+1].HH.RH:=MEM
[29996].HH.RH ELSE MEM[MINORTAIL].HH.RH:=MEM[29996].HH.RH;
MINORTAIL:=MEM[29996].HH.RH;
WHILE MEM[MINORTAIL].HH.RH>0 DO MINORTAIL:=MEM[MINORTAIL].HH.RH;END;
UNTIL L>=J;WHILE L>J DO{917:}BEGIN J:=RECONSTITUTE(J,HN,BCHAR,256)+1;
MEM[MAJORTAIL].HH.RH:=MEM[29996].HH.RH;
WHILE MEM[MAJORTAIL].HH.RH>0 DO BEGIN MAJORTAIL:=MEM[MAJORTAIL].HH.RH;
RCOUNT:=RCOUNT+1;END;END{:917};END{:916};
{918:}IF RCOUNT>127 THEN BEGIN MEM[S].HH.RH:=MEM[R].HH.RH;
MEM[R].HH.RH:=0;FLUSHNODELIS(R);END ELSE BEGIN MEM[S].HH.RH:=R;
MEM[R].HH.B1:=RCOUNT;END;S:=MAJORTAIL{:918};HYPHENPASSED:=J-1;
MEM[29996].HH.RH:=0;UNTIL NOT ODD(HYF[J-1]){:914};UNTIL J>HN;
MEM[S].HH.RH:=Q{:913};FLUSHLIST(INITLIST){:903};10:END;
{:895}{942:}{944:}FUNCTION NEWTRIEOP(D,N:SMALLNUMBER;
V:QUARTERWORD):QUARTERWORD;LABEL 10;VAR H:-TRIEOPSIZE..TRIEOPSIZE;
U:QUARTERWORD;L:0..TRIEOPSIZE;
BEGIN H:=ABS(N+313*D+361*V+1009*CURLANG)MOD(TRIEOPSIZE+TRIEOPSIZE)-
TRIEOPSIZE;WHILE TRUE DO BEGIN L:=TRIEOPHASH[H];
IF L=0 THEN BEGIN IF TRIEOPPTR=TRIEOPSIZE THEN OVERFLOW(950,TRIEOPSIZE);
U:=TRIEUSED[CURLANG];IF U=255 THEN OVERFLOW(951,255);
TRIEOPPTR:=TRIEOPPTR+1;U:=U+1;TRIEUSED[CURLANG]:=U;
HYFDISTANCE[TRIEOPPTR]:=D;HYFNUM[TRIEOPPTR]:=N;HYFNEXT[TRIEOPPTR]:=V;
TRIEOPLANG[TRIEOPPTR]:=CURLANG;TRIEOPHASH[H]:=TRIEOPPTR;
TRIEOPVAL[TRIEOPPTR]:=U;NEWTRIEOP:=U;GOTO 10;END;
IF(HYFDISTANCE[L]=D)AND(HYFNUM[L]=N)AND(HYFNEXT[L]=V)AND(TRIEOPLANG[L]=
CURLANG)THEN BEGIN NEWTRIEOP:=TRIEOPVAL[L];GOTO 10;END;
IF H>-TRIEOPSIZE THEN H:=H-1 ELSE H:=TRIEOPSIZE;END;10:END;
{:944}{948:}FUNCTION TRIENODE(P:TRIEPOINTER):TRIEPOINTER;LABEL 10;
VAR H:TRIEPOINTER;Q:TRIEPOINTER;
BEGIN H:=ABS(TRIEC[P]+1009*TRIEO[P]+2718*TRIEL[P]+3142*TRIER[P])MOD
TRIESIZE;WHILE TRUE DO BEGIN Q:=TRIEHASH[H];
IF Q=0 THEN BEGIN TRIEHASH[H]:=P;TRIENODE:=P;GOTO 10;END;
IF(TRIEC[Q]=TRIEC[P])AND(TRIEO[Q]=TRIEO[P])AND(TRIEL[Q]=TRIEL[P])AND(
TRIER[Q]=TRIER[P])THEN BEGIN TRIENODE:=Q;GOTO 10;END;
IF H>0 THEN H:=H-1 ELSE H:=TRIESIZE;END;10:END;
{:948}{949:}FUNCTION COMPRESSTRIE(P:TRIEPOINTER):TRIEPOINTER;
BEGIN IF P=0 THEN COMPRESSTRIE:=0 ELSE BEGIN TRIEL[P]:=COMPRESSTRIE(
TRIEL[P]);TRIER[P]:=COMPRESSTRIE(TRIER[P]);COMPRESSTRIE:=TRIENODE(P);
END;END;{:949}{953:}PROCEDURE FIRSTFIT(P:TRIEPOINTER);LABEL 45,40;
VAR H:TRIEPOINTER;Z:TRIEPOINTER;Q:TRIEPOINTER;C:ASCIICODE;
L,R:TRIEPOINTER;LL:1..256;BEGIN C:=TRIEC[P];Z:=TRIEMIN[C];
WHILE TRUE DO BEGIN H:=Z-C;
{954:}IF TRIEMAX<H+256 THEN BEGIN IF TRIESIZE<=H+256 THEN OVERFLOW(952,
TRIESIZE);REPEAT TRIEMAX:=TRIEMAX+1;TRIETAKEN[TRIEMAX]:=FALSE;
TRIE[TRIEMAX].RH:=TRIEMAX+1;TRIE[TRIEMAX].LH:=TRIEMAX-1;
UNTIL TRIEMAX=H+256;END{:954};IF TRIETAKEN[H]THEN GOTO 45;
{955:}Q:=TRIER[P];
WHILE Q>0 DO BEGIN IF TRIE[H+TRIEC[Q]].RH=0 THEN GOTO 45;Q:=TRIER[Q];
END;GOTO 40{:955};45:Z:=TRIE[Z].RH;END;40:{956:}TRIETAKEN[H]:=TRUE;
TRIEHASH[P]:=H;Q:=P;REPEAT Z:=H+TRIEC[Q];L:=TRIE[Z].LH;R:=TRIE[Z].RH;
TRIE[R].LH:=L;TRIE[L].RH:=R;TRIE[Z].RH:=0;
IF L<256 THEN BEGIN IF Z<256 THEN LL:=Z ELSE LL:=256;
REPEAT TRIEMIN[L]:=R;L:=L+1;UNTIL L=LL;END;Q:=TRIER[Q];UNTIL Q=0{:956};
END;{:953}{957:}PROCEDURE TRIEPACK(P:TRIEPOINTER);VAR Q:TRIEPOINTER;
BEGIN REPEAT Q:=TRIEL[P];
IF(Q>0)AND(TRIEHASH[Q]=0)THEN BEGIN FIRSTFIT(Q);TRIEPACK(Q);END;
P:=TRIER[P];UNTIL P=0;END;{:957}{959:}PROCEDURE TRIEFIX(P:TRIEPOINTER);
VAR Q:TRIEPOINTER;C:ASCIICODE;Z:TRIEPOINTER;BEGIN Z:=TRIEHASH[P];
REPEAT Q:=TRIEL[P];C:=TRIEC[P];TRIE[Z+C].RH:=TRIEHASH[Q];
TRIE[Z+C].B1:=C;TRIE[Z+C].B0:=TRIEO[P];IF Q>0 THEN TRIEFIX(Q);
P:=TRIER[P];UNTIL P=0;END;{:959}{960:}PROCEDURE NEWPATTERNS;LABEL 30,31;
VAR K,L:0..64;DIGITSENSED:BOOLEAN;V:QUARTERWORD;P,Q:TRIEPOINTER;
FIRSTCHILD:BOOLEAN;C:ASCIICODE;
BEGIN IF TRIENOTREADY THEN BEGIN IF EQTB[5313].INT<=0 THEN CURLANG:=0
ELSE IF EQTB[5313].INT>255 THEN CURLANG:=0 ELSE CURLANG:=EQTB[5313].INT;
SCANLEFTBRAC;{961:}K:=0;HYF[0]:=0;DIGITSENSED:=FALSE;
WHILE TRUE DO BEGIN GETXTOKEN;
CASE CURCMD OF 11,12:{962:}IF DIGITSENSED OR(CURCHR<48)OR(CURCHR>57)THEN
BEGIN IF CURCHR=46 THEN CURCHR:=0 ELSE BEGIN CURCHR:=EQTB[4239+CURCHR].
HH.RH;IF CURCHR=0 THEN BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(958);END;BEGIN HELPPTR:=1;HELPLINE[0]:=957;END;ERROR;END;END;
IF K<63 THEN BEGIN K:=K+1;HC[K]:=CURCHR;HYF[K]:=0;DIGITSENSED:=FALSE;
END;END ELSE IF K<63 THEN BEGIN HYF[K]:=CURCHR-48;DIGITSENSED:=TRUE;
END{:962};
10,2:BEGIN IF K>0 THEN{963:}BEGIN{965:}IF HC[1]=0 THEN HYF[0]:=0;
IF HC[K]=0 THEN HYF[K]:=0;L:=K;V:=0;
WHILE TRUE DO BEGIN IF HYF[L]<>0 THEN V:=NEWTRIEOP(K-L,HYF[L],V);
IF L>0 THEN L:=L-1 ELSE GOTO 31;END;31:{:965};Q:=0;HC[0]:=CURLANG;
WHILE L<=K DO BEGIN C:=HC[L];L:=L+1;P:=TRIEL[Q];FIRSTCHILD:=TRUE;
WHILE(P>0)AND(C>TRIEC[P])DO BEGIN Q:=P;P:=TRIER[Q];FIRSTCHILD:=FALSE;
END;
IF(P=0)OR(C<TRIEC[P])THEN{964:}BEGIN IF TRIEPTR=TRIESIZE THEN OVERFLOW(
952,TRIESIZE);TRIEPTR:=TRIEPTR+1;TRIER[TRIEPTR]:=P;P:=TRIEPTR;
TRIEL[P]:=0;IF FIRSTCHILD THEN TRIEL[Q]:=P ELSE TRIER[Q]:=P;TRIEC[P]:=C;
TRIEO[P]:=0;END{:964};Q:=P;END;
IF TRIEO[Q]<>0 THEN BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(959);END;BEGIN HELPPTR:=1;HELPLINE[0]:=957;END;ERROR;END;
TRIEO[Q]:=V;END{:963};IF CURCMD=2 THEN GOTO 30;K:=0;HYF[0]:=0;
DIGITSENSED:=FALSE;END;ELSE BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(956);END;PRINTESC(954);BEGIN HELPPTR:=1;
HELPLINE[0]:=957;END;ERROR;END END;END;30:{:961};
END ELSE BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(953);END;
PRINTESC(954);BEGIN HELPPTR:=1;HELPLINE[0]:=955;END;ERROR;
MEM[29988].HH.RH:=SCANTOKS(FALSE,FALSE);FLUSHLIST(DEFREF);END;END;
{:960}{966:}PROCEDURE INITTRIE;VAR P:TRIEPOINTER;J,K,T:INTEGER;
R,S:TRIEPOINTER;H:TWOHALVES;BEGIN{952:}{945:}OPSTART[0]:=-0;
FOR J:=1 TO 255 DO OPSTART[J]:=OPSTART[J-1]+TRIEUSED[J-1];
FOR J:=1 TO TRIEOPPTR DO TRIEOPHASH[J]:=OPSTART[TRIEOPLANG[J]]+TRIEOPVAL
[J];
FOR J:=1 TO TRIEOPPTR DO WHILE TRIEOPHASH[J]>J DO BEGIN K:=TRIEOPHASH[J]
;T:=HYFDISTANCE[K];HYFDISTANCE[K]:=HYFDISTANCE[J];HYFDISTANCE[J]:=T;
T:=HYFNUM[K];HYFNUM[K]:=HYFNUM[J];HYFNUM[J]:=T;T:=HYFNEXT[K];
HYFNEXT[K]:=HYFNEXT[J];HYFNEXT[J]:=T;TRIEOPHASH[J]:=TRIEOPHASH[K];
TRIEOPHASH[K]:=K;END{:945};FOR P:=0 TO TRIESIZE DO TRIEHASH[P]:=0;
TRIEL[0]:=COMPRESSTRIE(TRIEL[0]);FOR P:=0 TO TRIEPTR DO TRIEHASH[P]:=0;
FOR P:=0 TO 255 DO TRIEMIN[P]:=P+1;TRIE[0].RH:=1;TRIEMAX:=0{:952};
IF TRIEL[0]<>0 THEN BEGIN FIRSTFIT(TRIEL[0]);TRIEPACK(TRIEL[0]);END;
{958:}H.RH:=0;H.B0:=0;H.B1:=0;
IF TRIEL[0]=0 THEN BEGIN FOR R:=0 TO 256 DO TRIE[R]:=H;TRIEMAX:=256;
END ELSE BEGIN TRIEFIX(TRIEL[0]);R:=0;REPEAT S:=TRIE[R].RH;TRIE[R]:=H;
R:=S;UNTIL R>TRIEMAX;END;TRIE[0].B1:=63;{:958};TRIENOTREADY:=FALSE;END;
{:966}{:942}PROCEDURE LINEBREAK(FINALWIDOWPE:INTEGER);
LABEL 30,31,32,33,34,35,22;VAR{862:}AUTOBREAKING:BOOLEAN;
NONPRUNABLEP:HALFWORD;PREVP:HALFWORD;Q,R,S,PREVS:HALFWORD;
F:INTERNALFONT;{:862}{893:}J:SMALLNUMBER;C:0..255;
{:893}BEGIN PACKBEGINLIN:=CURLIST.MLFIELD;
{816:}MEM[29997].HH.RH:=MEM[CURLIST.HEADFIELD].HH.RH;
IF(CURLIST.TAILFIELD>=HIMEMMIN)THEN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=
NEWPENALTY(10000);CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;
END ELSE IF MEM[CURLIST.TAILFIELD].HH.B0<>10 THEN BEGIN MEM[CURLIST.
TAILFIELD].HH.RH:=NEWPENALTY(10000);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;
END ELSE BEGIN MEM[CURLIST.TAILFIELD].HH.B0:=12;
DELETEGLUERE(MEM[CURLIST.TAILFIELD+1].HH.LH);
FLUSHNODELIS(MEM[CURLIST.TAILFIELD+1].HH.RH);
MEM[CURLIST.TAILFIELD+1].INT:=10000;END;NONPRUNABLEP:=CURLIST.TAILFIELD;
MEM[CURLIST.TAILFIELD].HH.RH:=NEWPARAMGLUE(14);
INITCURLANG:=CURLIST.PGFIELD MOD 65536;
INITLHYF:=CURLIST.PGFIELD DIV 4194304;
INITRHYF:=(CURLIST.PGFIELD DIV 65536)MOD 64;POPNEST;
{:816}{827:}NOSHRINKERRO:=TRUE;
IF(MEM[EQTB[2889].HH.RH].HH.B1<>0)AND(MEM[EQTB[2889].HH.RH+3].INT<>0)
THEN BEGIN EQTB[2889].HH.RH:=FINITESHRINK(EQTB[2889].HH.RH);END;
IF(MEM[EQTB[2890].HH.RH].HH.B1<>0)AND(MEM[EQTB[2890].HH.RH+3].INT<>0)
THEN BEGIN EQTB[2890].HH.RH:=FINITESHRINK(EQTB[2890].HH.RH);END;
Q:=EQTB[2889].HH.RH;R:=EQTB[2890].HH.RH;
BACKGROUND[1]:=MEM[Q+1].INT+MEM[R+1].INT;BACKGROUND[2]:=0;
BACKGROUND[3]:=0;BACKGROUND[4]:=0;BACKGROUND[5]:=0;
BACKGROUND[2+MEM[Q].HH.B0]:=MEM[Q+2].INT;
BACKGROUND[2+MEM[R].HH.B0]:=BACKGROUND[2+MEM[R].HH.B0]+MEM[R+2].INT;
BACKGROUND[6]:=MEM[Q+3].INT+MEM[R+3].INT;
{:827}{834:}MINIMUMDEMER:=1073741823;MINIMALDEMER[3]:=1073741823;
MINIMALDEMER[2]:=1073741823;MINIMALDEMER[1]:=1073741823;
MINIMALDEMER[0]:=1073741823;
{:834}{848:}IF EQTB[3412].HH.RH=0 THEN IF EQTB[5847].INT=0 THEN BEGIN
LASTSPECIALL:=0;SECONDWIDTH:=EQTB[5833].INT;SECONDINDENT:=0;
END ELSE{849:}BEGIN LASTSPECIALL:=ABS(EQTB[5304].INT);
IF EQTB[5304].INT<0 THEN BEGIN FIRSTWIDTH:=EQTB[5833].INT-ABS(EQTB[5847]
.INT);
IF EQTB[5847].INT>=0 THEN FIRSTINDENT:=EQTB[5847].INT ELSE FIRSTINDENT:=
0;SECONDWIDTH:=EQTB[5833].INT;SECONDINDENT:=0;
END ELSE BEGIN FIRSTWIDTH:=EQTB[5833].INT;FIRSTINDENT:=0;
SECONDWIDTH:=EQTB[5833].INT-ABS(EQTB[5847].INT);
IF EQTB[5847].INT>=0 THEN SECONDINDENT:=EQTB[5847].INT ELSE SECONDINDENT
:=0;END;END{:849}ELSE BEGIN LASTSPECIALL:=MEM[EQTB[3412].HH.RH].HH.LH-1;
SECONDWIDTH:=MEM[EQTB[3412].HH.RH+2*(LASTSPECIALL+1)].INT;
SECONDINDENT:=MEM[EQTB[3412].HH.RH+2*LASTSPECIALL+1].INT;END;
IF EQTB[5282].INT=0 THEN EASYLINE:=LASTSPECIALL ELSE EASYLINE:=65535
{:848};{863:}THRESHOLD:=EQTB[5263].INT;
IF THRESHOLD>=0 THEN BEGIN IF EQTB[5295].INT>0 THEN BEGIN BEGINDIAGNOS;
PRINTNL(934);END;SECONDPASS:=FALSE;FINALPASS:=FALSE;
END ELSE BEGIN THRESHOLD:=EQTB[5264].INT;SECONDPASS:=TRUE;
FINALPASS:=(EQTB[5850].INT<=0);IF EQTB[5295].INT>0 THEN BEGINDIAGNOS;
END;WHILE TRUE DO BEGIN IF THRESHOLD>10000 THEN THRESHOLD:=10000;
IF SECONDPASS THEN{891:}BEGIN IF TRIENOTREADY THEN INITTRIE;
CURLANG:=INITCURLANG;LHYF:=INITLHYF;RHYF:=INITRHYF;END{:891};
{864:}Q:=GETNODE(3);MEM[Q].HH.B0:=0;MEM[Q].HH.B1:=2;MEM[Q].HH.RH:=29993;
MEM[Q+1].HH.RH:=0;MEM[Q+1].HH.LH:=CURLIST.PGFIELD+1;MEM[Q+2].INT:=0;
MEM[29993].HH.RH:=Q;ACTIVEWIDTH[1]:=BACKGROUND[1];
ACTIVEWIDTH[2]:=BACKGROUND[2];ACTIVEWIDTH[3]:=BACKGROUND[3];
ACTIVEWIDTH[4]:=BACKGROUND[4];ACTIVEWIDTH[5]:=BACKGROUND[5];
ACTIVEWIDTH[6]:=BACKGROUND[6];PASSIVE:=0;PRINTEDNODE:=29997;
PASSNUMBER:=0;FONTINSHORTD:=0{:864};CURP:=MEM[29997].HH.RH;
AUTOBREAKING:=TRUE;PREVP:=CURP;
WHILE(CURP<>0)AND(MEM[29993].HH.RH<>29993)DO{866:}BEGIN IF(CURP>=
HIMEMMIN)THEN{867:}BEGIN PREVP:=CURP;REPEAT F:=MEM[CURP].HH.B0;
ACTIVEWIDTH[1]:=ACTIVEWIDTH[1]+FONTINFO[WIDTHBASE[F]+FONTINFO[CHARBASE[F
]+MEM[CURP].HH.B1].QQQQ.B0].INT;CURP:=MEM[CURP].HH.RH;
UNTIL NOT(CURP>=HIMEMMIN);END{:867};
CASE MEM[CURP].HH.B0 OF 0,1,2:ACTIVEWIDTH[1]:=ACTIVEWIDTH[1]+MEM[CURP+1]
.INT;
8:{1362:}IF MEM[CURP].HH.B1=4 THEN BEGIN CURLANG:=MEM[CURP+1].HH.RH;
LHYF:=MEM[CURP+1].HH.B0;RHYF:=MEM[CURP+1].HH.B1;END{:1362};
10:BEGIN{868:}IF AUTOBREAKING THEN BEGIN IF(PREVP>=HIMEMMIN)THEN
TRYBREAK(0,0)ELSE IF(MEM[PREVP].HH.B0<9)THEN TRYBREAK(0,0)ELSE IF(MEM[
PREVP].HH.B0=11)AND(MEM[PREVP].HH.B1<>1)THEN TRYBREAK(0,0);END;
IF(MEM[MEM[CURP+1].HH.LH].HH.B1<>0)AND(MEM[MEM[CURP+1].HH.LH+3].INT<>0)
THEN BEGIN MEM[CURP+1].HH.LH:=FINITESHRINK(MEM[CURP+1].HH.LH);END;
Q:=MEM[CURP+1].HH.LH;ACTIVEWIDTH[1]:=ACTIVEWIDTH[1]+MEM[Q+1].INT;
ACTIVEWIDTH[2+MEM[Q].HH.B0]:=ACTIVEWIDTH[2+MEM[Q].HH.B0]+MEM[Q+2].INT;
ACTIVEWIDTH[6]:=ACTIVEWIDTH[6]+MEM[Q+3].INT{:868};
IF SECONDPASS AND AUTOBREAKING THEN{894:}BEGIN PREVS:=CURP;
S:=MEM[PREVS].HH.RH;
IF S<>0 THEN BEGIN{896:}WHILE TRUE DO BEGIN IF(S>=HIMEMMIN)THEN BEGIN C
:=MEM[S].HH.B1;HF:=MEM[S].HH.B0;
END ELSE IF MEM[S].HH.B0=6 THEN IF MEM[S+1].HH.RH=0 THEN GOTO 22 ELSE
BEGIN Q:=MEM[S+1].HH.RH;C:=MEM[Q].HH.B1;HF:=MEM[Q].HH.B0;
END ELSE IF(MEM[S].HH.B0=11)AND(MEM[S].HH.B1=0)THEN GOTO 22 ELSE IF MEM[
S].HH.B0=8 THEN BEGIN{1363:}IF MEM[S].HH.B1=4 THEN BEGIN CURLANG:=MEM[S
+1].HH.RH;LHYF:=MEM[S+1].HH.B0;RHYF:=MEM[S+1].HH.B1;END{:1363};GOTO 22;
END ELSE GOTO 31;
IF EQTB[4239+C].HH.RH<>0 THEN IF(EQTB[4239+C].HH.RH=C)OR(EQTB[5301].INT>
0)THEN GOTO 32 ELSE GOTO 31;22:PREVS:=S;S:=MEM[PREVS].HH.RH;END;
32:HYFCHAR:=HYPHENCHAR[HF];IF HYFCHAR<0 THEN GOTO 31;
IF HYFCHAR>255 THEN GOTO 31;HA:=PREVS{:896};
IF LHYF+RHYF>63 THEN GOTO 31;{897:}HN:=0;
WHILE TRUE DO BEGIN IF(S>=HIMEMMIN)THEN BEGIN IF MEM[S].HH.B0<>HF THEN
GOTO 33;HYFBCHAR:=MEM[S].HH.B1;C:=HYFBCHAR;
IF EQTB[4239+C].HH.RH=0 THEN GOTO 33;IF HN=63 THEN GOTO 33;HB:=S;
HN:=HN+1;HU[HN]:=C;HC[HN]:=EQTB[4239+C].HH.RH;HYFBCHAR:=256;
END ELSE IF MEM[S].HH.B0=6 THEN{898:}BEGIN IF MEM[S+1].HH.B0<>HF THEN
GOTO 33;J:=HN;Q:=MEM[S+1].HH.RH;IF Q>0 THEN HYFBCHAR:=MEM[Q].HH.B1;
WHILE Q>0 DO BEGIN C:=MEM[Q].HH.B1;IF EQTB[4239+C].HH.RH=0 THEN GOTO 33;
IF J=63 THEN GOTO 33;J:=J+1;HU[J]:=C;HC[J]:=EQTB[4239+C].HH.RH;
Q:=MEM[Q].HH.RH;END;HB:=S;HN:=J;
IF ODD(MEM[S].HH.B1)THEN HYFBCHAR:=FONTBCHAR[HF]ELSE HYFBCHAR:=256;
END{:898}ELSE IF(MEM[S].HH.B0=11)AND(MEM[S].HH.B1=0)THEN BEGIN HB:=S;
HYFBCHAR:=FONTBCHAR[HF];END ELSE GOTO 33;S:=MEM[S].HH.RH;END;33:{:897};
{899:}IF HN<LHYF+RHYF THEN GOTO 31;
WHILE TRUE DO BEGIN IF NOT((S>=HIMEMMIN))THEN CASE MEM[S].HH.B0 OF 6:;
11:IF MEM[S].HH.B1<>0 THEN GOTO 34;8,10,12,3,5,4:GOTO 34;
ELSE GOTO 31 END;S:=MEM[S].HH.RH;END;34:{:899};HYPHENATE;END;
31:END{:894};END;
11:IF MEM[CURP].HH.B1=1 THEN BEGIN IF NOT(MEM[CURP].HH.RH>=HIMEMMIN)AND
AUTOBREAKING THEN IF MEM[MEM[CURP].HH.RH].HH.B0=10 THEN TRYBREAK(0,0);
ACTIVEWIDTH[1]:=ACTIVEWIDTH[1]+MEM[CURP+1].INT;
END ELSE ACTIVEWIDTH[1]:=ACTIVEWIDTH[1]+MEM[CURP+1].INT;
6:BEGIN F:=MEM[CURP+1].HH.B0;
ACTIVEWIDTH[1]:=ACTIVEWIDTH[1]+FONTINFO[WIDTHBASE[F]+FONTINFO[CHARBASE[F
]+MEM[CURP+1].HH.B1].QQQQ.B0].INT;END;
7:{869:}BEGIN S:=MEM[CURP+1].HH.LH;DISCWIDTH:=0;
IF S=0 THEN TRYBREAK(EQTB[5267].INT,1)ELSE BEGIN REPEAT{870:}IF(S>=
HIMEMMIN)THEN BEGIN F:=MEM[S].HH.B0;
DISCWIDTH:=DISCWIDTH+FONTINFO[WIDTHBASE[F]+FONTINFO[CHARBASE[F]+MEM[S].
HH.B1].QQQQ.B0].INT;
END ELSE CASE MEM[S].HH.B0 OF 6:BEGIN F:=MEM[S+1].HH.B0;
DISCWIDTH:=DISCWIDTH+FONTINFO[WIDTHBASE[F]+FONTINFO[CHARBASE[F]+MEM[S+1]
.HH.B1].QQQQ.B0].INT;END;0,1,2,11:DISCWIDTH:=DISCWIDTH+MEM[S+1].INT;
ELSE CONFUSION(938)END{:870};S:=MEM[S].HH.RH;UNTIL S=0;
ACTIVEWIDTH[1]:=ACTIVEWIDTH[1]+DISCWIDTH;TRYBREAK(EQTB[5266].INT,1);
ACTIVEWIDTH[1]:=ACTIVEWIDTH[1]-DISCWIDTH;END;R:=MEM[CURP].HH.B1;
S:=MEM[CURP].HH.RH;
WHILE R>0 DO BEGIN{871:}IF(S>=HIMEMMIN)THEN BEGIN F:=MEM[S].HH.B0;
ACTIVEWIDTH[1]:=ACTIVEWIDTH[1]+FONTINFO[WIDTHBASE[F]+FONTINFO[CHARBASE[F
]+MEM[S].HH.B1].QQQQ.B0].INT;
END ELSE CASE MEM[S].HH.B0 OF 6:BEGIN F:=MEM[S+1].HH.B0;
ACTIVEWIDTH[1]:=ACTIVEWIDTH[1]+FONTINFO[WIDTHBASE[F]+FONTINFO[CHARBASE[F
]+MEM[S+1].HH.B1].QQQQ.B0].INT;END;
0,1,2,11:ACTIVEWIDTH[1]:=ACTIVEWIDTH[1]+MEM[S+1].INT;
ELSE CONFUSION(939)END{:871};R:=R-1;S:=MEM[S].HH.RH;END;PREVP:=CURP;
CURP:=S;GOTO 35;END{:869};9:BEGIN AUTOBREAKING:=(MEM[CURP].HH.B1=1);
BEGIN IF NOT(MEM[CURP].HH.RH>=HIMEMMIN)AND AUTOBREAKING THEN IF MEM[MEM[
CURP].HH.RH].HH.B0=10 THEN TRYBREAK(0,0);
ACTIVEWIDTH[1]:=ACTIVEWIDTH[1]+MEM[CURP+1].INT;END;END;
12:TRYBREAK(MEM[CURP+1].INT,0);4,3,5:;ELSE CONFUSION(937)END;
PREVP:=CURP;CURP:=MEM[CURP].HH.RH;35:END{:866};
IF CURP=0 THEN{873:}BEGIN TRYBREAK(-10000,1);
IF MEM[29993].HH.RH<>29993 THEN BEGIN{874:}R:=MEM[29993].HH.RH;
FEWESTDEMERI:=1073741823;
REPEAT IF MEM[R].HH.B0<>2 THEN IF MEM[R+2].INT<FEWESTDEMERI THEN BEGIN
FEWESTDEMERI:=MEM[R+2].INT;BESTBET:=R;END;R:=MEM[R].HH.RH;UNTIL R=29993;
BESTLINE:=MEM[BESTBET+1].HH.LH{:874};IF EQTB[5282].INT=0 THEN GOTO 30;
{875:}BEGIN R:=MEM[29993].HH.RH;ACTUALLOOSEN:=0;
REPEAT IF MEM[R].HH.B0<>2 THEN BEGIN LINEDIFF:=MEM[R+1].HH.LH-BESTLINE;
IF((LINEDIFF<ACTUALLOOSEN)AND(EQTB[5282].INT<=LINEDIFF))OR((LINEDIFF>
ACTUALLOOSEN)AND(EQTB[5282].INT>=LINEDIFF))THEN BEGIN BESTBET:=R;
ACTUALLOOSEN:=LINEDIFF;FEWESTDEMERI:=MEM[R+2].INT;
END ELSE IF(LINEDIFF=ACTUALLOOSEN)AND(MEM[R+2].INT<FEWESTDEMERI)THEN
BEGIN BESTBET:=R;FEWESTDEMERI:=MEM[R+2].INT;END;END;R:=MEM[R].HH.RH;
UNTIL R=29993;BESTLINE:=MEM[BESTBET+1].HH.LH;END{:875};
IF(ACTUALLOOSEN=EQTB[5282].INT)OR FINALPASS THEN GOTO 30;END;END{:873};
{865:}Q:=MEM[29993].HH.RH;WHILE Q<>29993 DO BEGIN CURP:=MEM[Q].HH.RH;
IF MEM[Q].HH.B0=2 THEN FREENODE(Q,7)ELSE FREENODE(Q,3);Q:=CURP;END;
Q:=PASSIVE;WHILE Q<>0 DO BEGIN CURP:=MEM[Q].HH.RH;FREENODE(Q,2);Q:=CURP;
END{:865};
IF NOT SECONDPASS THEN BEGIN IF EQTB[5295].INT>0 THEN PRINTNL(935);
THRESHOLD:=EQTB[5264].INT;SECONDPASS:=TRUE;
FINALPASS:=(EQTB[5850].INT<=0);
END ELSE BEGIN IF EQTB[5295].INT>0 THEN PRINTNL(936);
BACKGROUND[2]:=BACKGROUND[2]+EQTB[5850].INT;FINALPASS:=TRUE;END;END;
30:IF EQTB[5295].INT>0 THEN BEGIN ENDDIAGNOSTI(TRUE);NORMALIZESEL;END;
{:863};{876:}POSTLINEBREA(FINALWIDOWPE,NONPRUNABLEP){:876};
{865:}Q:=MEM[29993].HH.RH;WHILE Q<>29993 DO BEGIN CURP:=MEM[Q].HH.RH;
IF MEM[Q].HH.B0=2 THEN FREENODE(Q,7)ELSE FREENODE(Q,3);Q:=CURP;END;
Q:=PASSIVE;WHILE Q<>0 DO BEGIN CURP:=MEM[Q].HH.RH;FREENODE(Q,2);Q:=CURP;
END{:865};PACKBEGINLIN:=0;END;{:815}{934:}PROCEDURE NEWHYPHEXCEP;
LABEL 21,10,40,45;VAR N:0..64;J:0..64;H:HYPHPOINTER;K:STRNUMBER;
P:HALFWORD;Q:HALFWORD;S,T:STRNUMBER;U,V:POOLPOINTER;BEGIN SCANLEFTBRAC;
IF EQTB[5313].INT<=0 THEN CURLANG:=0 ELSE IF EQTB[5313].INT>255 THEN
CURLANG:=0 ELSE CURLANG:=EQTB[5313].INT;{935:}N:=0;P:=0;
WHILE TRUE DO BEGIN GETXTOKEN;
21:CASE CURCMD OF 11,12,68:{937:}IF CURCHR=45 THEN{938:}BEGIN IF N<63
THEN BEGIN Q:=GETAVAIL;MEM[Q].HH.RH:=P;MEM[Q].HH.LH:=N;P:=Q;END;
END{:938}ELSE BEGIN IF EQTB[4239+CURCHR].HH.RH=0 THEN BEGIN BEGIN IF
INTERACTION=3 THEN;PRINTNL(262);PRINT(946);END;BEGIN HELPPTR:=2;
HELPLINE[1]:=947;HELPLINE[0]:=948;END;ERROR;
END ELSE IF N<63 THEN BEGIN N:=N+1;HC[N]:=EQTB[4239+CURCHR].HH.RH;END;
END{:937};16:BEGIN SCANCHARNUM;CURCHR:=CURVAL;CURCMD:=68;GOTO 21;END;
10,2:BEGIN IF N>1 THEN{939:}BEGIN N:=N+1;HC[N]:=CURLANG;
BEGIN IF POOLPTR+N>POOLSIZE THEN OVERFLOW(257,POOLSIZE-INITPOOLPTR);END;
H:=0;FOR J:=1 TO N DO BEGIN H:=(H+H+HC[J])MOD 307;
BEGIN STRPOOL[POOLPTR]:=HC[J];POOLPTR:=POOLPTR+1;END;END;S:=MAKESTRING;
{940:}IF HYPHCOUNT=307 THEN OVERFLOW(949,307);HYPHCOUNT:=HYPHCOUNT+1;
WHILE HYPHWORD[H]<>0 DO BEGIN{941:}K:=HYPHWORD[H];
IF(STRSTART[K+1]-STRSTART[K])<(STRSTART[S+1]-STRSTART[S])THEN GOTO 40;
IF(STRSTART[K+1]-STRSTART[K])>(STRSTART[S+1]-STRSTART[S])THEN GOTO 45;
U:=STRSTART[K];V:=STRSTART[S];
REPEAT IF STRPOOL[U]<STRPOOL[V]THEN GOTO 40;
IF STRPOOL[U]>STRPOOL[V]THEN GOTO 45;U:=U+1;V:=V+1;
UNTIL U=STRSTART[K+1];40:Q:=HYPHLIST[H];HYPHLIST[H]:=P;P:=Q;
T:=HYPHWORD[H];HYPHWORD[H]:=S;S:=T;45:{:941};
IF H>0 THEN H:=H-1 ELSE H:=307;END;HYPHWORD[H]:=S;HYPHLIST[H]:=P{:940};
END{:939};IF CURCMD=2 THEN GOTO 10;N:=0;P:=0;END;
ELSE{936:}BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(680);END;
PRINTESC(942);PRINT(943);BEGIN HELPPTR:=2;HELPLINE[1]:=944;
HELPLINE[0]:=945;END;ERROR;END{:936}END;END{:935};10:END;
{:934}{968:}FUNCTION PRUNEPAGETOP(P:HALFWORD):HALFWORD;
VAR PREVP:HALFWORD;Q:HALFWORD;BEGIN PREVP:=29997;MEM[29997].HH.RH:=P;
WHILE P<>0 DO CASE MEM[P].HH.B0 OF 0,1,2:{969:}BEGIN Q:=NEWSKIPPARAM(10)
;MEM[PREVP].HH.RH:=Q;MEM[Q].HH.RH:=P;
IF MEM[TEMPPTR+1].INT>MEM[P+3].INT THEN MEM[TEMPPTR+1].INT:=MEM[TEMPPTR
+1].INT-MEM[P+3].INT ELSE MEM[TEMPPTR+1].INT:=0;P:=0;END{:969};
8,4,3:BEGIN PREVP:=P;P:=MEM[PREVP].HH.RH;END;10,11,12:BEGIN Q:=P;
P:=MEM[Q].HH.RH;MEM[Q].HH.RH:=0;MEM[PREVP].HH.RH:=P;FLUSHNODELIS(Q);END;
ELSE CONFUSION(960)END;PRUNEPAGETOP:=MEM[29997].HH.RH;END;
{:968}{970:}FUNCTION VERTBREAK(P:HALFWORD;H,D:SCALED):HALFWORD;
LABEL 30,45,90;VAR PREVP:HALFWORD;Q,R:HALFWORD;PI:INTEGER;B:INTEGER;
LEASTCOST:INTEGER;BESTPLACE:HALFWORD;PREVDP:SCALED;T:SMALLNUMBER;
BEGIN PREVP:=P;LEASTCOST:=1073741823;ACTIVEWIDTH[1]:=0;
ACTIVEWIDTH[2]:=0;ACTIVEWIDTH[3]:=0;ACTIVEWIDTH[4]:=0;ACTIVEWIDTH[5]:=0;
ACTIVEWIDTH[6]:=0;PREVDP:=0;
WHILE TRUE DO BEGIN{972:}IF P=0 THEN PI:=-10000 ELSE{973:}CASE MEM[P].HH
.B0 OF 0,1,2:BEGIN ACTIVEWIDTH[1]:=ACTIVEWIDTH[1]+PREVDP+MEM[P+3].INT;
PREVDP:=MEM[P+2].INT;GOTO 45;END;8:{1365:}GOTO 45{:1365};
10:IF(MEM[PREVP].HH.B0<9)THEN PI:=0 ELSE GOTO 90;
11:BEGIN IF MEM[P].HH.RH=0 THEN T:=12 ELSE T:=MEM[MEM[P].HH.RH].HH.B0;
IF T=10 THEN PI:=0 ELSE GOTO 90;END;12:PI:=MEM[P+1].INT;4,3:GOTO 45;
ELSE CONFUSION(961)END{:973};
{974:}IF PI<10000 THEN BEGIN{975:}IF ACTIVEWIDTH[1]<H THEN IF(
ACTIVEWIDTH[3]<>0)OR(ACTIVEWIDTH[4]<>0)OR(ACTIVEWIDTH[5]<>0)THEN B:=0
ELSE B:=BADNESS(H-ACTIVEWIDTH[1],ACTIVEWIDTH[2])ELSE IF ACTIVEWIDTH[1]-H
>ACTIVEWIDTH[6]THEN B:=1073741823 ELSE B:=BADNESS(ACTIVEWIDTH[1]-H,
ACTIVEWIDTH[6]){:975};
IF B<1073741823 THEN IF PI<=-10000 THEN B:=PI ELSE IF B<10000 THEN B:=B+
PI ELSE B:=100000;IF B<=LEASTCOST THEN BEGIN BESTPLACE:=P;LEASTCOST:=B;
BESTHEIGHTPL:=ACTIVEWIDTH[1]+PREVDP;END;
IF(B=1073741823)OR(PI<=-10000)THEN GOTO 30;END{:974};
IF(MEM[P].HH.B0<10)OR(MEM[P].HH.B0>11)THEN GOTO 45;
90:{976:}IF MEM[P].HH.B0=11 THEN Q:=P ELSE BEGIN Q:=MEM[P+1].HH.LH;
ACTIVEWIDTH[2+MEM[Q].HH.B0]:=ACTIVEWIDTH[2+MEM[Q].HH.B0]+MEM[Q+2].INT;
ACTIVEWIDTH[6]:=ACTIVEWIDTH[6]+MEM[Q+3].INT;
IF(MEM[Q].HH.B1<>0)AND(MEM[Q+3].INT<>0)THEN BEGIN BEGIN IF INTERACTION=3
THEN;PRINTNL(262);PRINT(962);END;BEGIN HELPPTR:=4;HELPLINE[3]:=963;
HELPLINE[2]:=964;HELPLINE[1]:=965;HELPLINE[0]:=923;END;ERROR;
R:=NEWSPEC(Q);MEM[R].HH.B1:=0;DELETEGLUERE(Q);MEM[P+1].HH.LH:=R;Q:=R;
END;END;ACTIVEWIDTH[1]:=ACTIVEWIDTH[1]+PREVDP+MEM[Q+1].INT;
PREVDP:=0{:976};
45:IF PREVDP>D THEN BEGIN ACTIVEWIDTH[1]:=ACTIVEWIDTH[1]+PREVDP-D;
PREVDP:=D;END;{:972};PREVP:=P;P:=MEM[PREVP].HH.RH;END;
30:VERTBREAK:=BESTPLACE;END;{:970}{977:}FUNCTION VSPLIT(N:EIGHTBITS;
H:SCALED):HALFWORD;LABEL 10,30;VAR V:HALFWORD;P:HALFWORD;Q:HALFWORD;
BEGIN V:=EQTB[3678+N].HH.RH;
IF CURMARK[3]<>0 THEN BEGIN DELETETOKENR(CURMARK[3]);CURMARK[3]:=0;
DELETETOKENR(CURMARK[4]);CURMARK[4]:=0;END;
{978:}IF V=0 THEN BEGIN VSPLIT:=0;GOTO 10;END;
IF MEM[V].HH.B0<>1 THEN BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(338);END;PRINTESC(966);PRINT(967);PRINTESC(968);BEGIN HELPPTR:=2;
HELPLINE[1]:=969;HELPLINE[0]:=970;END;ERROR;VSPLIT:=0;GOTO 10;END{:978};
Q:=VERTBREAK(MEM[V+5].HH.RH,H,EQTB[5836].INT);{979:}P:=MEM[V+5].HH.RH;
IF P=Q THEN MEM[V+5].HH.RH:=0 ELSE WHILE TRUE DO BEGIN IF MEM[P].HH.B0=4
THEN IF CURMARK[3]=0 THEN BEGIN CURMARK[3]:=MEM[P+1].INT;
CURMARK[4]:=CURMARK[3];MEM[CURMARK[3]].HH.LH:=MEM[CURMARK[3]].HH.LH+2;
END ELSE BEGIN DELETETOKENR(CURMARK[4]);CURMARK[4]:=MEM[P+1].INT;
MEM[CURMARK[4]].HH.LH:=MEM[CURMARK[4]].HH.LH+1;END;
IF MEM[P].HH.RH=Q THEN BEGIN MEM[P].HH.RH:=0;GOTO 30;END;
P:=MEM[P].HH.RH;END;30:{:979};Q:=PRUNEPAGETOP(Q);P:=MEM[V+5].HH.RH;
FREENODE(V,7);
IF Q=0 THEN EQTB[3678+N].HH.RH:=0 ELSE EQTB[3678+N].HH.RH:=VPACKAGE(Q,0,
1,1073741823);VSPLIT:=VPACKAGE(P,H,0,EQTB[5836].INT);10:END;
{:977}{985:}PROCEDURE PRINTTOTALS;BEGIN PRINTSCALED(PAGESOFAR[1]);
IF PAGESOFAR[2]<>0 THEN BEGIN PRINT(312);PRINTSCALED(PAGESOFAR[2]);
PRINT(338);END;IF PAGESOFAR[3]<>0 THEN BEGIN PRINT(312);
PRINTSCALED(PAGESOFAR[3]);PRINT(311);END;
IF PAGESOFAR[4]<>0 THEN BEGIN PRINT(312);PRINTSCALED(PAGESOFAR[4]);
PRINT(979);END;IF PAGESOFAR[5]<>0 THEN BEGIN PRINT(312);
PRINTSCALED(PAGESOFAR[5]);PRINT(980);END;
IF PAGESOFAR[6]<>0 THEN BEGIN PRINT(313);PRINTSCALED(PAGESOFAR[6]);END;
END;{:985}{987:}PROCEDURE FREEZEPAGESP(S:SMALLNUMBER);
BEGIN PAGECONTENTS:=S;PAGESOFAR[0]:=EQTB[5834].INT;
PAGEMAXDEPTH:=EQTB[5835].INT;PAGESOFAR[7]:=0;PAGESOFAR[1]:=0;
PAGESOFAR[2]:=0;PAGESOFAR[3]:=0;PAGESOFAR[4]:=0;PAGESOFAR[5]:=0;
PAGESOFAR[6]:=0;LEASTPAGECOS:=1073741823;
IF EQTB[5296].INT>0 THEN BEGIN BEGINDIAGNOS;PRINTNL(988);
PRINTSCALED(PAGESOFAR[0]);PRINT(989);PRINTSCALED(PAGEMAXDEPTH);
ENDDIAGNOSTI(FALSE);END;END;{:987}{992:}PROCEDURE BOXERROR(N:EIGHTBITS);
BEGIN ERROR;BEGINDIAGNOS;PRINTNL(837);SHOWBOX(EQTB[3678+N].HH.RH);
ENDDIAGNOSTI(TRUE);FLUSHNODELIS(EQTB[3678+N].HH.RH);
EQTB[3678+N].HH.RH:=0;END;{:992}{993:}PROCEDURE ENSUREVBOX(N:EIGHTBITS);
VAR P:HALFWORD;BEGIN P:=EQTB[3678+N].HH.RH;
IF P<>0 THEN IF MEM[P].HH.B0=0 THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(990);END;BEGIN HELPPTR:=3;HELPLINE[2]:=991;
HELPLINE[1]:=992;HELPLINE[0]:=993;END;BOXERROR(N);END;END;
{:993}{994:}{1012:}PROCEDURE FIREUP(C:HALFWORD);LABEL 10;
VAR P,Q,R,S:HALFWORD;PREVP:HALFWORD;N:0..255;WAIT:BOOLEAN;
SAVEVBADNESS:INTEGER;SAVEVFUZZ:SCALED;SAVESPLITTOP:HALFWORD;
BEGIN{1013:}IF MEM[BESTPAGEBREA].HH.B0=12 THEN BEGIN GEQWORDDEFIN(5302,
MEM[BESTPAGEBREA+1].INT);MEM[BESTPAGEBREA+1].INT:=10000;
END ELSE GEQWORDDEFIN(5302,10000){:1013};
IF CURMARK[2]<>0 THEN BEGIN IF CURMARK[0]<>0 THEN DELETETOKENR(CURMARK[0
]);CURMARK[0]:=CURMARK[2];
MEM[CURMARK[0]].HH.LH:=MEM[CURMARK[0]].HH.LH+1;DELETETOKENR(CURMARK[1]);
CURMARK[1]:=0;END;{1014:}IF C=BESTPAGEBREA THEN BESTPAGEBREA:=0;
{1015:}IF EQTB[3933].HH.RH<>0 THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(338);END;PRINTESC(409);PRINT(1004);BEGIN HELPPTR:=2;
HELPLINE[1]:=1005;HELPLINE[0]:=993;END;BOXERROR(255);END{:1015};
INSERTPENALT:=0;SAVESPLITTOP:=EQTB[2892].HH.RH;
IF EQTB[5316].INT<=0 THEN{1018:}BEGIN R:=MEM[30000].HH.RH;
WHILE R<>30000 DO BEGIN IF MEM[R+2].HH.LH<>0 THEN BEGIN N:=MEM[R].HH.B1;
ENSUREVBOX(N);
IF EQTB[3678+N].HH.RH=0 THEN EQTB[3678+N].HH.RH:=NEWNULLBOX;
P:=EQTB[3678+N].HH.RH+5;WHILE MEM[P].HH.RH<>0 DO P:=MEM[P].HH.RH;
MEM[R+2].HH.RH:=P;END;R:=MEM[R].HH.RH;END;END{:1018};Q:=29996;
MEM[Q].HH.RH:=0;PREVP:=29998;P:=MEM[PREVP].HH.RH;
WHILE P<>BESTPAGEBREA DO BEGIN IF MEM[P].HH.B0=3 THEN BEGIN IF EQTB[5316
].INT<=0 THEN{1020:}BEGIN R:=MEM[30000].HH.RH;
WHILE MEM[R].HH.B1<>MEM[P].HH.B1 DO R:=MEM[R].HH.RH;
IF MEM[R+2].HH.LH=0 THEN WAIT:=TRUE ELSE BEGIN WAIT:=FALSE;
S:=MEM[R+2].HH.RH;MEM[S].HH.RH:=MEM[P+4].HH.LH;
IF MEM[R+2].HH.LH=P THEN{1021:}BEGIN IF MEM[R].HH.B0=1 THEN IF(MEM[R+1].
HH.LH=P)AND(MEM[R+1].HH.RH<>0)THEN BEGIN WHILE MEM[S].HH.RH<>MEM[R+1].HH
.RH DO S:=MEM[S].HH.RH;MEM[S].HH.RH:=0;EQTB[2892].HH.RH:=MEM[P+4].HH.RH;
MEM[P+4].HH.LH:=PRUNEPAGETOP(MEM[R+1].HH.RH);
IF MEM[P+4].HH.LH<>0 THEN BEGIN TEMPPTR:=VPACKAGE(MEM[P+4].HH.LH,0,1,
1073741823);MEM[P+3].INT:=MEM[TEMPPTR+3].INT+MEM[TEMPPTR+2].INT;
FREENODE(TEMPPTR,7);WAIT:=TRUE;END;END;MEM[R+2].HH.LH:=0;
N:=MEM[R].HH.B1;TEMPPTR:=MEM[EQTB[3678+N].HH.RH+5].HH.RH;
FREENODE(EQTB[3678+N].HH.RH,7);
EQTB[3678+N].HH.RH:=VPACKAGE(TEMPPTR,0,1,1073741823);
END{:1021}ELSE BEGIN WHILE MEM[S].HH.RH<>0 DO S:=MEM[S].HH.RH;
MEM[R+2].HH.RH:=S;END;END;{1022:}MEM[PREVP].HH.RH:=MEM[P].HH.RH;
MEM[P].HH.RH:=0;IF WAIT THEN BEGIN MEM[Q].HH.RH:=P;Q:=P;
INSERTPENALT:=INSERTPENALT+1;
END ELSE BEGIN DELETEGLUERE(MEM[P+4].HH.RH);FREENODE(P,5);END;
P:=PREVP{:1022};END{:1020};
END ELSE IF MEM[P].HH.B0=4 THEN{1016:}BEGIN IF CURMARK[1]=0 THEN BEGIN
CURMARK[1]:=MEM[P+1].INT;MEM[CURMARK[1]].HH.LH:=MEM[CURMARK[1]].HH.LH+1;
END;IF CURMARK[2]<>0 THEN DELETETOKENR(CURMARK[2]);
CURMARK[2]:=MEM[P+1].INT;MEM[CURMARK[2]].HH.LH:=MEM[CURMARK[2]].HH.LH+1;
END{:1016};PREVP:=P;P:=MEM[PREVP].HH.RH;END;
EQTB[2892].HH.RH:=SAVESPLITTOP;
{1017:}IF P<>0 THEN BEGIN IF MEM[29999].HH.RH=0 THEN IF NESTPTR=0 THEN
CURLIST.TAILFIELD:=PAGETAIL ELSE NEST[0].TAILFIELD:=PAGETAIL;
MEM[PAGETAIL].HH.RH:=MEM[29999].HH.RH;MEM[29999].HH.RH:=P;
MEM[PREVP].HH.RH:=0;END;SAVEVBADNESS:=EQTB[5290].INT;
EQTB[5290].INT:=10000;SAVEVFUZZ:=EQTB[5839].INT;
EQTB[5839].INT:=1073741823;
EQTB[3933].HH.RH:=VPACKAGE(MEM[29998].HH.RH,BESTSIZE,0,PAGEMAXDEPTH);
EQTB[5290].INT:=SAVEVBADNESS;EQTB[5839].INT:=SAVEVFUZZ;
IF LASTGLUE<>65535 THEN DELETEGLUERE(LASTGLUE);{991:}PAGECONTENTS:=0;
PAGETAIL:=29998;MEM[29998].HH.RH:=0;LASTGLUE:=65535;LASTPENALTY:=0;
LASTKERN:=0;PAGESOFAR[7]:=0;PAGEMAXDEPTH:=0{:991};
IF Q<>29996 THEN BEGIN MEM[29998].HH.RH:=MEM[29996].HH.RH;PAGETAIL:=Q;
END{:1017};{1019:}R:=MEM[30000].HH.RH;
WHILE R<>30000 DO BEGIN Q:=MEM[R].HH.RH;FREENODE(R,4);R:=Q;END;
MEM[30000].HH.RH:=30000{:1019}{:1014};
IF(CURMARK[0]<>0)AND(CURMARK[1]=0)THEN BEGIN CURMARK[1]:=CURMARK[0];
MEM[CURMARK[0]].HH.LH:=MEM[CURMARK[0]].HH.LH+1;END;
IF EQTB[3413].HH.RH<>0 THEN IF DEADCYCLES>=EQTB[5303].INT THEN{1024:}
BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(1006);END;
PRINTINT(DEADCYCLES);PRINT(1007);BEGIN HELPPTR:=3;HELPLINE[2]:=1008;
HELPLINE[1]:=1009;HELPLINE[0]:=1010;END;ERROR;
END{:1024}ELSE{1025:}BEGIN OUTPUTACTIVE:=TRUE;DEADCYCLES:=DEADCYCLES+1;
PUSHNEST;CURLIST.MODEFIELD:=-1;CURLIST.AUXFIELD.INT:=-65536000;
CURLIST.MLFIELD:=-LINE;BEGINTOKENLI(EQTB[3413].HH.RH,6);NEWSAVELEVEL(8);
NORMALPARAGR;SCANLEFTBRAC;GOTO 10;END{:1025};
{1023:}BEGIN IF MEM[29998].HH.RH<>0 THEN BEGIN IF MEM[29999].HH.RH=0
THEN IF NESTPTR=0 THEN CURLIST.TAILFIELD:=PAGETAIL ELSE NEST[0].
TAILFIELD:=PAGETAIL ELSE MEM[PAGETAIL].HH.RH:=MEM[29999].HH.RH;
MEM[29999].HH.RH:=MEM[29998].HH.RH;MEM[29998].HH.RH:=0;PAGETAIL:=29998;
END;SHIPOUT(EQTB[3933].HH.RH);EQTB[3933].HH.RH:=0;END{:1023};10:END;
{:1012}PROCEDURE BUILDPAGE;LABEL 10,30,31,22,80,90;VAR P:HALFWORD;
Q,R:HALFWORD;B,C:INTEGER;PI:INTEGER;N:0..255;DELTA,H,W:SCALED;
BEGIN IF(MEM[29999].HH.RH=0)OR OUTPUTACTIVE THEN GOTO 10;
REPEAT 22:P:=MEM[29999].HH.RH;
{996:}IF LASTGLUE<>65535 THEN DELETEGLUERE(LASTGLUE);LASTPENALTY:=0;
LASTKERN:=0;IF MEM[P].HH.B0=10 THEN BEGIN LASTGLUE:=MEM[P+1].HH.LH;
MEM[LASTGLUE].HH.RH:=MEM[LASTGLUE].HH.RH+1;
END ELSE BEGIN LASTGLUE:=65535;
IF MEM[P].HH.B0=12 THEN LASTPENALTY:=MEM[P+1].INT ELSE IF MEM[P].HH.B0=
11 THEN LASTKERN:=MEM[P+1].INT;END{:996};
{997:}{1000:}CASE MEM[P].HH.B0 OF 0,1,2:IF PAGECONTENTS<2 THEN{1001:}
BEGIN IF PAGECONTENTS=0 THEN FREEZEPAGESP(2)ELSE PAGECONTENTS:=2;
Q:=NEWSKIPPARAM(9);
IF MEM[TEMPPTR+1].INT>MEM[P+3].INT THEN MEM[TEMPPTR+1].INT:=MEM[TEMPPTR
+1].INT-MEM[P+3].INT ELSE MEM[TEMPPTR+1].INT:=0;MEM[Q].HH.RH:=P;
MEM[29999].HH.RH:=Q;GOTO 22;
END{:1001}ELSE{1002:}BEGIN PAGESOFAR[1]:=PAGESOFAR[1]+PAGESOFAR[7]+MEM[P
+3].INT;PAGESOFAR[7]:=MEM[P+2].INT;GOTO 80;END{:1002};
8:{1364:}GOTO 80{:1364};
10:IF PAGECONTENTS<2 THEN GOTO 31 ELSE IF(MEM[PAGETAIL].HH.B0<9)THEN PI
:=0 ELSE GOTO 90;
11:IF PAGECONTENTS<2 THEN GOTO 31 ELSE IF MEM[P].HH.RH=0 THEN GOTO 10
ELSE IF MEM[MEM[P].HH.RH].HH.B0=10 THEN PI:=0 ELSE GOTO 90;
12:IF PAGECONTENTS<2 THEN GOTO 31 ELSE PI:=MEM[P+1].INT;4:GOTO 80;
3:{1008:}BEGIN IF PAGECONTENTS=0 THEN FREEZEPAGESP(1);N:=MEM[P].HH.B1;
R:=30000;WHILE N>=MEM[MEM[R].HH.RH].HH.B1 DO R:=MEM[R].HH.RH;N:=N;
IF MEM[R].HH.B1<>N THEN{1009:}BEGIN Q:=GETNODE(4);
MEM[Q].HH.RH:=MEM[R].HH.RH;MEM[R].HH.RH:=Q;R:=Q;MEM[R].HH.B1:=N;
MEM[R].HH.B0:=0;ENSUREVBOX(N);
IF EQTB[3678+N].HH.RH=0 THEN MEM[R+3].INT:=0 ELSE MEM[R+3].INT:=MEM[EQTB
[3678+N].HH.RH+3].INT+MEM[EQTB[3678+N].HH.RH+2].INT;MEM[R+2].HH.LH:=0;
Q:=EQTB[2900+N].HH.RH;
IF EQTB[5318+N].INT=1000 THEN H:=MEM[R+3].INT ELSE H:=XOVERN(MEM[R+3].
INT,1000)*EQTB[5318+N].INT;PAGESOFAR[0]:=PAGESOFAR[0]-H-MEM[Q+1].INT;
PAGESOFAR[2+MEM[Q].HH.B0]:=PAGESOFAR[2+MEM[Q].HH.B0]+MEM[Q+2].INT;
PAGESOFAR[6]:=PAGESOFAR[6]+MEM[Q+3].INT;
IF(MEM[Q].HH.B1<>0)AND(MEM[Q+3].INT<>0)THEN BEGIN BEGIN IF INTERACTION=3
THEN;PRINTNL(262);PRINT(999);END;PRINTESC(395);PRINTINT(N);
BEGIN HELPPTR:=3;HELPLINE[2]:=1000;HELPLINE[1]:=1001;HELPLINE[0]:=923;
END;ERROR;END;END{:1009};
IF MEM[R].HH.B0=1 THEN INSERTPENALT:=INSERTPENALT+MEM[P+1].INT ELSE
BEGIN MEM[R+2].HH.RH:=P;
DELTA:=PAGESOFAR[0]-PAGESOFAR[1]-PAGESOFAR[7]+PAGESOFAR[6];
IF EQTB[5318+N].INT=1000 THEN H:=MEM[P+3].INT ELSE H:=XOVERN(MEM[P+3].
INT,1000)*EQTB[5318+N].INT;
IF((H<=0)OR(H<=DELTA))AND(MEM[P+3].INT+MEM[R+3].INT<=EQTB[5851+N].INT)
THEN BEGIN PAGESOFAR[0]:=PAGESOFAR[0]-H;
MEM[R+3].INT:=MEM[R+3].INT+MEM[P+3].INT;
END ELSE{1010:}BEGIN IF EQTB[5318+N].INT<=0 THEN W:=1073741823 ELSE
BEGIN W:=PAGESOFAR[0]-PAGESOFAR[1]-PAGESOFAR[7];
IF EQTB[5318+N].INT<>1000 THEN W:=XOVERN(W,EQTB[5318+N].INT)*1000;END;
IF W>EQTB[5851+N].INT-MEM[R+3].INT THEN W:=EQTB[5851+N].INT-MEM[R+3].INT
;Q:=VERTBREAK(MEM[P+4].HH.LH,W,MEM[P+2].INT);
MEM[R+3].INT:=MEM[R+3].INT+BESTHEIGHTPL;
IF EQTB[5296].INT>0 THEN{1011:}BEGIN BEGINDIAGNOS;PRINTNL(1002);
PRINTINT(N);PRINT(1003);PRINTSCALED(W);PRINTCHAR(44);
PRINTSCALED(BESTHEIGHTPL);PRINT(932);
IF Q=0 THEN PRINTINT(-10000)ELSE IF MEM[Q].HH.B0=12 THEN PRINTINT(MEM[Q
+1].INT)ELSE PRINTCHAR(48);ENDDIAGNOSTI(FALSE);END{:1011};
IF EQTB[5318+N].INT<>1000 THEN BESTHEIGHTPL:=XOVERN(BESTHEIGHTPL,1000)*
EQTB[5318+N].INT;PAGESOFAR[0]:=PAGESOFAR[0]-BESTHEIGHTPL;
MEM[R].HH.B0:=1;MEM[R+1].HH.RH:=Q;MEM[R+1].HH.LH:=P;
IF Q=0 THEN INSERTPENALT:=INSERTPENALT-10000 ELSE IF MEM[Q].HH.B0=12
THEN INSERTPENALT:=INSERTPENALT+MEM[Q+1].INT;END{:1010};END;GOTO 80;
END{:1008};ELSE CONFUSION(994)END{:1000};
{1005:}IF PI<10000 THEN BEGIN{1007:}IF PAGESOFAR[1]<PAGESOFAR[0]THEN IF(
PAGESOFAR[3]<>0)OR(PAGESOFAR[4]<>0)OR(PAGESOFAR[5]<>0)THEN B:=0 ELSE B:=
BADNESS(PAGESOFAR[0]-PAGESOFAR[1],PAGESOFAR[2])ELSE IF PAGESOFAR[1]-
PAGESOFAR[0]>PAGESOFAR[6]THEN B:=1073741823 ELSE B:=BADNESS(PAGESOFAR[1]
-PAGESOFAR[0],PAGESOFAR[6]){:1007};
IF B<1073741823 THEN IF PI<=-10000 THEN C:=PI ELSE IF B<10000 THEN C:=B+
PI+INSERTPENALT ELSE C:=100000 ELSE C:=B;
IF INSERTPENALT>=10000 THEN C:=1073741823;
IF EQTB[5296].INT>0 THEN{1006:}BEGIN BEGINDIAGNOS;PRINTNL(37);
PRINT(928);PRINTTOTALS;PRINT(997);PRINTSCALED(PAGESOFAR[0]);PRINT(931);
IF B=1073741823 THEN PRINTCHAR(42)ELSE PRINTINT(B);PRINT(932);
PRINTINT(PI);PRINT(998);
IF C=1073741823 THEN PRINTCHAR(42)ELSE PRINTINT(C);
IF C<=LEASTPAGECOS THEN PRINTCHAR(35);ENDDIAGNOSTI(FALSE);END{:1006};
IF C<=LEASTPAGECOS THEN BEGIN BESTPAGEBREA:=P;BESTSIZE:=PAGESOFAR[0];
LEASTPAGECOS:=C;R:=MEM[30000].HH.RH;
WHILE R<>30000 DO BEGIN MEM[R+2].HH.LH:=MEM[R+2].HH.RH;R:=MEM[R].HH.RH;
END;END;IF(C=1073741823)OR(PI<=-10000)THEN BEGIN FIREUP(P);
IF OUTPUTACTIVE THEN GOTO 10;GOTO 30;END;END{:1005};
IF(MEM[P].HH.B0<10)OR(MEM[P].HH.B0>11)THEN GOTO 80;
90:{1004:}IF MEM[P].HH.B0=11 THEN Q:=P ELSE BEGIN Q:=MEM[P+1].HH.LH;
PAGESOFAR[2+MEM[Q].HH.B0]:=PAGESOFAR[2+MEM[Q].HH.B0]+MEM[Q+2].INT;
PAGESOFAR[6]:=PAGESOFAR[6]+MEM[Q+3].INT;
IF(MEM[Q].HH.B1<>0)AND(MEM[Q+3].INT<>0)THEN BEGIN BEGIN IF INTERACTION=3
THEN;PRINTNL(262);PRINT(995);END;BEGIN HELPPTR:=4;HELPLINE[3]:=996;
HELPLINE[2]:=964;HELPLINE[1]:=965;HELPLINE[0]:=923;END;ERROR;
R:=NEWSPEC(Q);MEM[R].HH.B1:=0;DELETEGLUERE(Q);MEM[P+1].HH.LH:=R;Q:=R;
END;END;PAGESOFAR[1]:=PAGESOFAR[1]+PAGESOFAR[7]+MEM[Q+1].INT;
PAGESOFAR[7]:=0{:1004};
80:{1003:}IF PAGESOFAR[7]>PAGEMAXDEPTH THEN BEGIN PAGESOFAR[1]:=
PAGESOFAR[1]+PAGESOFAR[7]-PAGEMAXDEPTH;PAGESOFAR[7]:=PAGEMAXDEPTH;END;
{:1003};{998:}MEM[PAGETAIL].HH.RH:=P;PAGETAIL:=P;
MEM[29999].HH.RH:=MEM[P].HH.RH;MEM[P].HH.RH:=0;GOTO 30{:998};
31:{999:}MEM[29999].HH.RH:=MEM[P].HH.RH;MEM[P].HH.RH:=0;
FLUSHNODELIS(P){:999};30:{:997};UNTIL MEM[29999].HH.RH=0;
{995:}IF NESTPTR=0 THEN CURLIST.TAILFIELD:=29999 ELSE NEST[0].TAILFIELD
:=29999{:995};10:END;{:994}{1030:}{1043:}PROCEDURE APPSPACE;
VAR Q:HALFWORD;
BEGIN IF(CURLIST.AUXFIELD.HH.LH>=2000)AND(EQTB[2895].HH.RH<>0)THEN Q:=
NEWPARAMGLUE(13)ELSE BEGIN IF EQTB[2894].HH.RH<>0 THEN MAINP:=EQTB[2894]
.HH.RH ELSE{1042:}BEGIN MAINP:=FONTGLUE[EQTB[3934].HH.RH];
IF MAINP=0 THEN BEGIN MAINP:=NEWSPEC(0);
MAINK:=PARAMBASE[EQTB[3934].HH.RH]+2;
MEM[MAINP+1].INT:=FONTINFO[MAINK].INT;
MEM[MAINP+2].INT:=FONTINFO[MAINK+1].INT;
MEM[MAINP+3].INT:=FONTINFO[MAINK+2].INT;
FONTGLUE[EQTB[3934].HH.RH]:=MAINP;END;END{:1042};MAINP:=NEWSPEC(MAINP);
{1044:}IF CURLIST.AUXFIELD.HH.LH>=2000 THEN MEM[MAINP+1].INT:=MEM[MAINP
+1].INT+FONTINFO[7+PARAMBASE[EQTB[3934].HH.RH]].INT;
MEM[MAINP+2].INT:=XNOVERD(MEM[MAINP+2].INT,CURLIST.AUXFIELD.HH.LH,1000);
MEM[MAINP+3].INT:=XNOVERD(MEM[MAINP+3].INT,1000,CURLIST.AUXFIELD.HH.LH)
{:1044};Q:=NEWGLUE(MAINP);MEM[MAINP].HH.RH:=0;END;
MEM[CURLIST.TAILFIELD].HH.RH:=Q;CURLIST.TAILFIELD:=Q;END;
{:1043}{1047:}PROCEDURE INSERTDOLLAR;BEGIN BACKINPUT;CURTOK:=804;
BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(1018);END;
BEGIN HELPPTR:=2;HELPLINE[1]:=1019;HELPLINE[0]:=1020;END;INSERROR;END;
{:1047}{1049:}PROCEDURE YOUCANT;BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(685);END;PRINTCMDCHR(CURCMD,CURCHR);PRINT(1021);
PRINTMODE(CURLIST.MODEFIELD);END;{:1049}{1050:}PROCEDURE REPORTILLEGA;
BEGIN YOUCANT;BEGIN HELPPTR:=4;HELPLINE[3]:=1022;HELPLINE[2]:=1023;
HELPLINE[1]:=1024;HELPLINE[0]:=1025;END;ERROR;END;
{:1050}{1051:}FUNCTION PRIVILEGED:BOOLEAN;
BEGIN IF CURLIST.MODEFIELD>0 THEN PRIVILEGED:=TRUE ELSE BEGIN
REPORTILLEGA;PRIVILEGED:=FALSE;END;END;
{:1051}{1054:}FUNCTION ITSALLOVER:BOOLEAN;LABEL 10;
BEGIN IF PRIVILEGED THEN BEGIN IF(29998=PAGETAIL)AND(CURLIST.HEADFIELD=
CURLIST.TAILFIELD)AND(DEADCYCLES=0)THEN BEGIN ITSALLOVER:=TRUE;GOTO 10;
END;BACKINPUT;BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWNULLBOX;
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
MEM[CURLIST.TAILFIELD+1].INT:=EQTB[5833].INT;
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWGLUE(8);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWPENALTY(-1073741824);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;BUILDPAGE;END;
ITSALLOVER:=FALSE;10:END;{:1054}{1060:}PROCEDURE APPENDGLUE;
VAR S:SMALLNUMBER;BEGIN S:=CURCHR;CASE S OF 0:CURVAL:=4;1:CURVAL:=8;
2:CURVAL:=12;3:CURVAL:=16;4:SCANGLUE(2);5:SCANGLUE(3);END;
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWGLUE(CURVAL);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
IF S>=4 THEN BEGIN MEM[CURVAL].HH.RH:=MEM[CURVAL].HH.RH-1;
IF S>4 THEN MEM[CURLIST.TAILFIELD].HH.B1:=99;END;END;
{:1060}{1061:}PROCEDURE APPENDKERN;VAR S:QUARTERWORD;BEGIN S:=CURCHR;
SCANDIMEN(S=99,FALSE,FALSE);
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWKERN(CURVAL);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
MEM[CURLIST.TAILFIELD].HH.B1:=S;END;{:1061}{1064:}PROCEDURE OFFSAVE;
VAR P:HALFWORD;
BEGIN IF CURGROUP=0 THEN{1066:}BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(777);END;PRINTCMDCHR(CURCMD,CURCHR);BEGIN HELPPTR:=1;
HELPLINE[0]:=1044;END;ERROR;END{:1066}ELSE BEGIN BACKINPUT;P:=GETAVAIL;
MEM[29997].HH.RH:=P;BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(625);
END;{1065:}CASE CURGROUP OF 14:BEGIN MEM[P].HH.LH:=6711;PRINTESC(516);
END;15:BEGIN MEM[P].HH.LH:=804;PRINTCHAR(36);END;
16:BEGIN MEM[P].HH.LH:=6712;MEM[P].HH.RH:=GETAVAIL;P:=MEM[P].HH.RH;
MEM[P].HH.LH:=3118;PRINTESC(1043);END;ELSE BEGIN MEM[P].HH.LH:=637;
PRINTCHAR(125);END END{:1065};PRINT(626);
BEGINTOKENLI(MEM[29997].HH.RH,4);BEGIN HELPPTR:=5;HELPLINE[4]:=1038;
HELPLINE[3]:=1039;HELPLINE[2]:=1040;HELPLINE[1]:=1041;HELPLINE[0]:=1042;
END;ERROR;END;END;{:1064}{1069:}PROCEDURE EXTRARIGHTBR;
BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(1049);END;
CASE CURGROUP OF 14:PRINTESC(516);15:PRINTCHAR(36);16:PRINTESC(878);END;
BEGIN HELPPTR:=5;HELPLINE[4]:=1050;HELPLINE[3]:=1051;HELPLINE[2]:=1052;
HELPLINE[1]:=1053;HELPLINE[0]:=1054;END;ERROR;ALIGNSTATE:=ALIGNSTATE+1;
END;{:1069}{1070:}PROCEDURE NORMALPARAGR;
BEGIN IF EQTB[5282].INT<>0 THEN EQWORDDEFINE(5282,0);
IF EQTB[5847].INT<>0 THEN EQWORDDEFINE(5847,0);
IF EQTB[5304].INT<>1 THEN EQWORDDEFINE(5304,1);
IF EQTB[3412].HH.RH<>0 THEN EQDEFINE(3412,118,0);END;
{:1070}{1075:}PROCEDURE BOXEND(BOXCONTEXT:INTEGER);VAR P:HALFWORD;
BEGIN IF BOXCONTEXT<1073741824 THEN{1076:}BEGIN IF CURBOX<>0 THEN BEGIN
MEM[CURBOX+4].INT:=BOXCONTEXT;
IF ABS(CURLIST.MODEFIELD)=1 THEN BEGIN APPENDTOVLIS(CURBOX);
IF ADJUSTTAIL<>0 THEN BEGIN IF 29995<>ADJUSTTAIL THEN BEGIN MEM[CURLIST.
TAILFIELD].HH.RH:=MEM[29995].HH.RH;CURLIST.TAILFIELD:=ADJUSTTAIL;END;
ADJUSTTAIL:=0;END;IF CURLIST.MODEFIELD>0 THEN BUILDPAGE;
END ELSE BEGIN IF ABS(CURLIST.MODEFIELD)=102 THEN CURLIST.AUXFIELD.HH.LH
:=1000 ELSE BEGIN P:=NEWNOAD;MEM[P+1].HH.RH:=2;MEM[P+1].HH.LH:=CURBOX;
CURBOX:=P;END;MEM[CURLIST.TAILFIELD].HH.RH:=CURBOX;
CURLIST.TAILFIELD:=CURBOX;END;END;
END{:1076}ELSE IF BOXCONTEXT<1073742336 THEN{1077:}IF BOXCONTEXT<
1073742080 THEN EQDEFINE(-1073738146+BOXCONTEXT,119,CURBOX)ELSE
GEQDEFINE(-1073738402+BOXCONTEXT,119,CURBOX){:1077}ELSE IF CURBOX<>0
THEN IF BOXCONTEXT>1073742336 THEN{1078:}BEGIN{404:}REPEAT GETXTOKEN;
UNTIL(CURCMD<>10)AND(CURCMD<>0){:404};
IF((CURCMD=26)AND(ABS(CURLIST.MODEFIELD)<>1))OR((CURCMD=27)AND(ABS(
CURLIST.MODEFIELD)=1))THEN BEGIN APPENDGLUE;
MEM[CURLIST.TAILFIELD].HH.B1:=BOXCONTEXT-(1073742237);
MEM[CURLIST.TAILFIELD+1].HH.RH:=CURBOX;
END ELSE BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(1067);END;
BEGIN HELPPTR:=3;HELPLINE[2]:=1068;HELPLINE[1]:=1069;HELPLINE[0]:=1070;
END;BACKERROR;FLUSHNODELIS(CURBOX);END;END{:1078}ELSE SHIPOUT(CURBOX);
END;{:1075}{1079:}PROCEDURE BEGINBOX(BOXCONTEXT:INTEGER);LABEL 10,30;
VAR P,Q:HALFWORD;M:QUARTERWORD;K:HALFWORD;N:EIGHTBITS;
BEGIN CASE CURCHR OF 0:BEGIN SCANEIGHTBIT;
CURBOX:=EQTB[3678+CURVAL].HH.RH;EQTB[3678+CURVAL].HH.RH:=0;END;
1:BEGIN SCANEIGHTBIT;CURBOX:=COPYNODELIST(EQTB[3678+CURVAL].HH.RH);END;
2:{1080:}BEGIN CURBOX:=0;
IF ABS(CURLIST.MODEFIELD)=203 THEN BEGIN YOUCANT;BEGIN HELPPTR:=1;
HELPLINE[0]:=1071;END;ERROR;
END ELSE IF(CURLIST.MODEFIELD=1)AND(CURLIST.HEADFIELD=CURLIST.TAILFIELD)
THEN BEGIN YOUCANT;BEGIN HELPPTR:=2;HELPLINE[1]:=1072;HELPLINE[0]:=1073;
END;ERROR;
END ELSE BEGIN IF NOT(CURLIST.TAILFIELD>=HIMEMMIN)THEN IF(MEM[CURLIST.
TAILFIELD].HH.B0=0)OR(MEM[CURLIST.TAILFIELD].HH.B0=1)THEN{1081:}BEGIN Q
:=CURLIST.HEADFIELD;REPEAT P:=Q;
IF NOT(Q>=HIMEMMIN)THEN IF MEM[Q].HH.B0=7 THEN BEGIN FOR M:=1 TO MEM[Q].
HH.B1 DO P:=MEM[P].HH.RH;IF P=CURLIST.TAILFIELD THEN GOTO 30;END;
Q:=MEM[P].HH.RH;UNTIL Q=CURLIST.TAILFIELD;CURBOX:=CURLIST.TAILFIELD;
MEM[CURBOX+4].INT:=0;CURLIST.TAILFIELD:=P;MEM[P].HH.RH:=0;30:END{:1081};
END;END{:1080};3:{1082:}BEGIN SCANEIGHTBIT;N:=CURVAL;
IF NOT SCANKEYWORD(843)THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(1074);END;BEGIN HELPPTR:=2;HELPLINE[1]:=1075;
HELPLINE[0]:=1076;END;ERROR;END;SCANDIMEN(FALSE,FALSE,FALSE);
CURBOX:=VSPLIT(N,CURVAL);END{:1082};ELSE{1083:}BEGIN K:=CURCHR-4;
SAVESTACK[SAVEPTR+0].INT:=BOXCONTEXT;
IF K=102 THEN IF(BOXCONTEXT<1073741824)AND(ABS(CURLIST.MODEFIELD)=1)THEN
SCANSPEC(3,TRUE)ELSE SCANSPEC(2,TRUE)ELSE BEGIN IF K=1 THEN SCANSPEC(4,
TRUE)ELSE BEGIN SCANSPEC(5,TRUE);K:=1;END;NORMALPARAGR;END;PUSHNEST;
CURLIST.MODEFIELD:=-K;IF K=1 THEN BEGIN CURLIST.AUXFIELD.INT:=-65536000;
IF EQTB[3418].HH.RH<>0 THEN BEGINTOKENLI(EQTB[3418].HH.RH,11);
END ELSE BEGIN CURLIST.AUXFIELD.HH.LH:=1000;
IF EQTB[3417].HH.RH<>0 THEN BEGINTOKENLI(EQTB[3417].HH.RH,10);END;
GOTO 10;END{:1083}END;BOXEND(BOXCONTEXT);10:END;
{:1079}{1084:}PROCEDURE SCANBOX(BOXCONTEXT:INTEGER);
BEGIN{404:}REPEAT GETXTOKEN;UNTIL(CURCMD<>10)AND(CURCMD<>0){:404};
IF CURCMD=20 THEN BEGINBOX(BOXCONTEXT)ELSE IF(BOXCONTEXT>=1073742337)AND
((CURCMD=36)OR(CURCMD=35))THEN BEGIN CURBOX:=SCANRULESPEC;
BOXEND(BOXCONTEXT);END ELSE BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(1077);END;BEGIN HELPPTR:=3;HELPLINE[2]:=1078;
HELPLINE[1]:=1079;HELPLINE[0]:=1080;END;BACKERROR;END;END;
{:1084}{1086:}PROCEDURE PACKAGE(C:SMALLNUMBER);VAR H:SCALED;P:HALFWORD;
D:SCALED;BEGIN D:=EQTB[5837].INT;UNSAVE;SAVEPTR:=SAVEPTR-3;
IF CURLIST.MODEFIELD=-102 THEN CURBOX:=HPACK(MEM[CURLIST.HEADFIELD].HH.
RH,SAVESTACK[SAVEPTR+2].INT,SAVESTACK[SAVEPTR+1].INT)ELSE BEGIN CURBOX:=
VPACKAGE(MEM[CURLIST.HEADFIELD].HH.RH,SAVESTACK[SAVEPTR+2].INT,SAVESTACK
[SAVEPTR+1].INT,D);IF C=4 THEN{1087:}BEGIN H:=0;P:=MEM[CURBOX+5].HH.RH;
IF P<>0 THEN IF MEM[P].HH.B0<=2 THEN H:=MEM[P+3].INT;
MEM[CURBOX+2].INT:=MEM[CURBOX+2].INT-H+MEM[CURBOX+3].INT;
MEM[CURBOX+3].INT:=H;END{:1087};END;POPNEST;
BOXEND(SAVESTACK[SAVEPTR+0].INT);END;
{:1086}{1091:}FUNCTION NORMMIN(H:INTEGER):SMALLNUMBER;
BEGIN IF H<=0 THEN NORMMIN:=1 ELSE IF H>=63 THEN NORMMIN:=63 ELSE
NORMMIN:=H;END;PROCEDURE NEWGRAF(INDENTED:BOOLEAN);
BEGIN CURLIST.PGFIELD:=0;
IF(CURLIST.MODEFIELD=1)OR(CURLIST.HEADFIELD<>CURLIST.TAILFIELD)THEN
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWPARAMGLUE(2);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;PUSHNEST;
CURLIST.MODEFIELD:=102;CURLIST.AUXFIELD.HH.LH:=1000;
IF EQTB[5313].INT<=0 THEN CURLANG:=0 ELSE IF EQTB[5313].INT>255 THEN
CURLANG:=0 ELSE CURLANG:=EQTB[5313].INT;CURLIST.AUXFIELD.HH.RH:=CURLANG;
CURLIST.PGFIELD:=(NORMMIN(EQTB[5314].INT)*64+NORMMIN(EQTB[5315].INT))
*65536+CURLANG;IF INDENTED THEN BEGIN CURLIST.TAILFIELD:=NEWNULLBOX;
MEM[CURLIST.HEADFIELD].HH.RH:=CURLIST.TAILFIELD;
MEM[CURLIST.TAILFIELD+1].INT:=EQTB[5830].INT;END;
IF EQTB[3414].HH.RH<>0 THEN BEGINTOKENLI(EQTB[3414].HH.RH,7);
IF NESTPTR=1 THEN BUILDPAGE;END;{:1091}{1093:}PROCEDURE INDENTINHMOD;
VAR P,Q:HALFWORD;BEGIN IF CURCHR>0 THEN BEGIN P:=NEWNULLBOX;
MEM[P+1].INT:=EQTB[5830].INT;
IF ABS(CURLIST.MODEFIELD)=102 THEN CURLIST.AUXFIELD.HH.LH:=1000 ELSE
BEGIN Q:=NEWNOAD;MEM[Q+1].HH.RH:=2;MEM[Q+1].HH.LH:=P;P:=Q;END;
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=P;
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;END;END;
{:1093}{1095:}PROCEDURE HEADFORVMODE;
BEGIN IF CURLIST.MODEFIELD<0 THEN IF CURCMD<>36 THEN OFFSAVE ELSE BEGIN
BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(685);END;PRINTESC(521);
PRINT(1083);BEGIN HELPPTR:=2;HELPLINE[1]:=1084;HELPLINE[0]:=1085;END;
ERROR;END ELSE BEGIN BACKINPUT;CURTOK:=PARTOKEN;BACKINPUT;
CURINPUT.INDEXFIELD:=4;END;END;{:1095}{1096:}PROCEDURE ENDGRAF;
BEGIN IF CURLIST.MODEFIELD=102 THEN BEGIN IF CURLIST.HEADFIELD=CURLIST.
TAILFIELD THEN POPNEST ELSE LINEBREAK(EQTB[5269].INT);NORMALPARAGR;
ERRORCOUNT:=0;END;END;{:1096}{1099:}PROCEDURE BEGININSERTO;
BEGIN IF CURCMD=38 THEN CURVAL:=255 ELSE BEGIN SCANEIGHTBIT;
IF CURVAL=255 THEN BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(1086);END;PRINTESC(330);PRINTINT(255);BEGIN HELPPTR:=1;
HELPLINE[0]:=1087;END;ERROR;CURVAL:=0;END;END;
SAVESTACK[SAVEPTR+0].INT:=CURVAL;SAVEPTR:=SAVEPTR+1;NEWSAVELEVEL(11);
SCANLEFTBRAC;NORMALPARAGR;PUSHNEST;CURLIST.MODEFIELD:=-1;
CURLIST.AUXFIELD.INT:=-65536000;END;{:1099}{1101:}PROCEDURE MAKEMARK;
VAR P:HALFWORD;BEGIN P:=SCANTOKS(FALSE,TRUE);P:=GETNODE(2);
MEM[P].HH.B0:=4;MEM[P].HH.B1:=0;MEM[P+1].INT:=DEFREF;
MEM[CURLIST.TAILFIELD].HH.RH:=P;CURLIST.TAILFIELD:=P;END;
{:1101}{1103:}PROCEDURE APPENDPENALT;BEGIN SCANINT;
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWPENALTY(CURVAL);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
IF CURLIST.MODEFIELD=1 THEN BUILDPAGE;END;
{:1103}{1105:}PROCEDURE DELETELAST;LABEL 10;VAR P,Q:HALFWORD;
M:QUARTERWORD;
BEGIN IF(CURLIST.MODEFIELD=1)AND(CURLIST.TAILFIELD=CURLIST.HEADFIELD)
THEN{1106:}BEGIN IF(CURCHR<>10)OR(LASTGLUE<>65535)THEN BEGIN YOUCANT;
BEGIN HELPPTR:=2;HELPLINE[1]:=1072;HELPLINE[0]:=1088;END;
IF CURCHR=11 THEN HELPLINE[0]:=(1089)ELSE IF CURCHR<>10 THEN HELPLINE[0]
:=(1090);ERROR;END;
END{:1106}ELSE BEGIN IF NOT(CURLIST.TAILFIELD>=HIMEMMIN)THEN IF MEM[
CURLIST.TAILFIELD].HH.B0=CURCHR THEN BEGIN Q:=CURLIST.HEADFIELD;
REPEAT P:=Q;
IF NOT(Q>=HIMEMMIN)THEN IF MEM[Q].HH.B0=7 THEN BEGIN FOR M:=1 TO MEM[Q].
HH.B1 DO P:=MEM[P].HH.RH;IF P=CURLIST.TAILFIELD THEN GOTO 10;END;
Q:=MEM[P].HH.RH;UNTIL Q=CURLIST.TAILFIELD;MEM[P].HH.RH:=0;
FLUSHNODELIS(CURLIST.TAILFIELD);CURLIST.TAILFIELD:=P;END;END;10:END;
{:1105}{1110:}PROCEDURE UNPACKAGE;LABEL 10;VAR P:HALFWORD;C:0..1;
BEGIN C:=CURCHR;SCANEIGHTBIT;P:=EQTB[3678+CURVAL].HH.RH;
IF P=0 THEN GOTO 10;
IF(ABS(CURLIST.MODEFIELD)=203)OR((ABS(CURLIST.MODEFIELD)=1)AND(MEM[P].HH
.B0<>1))OR((ABS(CURLIST.MODEFIELD)=102)AND(MEM[P].HH.B0<>0))THEN BEGIN
BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(1098);END;
BEGIN HELPPTR:=3;HELPLINE[2]:=1099;HELPLINE[1]:=1100;HELPLINE[0]:=1101;
END;ERROR;GOTO 10;END;
IF C=1 THEN MEM[CURLIST.TAILFIELD].HH.RH:=COPYNODELIST(MEM[P+5].HH.RH)
ELSE BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=MEM[P+5].HH.RH;
EQTB[3678+CURVAL].HH.RH:=0;FREENODE(P,7);END;
WHILE MEM[CURLIST.TAILFIELD].HH.RH<>0 DO CURLIST.TAILFIELD:=MEM[CURLIST.
TAILFIELD].HH.RH;10:END;{:1110}{1113:}PROCEDURE APPENDITALIC;LABEL 10;
VAR P:HALFWORD;F:INTERNALFONT;
BEGIN IF CURLIST.TAILFIELD<>CURLIST.HEADFIELD THEN BEGIN IF(CURLIST.
TAILFIELD>=HIMEMMIN)THEN P:=CURLIST.TAILFIELD ELSE IF MEM[CURLIST.
TAILFIELD].HH.B0=6 THEN P:=CURLIST.TAILFIELD+1 ELSE GOTO 10;
F:=MEM[P].HH.B0;
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWKERN(FONTINFO[ITALICBASE[F]+(
FONTINFO[CHARBASE[F]+MEM[P].HH.B1].QQQQ.B2)DIV 4].INT);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
MEM[CURLIST.TAILFIELD].HH.B1:=1;END;10:END;
{:1113}{1117:}PROCEDURE APPENDDISCRE;VAR C:INTEGER;
BEGIN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWDISC;
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
IF CURCHR=1 THEN BEGIN C:=HYPHENCHAR[EQTB[3934].HH.RH];
IF C>=0 THEN IF C<256 THEN MEM[CURLIST.TAILFIELD+1].HH.LH:=NEWCHARACTER(
EQTB[3934].HH.RH,C);END ELSE BEGIN SAVEPTR:=SAVEPTR+1;
SAVESTACK[SAVEPTR-1].INT:=0;NEWSAVELEVEL(10);SCANLEFTBRAC;PUSHNEST;
CURLIST.MODEFIELD:=-102;CURLIST.AUXFIELD.HH.LH:=1000;END;END;
{:1117}{1119:}PROCEDURE BUILDDISCRET;LABEL 30,10;VAR P,Q:HALFWORD;
N:INTEGER;BEGIN UNSAVE;{1121:}Q:=CURLIST.HEADFIELD;P:=MEM[Q].HH.RH;N:=0;
WHILE P<>0 DO BEGIN IF NOT(P>=HIMEMMIN)THEN IF MEM[P].HH.B0>2 THEN IF
MEM[P].HH.B0<>11 THEN IF MEM[P].HH.B0<>6 THEN BEGIN BEGIN IF INTERACTION
=3 THEN;PRINTNL(262);PRINT(1108);END;BEGIN HELPPTR:=1;HELPLINE[0]:=1109;
END;ERROR;BEGINDIAGNOS;PRINTNL(1110);SHOWBOX(P);ENDDIAGNOSTI(TRUE);
FLUSHNODELIS(P);MEM[Q].HH.RH:=0;GOTO 30;END;Q:=P;P:=MEM[Q].HH.RH;N:=N+1;
END;30:{:1121};P:=MEM[CURLIST.HEADFIELD].HH.RH;POPNEST;
CASE SAVESTACK[SAVEPTR-1].INT OF 0:MEM[CURLIST.TAILFIELD+1].HH.LH:=P;
1:MEM[CURLIST.TAILFIELD+1].HH.RH:=P;
2:{1120:}BEGIN IF(N>0)AND(ABS(CURLIST.MODEFIELD)=203)THEN BEGIN BEGIN IF
INTERACTION=3 THEN;PRINTNL(262);PRINT(1102);END;PRINTESC(349);
BEGIN HELPPTR:=2;HELPLINE[1]:=1103;HELPLINE[0]:=1104;END;
FLUSHNODELIS(P);N:=0;ERROR;END ELSE MEM[CURLIST.TAILFIELD].HH.RH:=P;
IF N<=255 THEN MEM[CURLIST.TAILFIELD].HH.B1:=N ELSE BEGIN BEGIN IF
INTERACTION=3 THEN;PRINTNL(262);PRINT(1105);END;BEGIN HELPPTR:=2;
HELPLINE[1]:=1106;HELPLINE[0]:=1107;END;ERROR;END;
IF N>0 THEN CURLIST.TAILFIELD:=Q;SAVEPTR:=SAVEPTR-1;GOTO 10;END{:1120};
END;SAVESTACK[SAVEPTR-1].INT:=SAVESTACK[SAVEPTR-1].INT+1;
NEWSAVELEVEL(10);SCANLEFTBRAC;PUSHNEST;CURLIST.MODEFIELD:=-102;
CURLIST.AUXFIELD.HH.LH:=1000;10:END;{:1119}{1123:}PROCEDURE MAKEACCENT;
VAR S,T:REAL;P,Q,R:HALFWORD;F:INTERNALFONT;A,H,X,W,DELTA:SCALED;
I:FOURQUARTERS;BEGIN SCANCHARNUM;F:=EQTB[3934].HH.RH;
P:=NEWCHARACTER(F,CURVAL);
IF P<>0 THEN BEGIN X:=FONTINFO[5+PARAMBASE[F]].INT;
S:=FONTINFO[1+PARAMBASE[F]].INT/65536.0;
A:=FONTINFO[WIDTHBASE[F]+FONTINFO[CHARBASE[F]+MEM[P].HH.B1].QQQQ.B0].INT
;DOASSIGNMENT;{1124:}Q:=0;F:=EQTB[3934].HH.RH;
IF(CURCMD=11)OR(CURCMD=12)OR(CURCMD=68)THEN Q:=NEWCHARACTER(F,CURCHR)
ELSE IF CURCMD=16 THEN BEGIN SCANCHARNUM;Q:=NEWCHARACTER(F,CURVAL);
END ELSE BACKINPUT{:1124};
IF Q<>0 THEN{1125:}BEGIN T:=FONTINFO[1+PARAMBASE[F]].INT/65536.0;
I:=FONTINFO[CHARBASE[F]+MEM[Q].HH.B1].QQQQ;
W:=FONTINFO[WIDTHBASE[F]+I.B0].INT;
H:=FONTINFO[HEIGHTBASE[F]+(I.B1)DIV 16].INT;
IF H<>X THEN BEGIN P:=HPACK(P,0,1);MEM[P+4].INT:=X-H;END;
DELTA:=ROUND((W-A)/2.0+H*T-X*S);R:=NEWKERN(DELTA);MEM[R].HH.B1:=2;
MEM[CURLIST.TAILFIELD].HH.RH:=R;MEM[R].HH.RH:=P;
CURLIST.TAILFIELD:=NEWKERN(-A-DELTA);MEM[CURLIST.TAILFIELD].HH.B1:=2;
MEM[P].HH.RH:=CURLIST.TAILFIELD;P:=Q;END{:1125};
MEM[CURLIST.TAILFIELD].HH.RH:=P;CURLIST.TAILFIELD:=P;
CURLIST.AUXFIELD.HH.LH:=1000;END;END;{:1123}{1127:}PROCEDURE ALIGNERROR;
BEGIN IF ABS(ALIGNSTATE)>2 THEN{1128:}BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(1115);END;PRINTCMDCHR(CURCMD,CURCHR);
IF CURTOK=1062 THEN BEGIN BEGIN HELPPTR:=6;HELPLINE[5]:=1116;
HELPLINE[4]:=1117;HELPLINE[3]:=1118;HELPLINE[2]:=1119;HELPLINE[1]:=1120;
HELPLINE[0]:=1121;END;END ELSE BEGIN BEGIN HELPPTR:=5;HELPLINE[4]:=1116;
HELPLINE[3]:=1122;HELPLINE[2]:=1119;HELPLINE[1]:=1120;HELPLINE[0]:=1121;
END;END;ERROR;END{:1128}ELSE BEGIN BACKINPUT;
IF ALIGNSTATE<0 THEN BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(657);END;ALIGNSTATE:=ALIGNSTATE+1;CURTOK:=379;
END ELSE BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(1111);END;
ALIGNSTATE:=ALIGNSTATE-1;CURTOK:=637;END;BEGIN HELPPTR:=3;
HELPLINE[2]:=1112;HELPLINE[1]:=1113;HELPLINE[0]:=1114;END;INSERROR;END;
END;{:1127}{1129:}PROCEDURE NOALIGNERROR;
BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(1115);END;
PRINTESC(527);BEGIN HELPPTR:=2;HELPLINE[1]:=1123;HELPLINE[0]:=1124;END;
ERROR;END;PROCEDURE OMITERROR;BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(1115);END;PRINTESC(530);BEGIN HELPPTR:=2;
HELPLINE[1]:=1125;HELPLINE[0]:=1124;END;ERROR;END;
{:1129}{1131:}PROCEDURE DOENDV;BEGIN BASEPTR:=INPUTPTR;
INPUTSTACK[BASEPTR]:=CURINPUT;
WHILE(INPUTSTACK[BASEPTR].INDEXFIELD<>2)AND(INPUTSTACK[BASEPTR].LOCFIELD
=0)AND(INPUTSTACK[BASEPTR].STATEFIELD=0)DO BASEPTR:=BASEPTR-1;
IF(INPUTSTACK[BASEPTR].INDEXFIELD<>2)OR(INPUTSTACK[BASEPTR].LOCFIELD<>0)
OR(INPUTSTACK[BASEPTR].STATEFIELD<>0)THEN FATALERROR(595);
IF CURGROUP=6 THEN BEGIN ENDGRAF;IF FINCOL THEN FINROW;END ELSE OFFSAVE;
END;{:1131}{1135:}PROCEDURE CSERROR;BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(777);END;PRINTESC(505);BEGIN HELPPTR:=1;
HELPLINE[0]:=1127;END;ERROR;END;
{:1135}{1136:}PROCEDURE PUSHMATH(C:GROUPCODE);BEGIN PUSHNEST;
CURLIST.MODEFIELD:=-203;CURLIST.AUXFIELD.INT:=0;NEWSAVELEVEL(C);END;
{:1136}{1138:}PROCEDURE INITMATH;LABEL 21,40,45,30;VAR W:SCALED;
L:SCALED;S:SCALED;P:HALFWORD;Q:HALFWORD;F:INTERNALFONT;N:INTEGER;
V:SCALED;D:SCALED;BEGIN GETTOKEN;
IF(CURCMD=3)AND(CURLIST.MODEFIELD>0)THEN{1145:}BEGIN IF CURLIST.
HEADFIELD=CURLIST.TAILFIELD THEN BEGIN POPNEST;W:=-1073741823;
END ELSE BEGIN LINEBREAK(EQTB[5270].INT);
{1146:}V:=MEM[JUSTBOX+4].INT+2*FONTINFO[6+PARAMBASE[EQTB[3934].HH.RH]].
INT;W:=-1073741823;P:=MEM[JUSTBOX+5].HH.RH;
WHILE P<>0 DO BEGIN{1147:}21:IF(P>=HIMEMMIN)THEN BEGIN F:=MEM[P].HH.B0;
D:=FONTINFO[WIDTHBASE[F]+FONTINFO[CHARBASE[F]+MEM[P].HH.B1].QQQQ.B0].INT
;GOTO 40;END;CASE MEM[P].HH.B0 OF 0,1,2:BEGIN D:=MEM[P+1].INT;GOTO 40;
END;6:{652:}BEGIN MEM[29988]:=MEM[P+1];MEM[29988].HH.RH:=MEM[P].HH.RH;
P:=29988;GOTO 21;END{:652};11,9:D:=MEM[P+1].INT;
10:{1148:}BEGIN Q:=MEM[P+1].HH.LH;D:=MEM[Q+1].INT;
IF MEM[JUSTBOX+5].HH.B0=1 THEN BEGIN IF(MEM[JUSTBOX+5].HH.B1=MEM[Q].HH.
B0)AND(MEM[Q+2].INT<>0)THEN V:=1073741823;
END ELSE IF MEM[JUSTBOX+5].HH.B0=2 THEN BEGIN IF(MEM[JUSTBOX+5].HH.B1=
MEM[Q].HH.B1)AND(MEM[Q+3].INT<>0)THEN V:=1073741823;END;
IF MEM[P].HH.B1>=100 THEN GOTO 40;END{:1148};8:{1361:}D:=0{:1361};
ELSE D:=0 END{:1147};IF V<1073741823 THEN V:=V+D;GOTO 45;
40:IF V<1073741823 THEN BEGIN V:=V+D;W:=V;END ELSE BEGIN W:=1073741823;
GOTO 30;END;45:P:=MEM[P].HH.RH;END;30:{:1146};END;
{1149:}IF EQTB[3412].HH.RH=0 THEN IF(EQTB[5847].INT<>0)AND(((EQTB[5304].
INT>=0)AND(CURLIST.PGFIELD+2>EQTB[5304].INT))OR(CURLIST.PGFIELD+1<-EQTB[
5304].INT))THEN BEGIN L:=EQTB[5833].INT-ABS(EQTB[5847].INT);
IF EQTB[5847].INT>0 THEN S:=EQTB[5847].INT ELSE S:=0;
END ELSE BEGIN L:=EQTB[5833].INT;S:=0;
END ELSE BEGIN N:=MEM[EQTB[3412].HH.RH].HH.LH;
IF CURLIST.PGFIELD+2>=N THEN P:=EQTB[3412].HH.RH+2*N ELSE P:=EQTB[3412].
HH.RH+2*(CURLIST.PGFIELD+2);S:=MEM[P-1].INT;L:=MEM[P].INT;END{:1149};
PUSHMATH(15);CURLIST.MODEFIELD:=203;EQWORDDEFINE(5307,-1);
EQWORDDEFINE(5843,W);EQWORDDEFINE(5844,L);EQWORDDEFINE(5845,S);
IF EQTB[3416].HH.RH<>0 THEN BEGINTOKENLI(EQTB[3416].HH.RH,9);
IF NESTPTR=1 THEN BUILDPAGE;END{:1145}ELSE BEGIN BACKINPUT;
{1139:}BEGIN PUSHMATH(15);EQWORDDEFINE(5307,-1);
IF EQTB[3415].HH.RH<>0 THEN BEGINTOKENLI(EQTB[3415].HH.RH,8);END{:1139};
END;END;{:1138}{1142:}PROCEDURE STARTEQNO;
BEGIN SAVESTACK[SAVEPTR+0].INT:=CURCHR;SAVEPTR:=SAVEPTR+1;
{1139:}BEGIN PUSHMATH(15);EQWORDDEFINE(5307,-1);
IF EQTB[3415].HH.RH<>0 THEN BEGINTOKENLI(EQTB[3415].HH.RH,8);END{:1139};
END;{:1142}{1151:}PROCEDURE SCANMATH(P:HALFWORD);LABEL 20,21,10;
VAR C:INTEGER;BEGIN 20:{404:}REPEAT GETXTOKEN;
UNTIL(CURCMD<>10)AND(CURCMD<>0){:404};
21:CASE CURCMD OF 11,12,68:BEGIN C:=EQTB[5007+CURCHR].HH.RH;
IF C=32768 THEN BEGIN{1152:}BEGIN CURCS:=CURCHR+1;
CURCMD:=EQTB[CURCS].HH.B0;CURCHR:=EQTB[CURCS].HH.RH;XTOKEN;BACKINPUT;
END{:1152};GOTO 20;END;END;16:BEGIN SCANCHARNUM;CURCHR:=CURVAL;
CURCMD:=68;GOTO 21;END;17:BEGIN SCANFIFTEENB;C:=CURVAL;END;69:C:=CURCHR;
15:BEGIN SCANTWENTYSE;C:=CURVAL DIV 4096;END;ELSE{1153:}BEGIN BACKINPUT;
SCANLEFTBRAC;SAVESTACK[SAVEPTR+0].INT:=P;SAVEPTR:=SAVEPTR+1;PUSHMATH(9);
GOTO 10;END{:1153}END;MEM[P].HH.RH:=1;MEM[P].HH.B1:=C MOD 256;
IF(C>=28672)AND((EQTB[5307].INT>=0)AND(EQTB[5307].INT<16))THEN MEM[P].HH
.B0:=EQTB[5307].INT ELSE MEM[P].HH.B0:=(C DIV 256)MOD 16;10:END;
{:1151}{1155:}PROCEDURE SETMATHCHAR(C:INTEGER);VAR P:HALFWORD;
BEGIN IF C>=32768 THEN{1152:}BEGIN CURCS:=CURCHR+1;
CURCMD:=EQTB[CURCS].HH.B0;CURCHR:=EQTB[CURCS].HH.RH;XTOKEN;BACKINPUT;
END{:1152}ELSE BEGIN P:=NEWNOAD;MEM[P+1].HH.RH:=1;
MEM[P+1].HH.B1:=C MOD 256;MEM[P+1].HH.B0:=(C DIV 256)MOD 16;
IF C>=28672 THEN BEGIN IF((EQTB[5307].INT>=0)AND(EQTB[5307].INT<16))THEN
MEM[P+1].HH.B0:=EQTB[5307].INT;MEM[P].HH.B0:=16;
END ELSE MEM[P].HH.B0:=16+(C DIV 4096);MEM[CURLIST.TAILFIELD].HH.RH:=P;
CURLIST.TAILFIELD:=P;END;END;{:1155}{1159:}PROCEDURE MATHLIMITSWI;
LABEL 10;
BEGIN IF CURLIST.HEADFIELD<>CURLIST.TAILFIELD THEN IF MEM[CURLIST.
TAILFIELD].HH.B0=17 THEN BEGIN MEM[CURLIST.TAILFIELD].HH.B1:=CURCHR;
GOTO 10;END;BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(1131);END;
BEGIN HELPPTR:=1;HELPLINE[0]:=1132;END;ERROR;10:END;
{:1159}{1160:}PROCEDURE SCANDELIMITE(P:HALFWORD;R:BOOLEAN);
BEGIN IF R THEN SCANTWENTYSE ELSE BEGIN{404:}REPEAT GETXTOKEN;
UNTIL(CURCMD<>10)AND(CURCMD<>0){:404};
CASE CURCMD OF 11,12:CURVAL:=EQTB[5574+CURCHR].INT;15:SCANTWENTYSE;
ELSE CURVAL:=-1 END;END;
IF CURVAL<0 THEN{1161:}BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(1133);END;BEGIN HELPPTR:=6;HELPLINE[5]:=1134;HELPLINE[4]:=1135;
HELPLINE[3]:=1136;HELPLINE[2]:=1137;HELPLINE[1]:=1138;HELPLINE[0]:=1139;
END;BACKERROR;CURVAL:=0;END{:1161};
MEM[P].QQQQ.B0:=(CURVAL DIV 1048576)MOD 16;
MEM[P].QQQQ.B1:=(CURVAL DIV 4096)MOD 256;
MEM[P].QQQQ.B2:=(CURVAL DIV 256)MOD 16;MEM[P].QQQQ.B3:=CURVAL MOD 256;
END;{:1160}{1163:}PROCEDURE MATHRADICAL;
BEGIN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=GETNODE(5);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
MEM[CURLIST.TAILFIELD].HH.B0:=24;MEM[CURLIST.TAILFIELD].HH.B1:=0;
MEM[CURLIST.TAILFIELD+1].HH:=EMPTYFIELD;
MEM[CURLIST.TAILFIELD+3].HH:=EMPTYFIELD;
MEM[CURLIST.TAILFIELD+2].HH:=EMPTYFIELD;
SCANDELIMITE(CURLIST.TAILFIELD+4,TRUE);SCANMATH(CURLIST.TAILFIELD+1);
END;{:1163}{1165:}PROCEDURE MATHAC;
BEGIN IF CURCMD=45 THEN{1166:}BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(1140);END;PRINTESC(523);PRINT(1141);BEGIN HELPPTR:=2;
HELPLINE[1]:=1142;HELPLINE[0]:=1143;END;ERROR;END{:1166};
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=GETNODE(5);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
MEM[CURLIST.TAILFIELD].HH.B0:=28;MEM[CURLIST.TAILFIELD].HH.B1:=0;
MEM[CURLIST.TAILFIELD+1].HH:=EMPTYFIELD;
MEM[CURLIST.TAILFIELD+3].HH:=EMPTYFIELD;
MEM[CURLIST.TAILFIELD+2].HH:=EMPTYFIELD;
MEM[CURLIST.TAILFIELD+4].HH.RH:=1;SCANFIFTEENB;
MEM[CURLIST.TAILFIELD+4].HH.B1:=CURVAL MOD 256;
IF(CURVAL>=28672)AND((EQTB[5307].INT>=0)AND(EQTB[5307].INT<16))THEN MEM[
CURLIST.TAILFIELD+4].HH.B0:=EQTB[5307].INT ELSE MEM[CURLIST.TAILFIELD+4]
.HH.B0:=(CURVAL DIV 256)MOD 16;SCANMATH(CURLIST.TAILFIELD+1);END;
{:1165}{1172:}PROCEDURE APPENDCHOICE;
BEGIN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWCHOICE;
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;SAVEPTR:=SAVEPTR+1;
SAVESTACK[SAVEPTR-1].INT:=0;PUSHMATH(13);SCANLEFTBRAC;END;
{:1172}{1174:}{1184:}FUNCTION FINMLIST(P:HALFWORD):HALFWORD;
VAR Q:HALFWORD;
BEGIN IF CURLIST.AUXFIELD.INT<>0 THEN{1185:}BEGIN MEM[CURLIST.AUXFIELD.
INT+3].HH.RH:=3;
MEM[CURLIST.AUXFIELD.INT+3].HH.LH:=MEM[CURLIST.HEADFIELD].HH.RH;
IF P=0 THEN Q:=CURLIST.AUXFIELD.INT ELSE BEGIN Q:=MEM[CURLIST.AUXFIELD.
INT+2].HH.LH;IF MEM[Q].HH.B0<>30 THEN CONFUSION(878);
MEM[CURLIST.AUXFIELD.INT+2].HH.LH:=MEM[Q].HH.RH;
MEM[Q].HH.RH:=CURLIST.AUXFIELD.INT;MEM[CURLIST.AUXFIELD.INT].HH.RH:=P;
END;END{:1185}ELSE BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=P;
Q:=MEM[CURLIST.HEADFIELD].HH.RH;END;POPNEST;FINMLIST:=Q;END;
{:1184}PROCEDURE BUILDCHOICES;LABEL 10;VAR P:HALFWORD;BEGIN UNSAVE;
P:=FINMLIST(0);
CASE SAVESTACK[SAVEPTR-1].INT OF 0:MEM[CURLIST.TAILFIELD+1].HH.LH:=P;
1:MEM[CURLIST.TAILFIELD+1].HH.RH:=P;2:MEM[CURLIST.TAILFIELD+2].HH.LH:=P;
3:BEGIN MEM[CURLIST.TAILFIELD+2].HH.RH:=P;SAVEPTR:=SAVEPTR-1;GOTO 10;
END;END;SAVESTACK[SAVEPTR-1].INT:=SAVESTACK[SAVEPTR-1].INT+1;
PUSHMATH(13);SCANLEFTBRAC;10:END;{:1174}{1176:}PROCEDURE SUBSUP;
VAR T:SMALLNUMBER;P:HALFWORD;BEGIN T:=0;P:=0;
IF CURLIST.TAILFIELD<>CURLIST.HEADFIELD THEN IF(MEM[CURLIST.TAILFIELD].
HH.B0>=16)AND(MEM[CURLIST.TAILFIELD].HH.B0<30)THEN BEGIN P:=CURLIST.
TAILFIELD+2+CURCMD-7;T:=MEM[P].HH.RH;END;
IF(P=0)OR(T<>0)THEN{1177:}BEGIN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=
NEWNOAD;CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
P:=CURLIST.TAILFIELD+2+CURCMD-7;
IF T<>0 THEN BEGIN IF CURCMD=7 THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(1144);END;BEGIN HELPPTR:=1;HELPLINE[0]:=1145;END;
END ELSE BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(1146);END;
BEGIN HELPPTR:=1;HELPLINE[0]:=1147;END;END;ERROR;END;END{:1177};
SCANMATH(P);END;{:1176}{1181:}PROCEDURE MATHFRACTION;VAR C:SMALLNUMBER;
BEGIN C:=CURCHR;
IF CURLIST.AUXFIELD.INT<>0 THEN{1183:}BEGIN IF C>=3 THEN BEGIN
SCANDELIMITE(29988,FALSE);SCANDELIMITE(29988,FALSE);END;
IF C MOD 3=0 THEN SCANDIMEN(FALSE,FALSE,FALSE);
BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(1154);END;
BEGIN HELPPTR:=3;HELPLINE[2]:=1155;HELPLINE[1]:=1156;HELPLINE[0]:=1157;
END;ERROR;END{:1183}ELSE BEGIN CURLIST.AUXFIELD.INT:=GETNODE(6);
MEM[CURLIST.AUXFIELD.INT].HH.B0:=25;MEM[CURLIST.AUXFIELD.INT].HH.B1:=0;
MEM[CURLIST.AUXFIELD.INT+2].HH.RH:=3;
MEM[CURLIST.AUXFIELD.INT+2].HH.LH:=MEM[CURLIST.HEADFIELD].HH.RH;
MEM[CURLIST.AUXFIELD.INT+3].HH:=EMPTYFIELD;
MEM[CURLIST.AUXFIELD.INT+4].QQQQ:=NULLDELIMITE;
MEM[CURLIST.AUXFIELD.INT+5].QQQQ:=NULLDELIMITE;
MEM[CURLIST.HEADFIELD].HH.RH:=0;CURLIST.TAILFIELD:=CURLIST.HEADFIELD;
{1182:}IF C>=3 THEN BEGIN SCANDELIMITE(CURLIST.AUXFIELD.INT+4,FALSE);
SCANDELIMITE(CURLIST.AUXFIELD.INT+5,FALSE);END;
CASE C MOD 3 OF 0:BEGIN SCANDIMEN(FALSE,FALSE,FALSE);
MEM[CURLIST.AUXFIELD.INT+1].INT:=CURVAL;END;
1:MEM[CURLIST.AUXFIELD.INT+1].INT:=1073741824;
2:MEM[CURLIST.AUXFIELD.INT+1].INT:=0;END{:1182};END;END;
{:1181}{1191:}PROCEDURE MATHLEFTRIGH;VAR T:SMALLNUMBER;P:HALFWORD;
BEGIN T:=CURCHR;
IF(T=31)AND(CURGROUP<>16)THEN{1192:}BEGIN IF CURGROUP=15 THEN BEGIN
SCANDELIMITE(29988,FALSE);BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(777);END;PRINTESC(878);BEGIN HELPPTR:=1;HELPLINE[0]:=1158;END;
ERROR;END ELSE OFFSAVE;END{:1192}ELSE BEGIN P:=NEWNOAD;MEM[P].HH.B0:=T;
SCANDELIMITE(P+1,FALSE);IF T=30 THEN BEGIN PUSHMATH(16);
MEM[CURLIST.HEADFIELD].HH.RH:=P;CURLIST.TAILFIELD:=P;
END ELSE BEGIN P:=FINMLIST(P);UNSAVE;
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWNOAD;
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
MEM[CURLIST.TAILFIELD].HH.B0:=23;MEM[CURLIST.TAILFIELD+1].HH.RH:=3;
MEM[CURLIST.TAILFIELD+1].HH.LH:=P;END;END;END;
{:1191}{1194:}PROCEDURE AFTERMATH;VAR L:BOOLEAN;DANGER:BOOLEAN;
M:INTEGER;P:HALFWORD;A:HALFWORD;{1198:}B:HALFWORD;W:SCALED;Z:SCALED;
E:SCALED;Q:SCALED;D:SCALED;S:SCALED;G1,G2:SMALLNUMBER;R:HALFWORD;
T:HALFWORD;{:1198}BEGIN DANGER:=FALSE;
{1195:}IF(FONTPARAMS[EQTB[3937].HH.RH]<22)OR(FONTPARAMS[EQTB[3953].HH.RH
]<22)OR(FONTPARAMS[EQTB[3969].HH.RH]<22)THEN BEGIN BEGIN IF INTERACTION=
3 THEN;PRINTNL(262);PRINT(1159);END;BEGIN HELPPTR:=3;HELPLINE[2]:=1160;
HELPLINE[1]:=1161;HELPLINE[0]:=1162;END;ERROR;FLUSHMATH;DANGER:=TRUE;
END ELSE IF(FONTPARAMS[EQTB[3938].HH.RH]<13)OR(FONTPARAMS[EQTB[3954].HH.
RH]<13)OR(FONTPARAMS[EQTB[3970].HH.RH]<13)THEN BEGIN BEGIN IF
INTERACTION=3 THEN;PRINTNL(262);PRINT(1163);END;BEGIN HELPPTR:=3;
HELPLINE[2]:=1164;HELPLINE[1]:=1165;HELPLINE[0]:=1166;END;ERROR;
FLUSHMATH;DANGER:=TRUE;END{:1195};M:=CURLIST.MODEFIELD;L:=FALSE;
P:=FINMLIST(0);IF CURLIST.MODEFIELD=-M THEN BEGIN{1197:}BEGIN GETXTOKEN;
IF CURCMD<>3 THEN BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(1167);END;BEGIN HELPPTR:=2;HELPLINE[1]:=1168;HELPLINE[0]:=1169;
END;BACKERROR;END;END{:1197};CURMLIST:=P;CURSTYLE:=2;
MLISTPENALTI:=FALSE;MLISTTOHLIST;A:=HPACK(MEM[29997].HH.RH,0,1);UNSAVE;
SAVEPTR:=SAVEPTR-1;IF SAVESTACK[SAVEPTR+0].INT=1 THEN L:=TRUE;
DANGER:=FALSE;
{1195:}IF(FONTPARAMS[EQTB[3937].HH.RH]<22)OR(FONTPARAMS[EQTB[3953].HH.RH
]<22)OR(FONTPARAMS[EQTB[3969].HH.RH]<22)THEN BEGIN BEGIN IF INTERACTION=
3 THEN;PRINTNL(262);PRINT(1159);END;BEGIN HELPPTR:=3;HELPLINE[2]:=1160;
HELPLINE[1]:=1161;HELPLINE[0]:=1162;END;ERROR;FLUSHMATH;DANGER:=TRUE;
END ELSE IF(FONTPARAMS[EQTB[3938].HH.RH]<13)OR(FONTPARAMS[EQTB[3954].HH.
RH]<13)OR(FONTPARAMS[EQTB[3970].HH.RH]<13)THEN BEGIN BEGIN IF
INTERACTION=3 THEN;PRINTNL(262);PRINT(1163);END;BEGIN HELPPTR:=3;
HELPLINE[2]:=1164;HELPLINE[1]:=1165;HELPLINE[0]:=1166;END;ERROR;
FLUSHMATH;DANGER:=TRUE;END{:1195};M:=CURLIST.MODEFIELD;P:=FINMLIST(0);
END ELSE A:=0;
IF M<0 THEN{1196:}BEGIN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWMATH(EQTB
[5831].INT,0);CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
CURMLIST:=P;CURSTYLE:=2;MLISTPENALTI:=(CURLIST.MODEFIELD>0);
MLISTTOHLIST;MEM[CURLIST.TAILFIELD].HH.RH:=MEM[29997].HH.RH;
WHILE MEM[CURLIST.TAILFIELD].HH.RH<>0 DO CURLIST.TAILFIELD:=MEM[CURLIST.
TAILFIELD].HH.RH;
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWMATH(EQTB[5831].INT,1);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
CURLIST.AUXFIELD.HH.LH:=1000;UNSAVE;
END{:1196}ELSE BEGIN IF A=0 THEN{1197:}BEGIN GETXTOKEN;
IF CURCMD<>3 THEN BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(1167);END;BEGIN HELPPTR:=2;HELPLINE[1]:=1168;HELPLINE[0]:=1169;
END;BACKERROR;END;END{:1197};{1199:}CURMLIST:=P;CURSTYLE:=0;
MLISTPENALTI:=FALSE;MLISTTOHLIST;P:=MEM[29997].HH.RH;ADJUSTTAIL:=29995;
B:=HPACK(P,0,1);P:=MEM[B+5].HH.RH;T:=ADJUSTTAIL;ADJUSTTAIL:=0;
W:=MEM[B+1].INT;Z:=EQTB[5844].INT;S:=EQTB[5845].INT;
IF(A=0)OR DANGER THEN BEGIN E:=0;Q:=0;END ELSE BEGIN E:=MEM[A+1].INT;
Q:=E+FONTINFO[6+PARAMBASE[EQTB[3937].HH.RH]].INT;END;
IF W+Q>Z THEN{1201:}BEGIN IF(E<>0)AND((W-TOTALSHRINK[0]+Q<=Z)OR(
TOTALSHRINK[1]<>0)OR(TOTALSHRINK[2]<>0)OR(TOTALSHRINK[3]<>0))THEN BEGIN
FREENODE(B,7);B:=HPACK(P,Z-Q,0);END ELSE BEGIN E:=0;
IF W>Z THEN BEGIN FREENODE(B,7);B:=HPACK(P,Z,0);END;END;W:=MEM[B+1].INT;
END{:1201};{1202:}D:=HALF(Z-W);
IF(E>0)AND(D<2*E)THEN BEGIN D:=HALF(Z-W-E);
IF P<>0 THEN IF NOT(P>=HIMEMMIN)THEN IF MEM[P].HH.B0=10 THEN D:=0;
END{:1202};
{1203:}BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWPENALTY(EQTB[5274].INT);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
IF(D+S<=EQTB[5843].INT)OR L THEN BEGIN G1:=3;G2:=4;END ELSE BEGIN G1:=5;
G2:=6;END;IF L AND(E=0)THEN BEGIN MEM[A+4].INT:=S;APPENDTOVLIS(A);
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWPENALTY(10000);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
END ELSE BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWPARAMGLUE(G1);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END{:1203};
{1204:}IF E<>0 THEN BEGIN R:=NEWKERN(Z-W-E-D);
IF L THEN BEGIN MEM[A].HH.RH:=R;MEM[R].HH.RH:=B;B:=A;D:=0;
END ELSE BEGIN MEM[B].HH.RH:=R;MEM[R].HH.RH:=A;END;B:=HPACK(B,0,1);END;
MEM[B+4].INT:=S+D;APPENDTOVLIS(B){:1204};
{1205:}IF(A<>0)AND(E=0)AND NOT L THEN BEGIN BEGIN MEM[CURLIST.TAILFIELD]
.HH.RH:=NEWPENALTY(10000);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
MEM[A+4].INT:=S+Z-MEM[A+1].INT;APPENDTOVLIS(A);G2:=0;END;
IF T<>29995 THEN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=MEM[29995].HH.RH;
CURLIST.TAILFIELD:=T;END;
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWPENALTY(EQTB[5275].INT);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
IF G2>0 THEN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWPARAMGLUE(G2);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END{:1205};
RESUMEAFTERD{:1199};END;END;{:1194}{1200:}PROCEDURE RESUMEAFTERD;
BEGIN IF CURGROUP<>15 THEN CONFUSION(1170);UNSAVE;
CURLIST.PGFIELD:=CURLIST.PGFIELD+3;PUSHNEST;CURLIST.MODEFIELD:=102;
CURLIST.AUXFIELD.HH.LH:=1000;
IF EQTB[5313].INT<=0 THEN CURLANG:=0 ELSE IF EQTB[5313].INT>255 THEN
CURLANG:=0 ELSE CURLANG:=EQTB[5313].INT;CURLIST.AUXFIELD.HH.RH:=CURLANG;
CURLIST.PGFIELD:=(NORMMIN(EQTB[5314].INT)*64+NORMMIN(EQTB[5315].INT))
*65536+CURLANG;{443:}BEGIN GETXTOKEN;IF CURCMD<>10 THEN BACKINPUT;
END{:443};IF NESTPTR=1 THEN BUILDPAGE;END;
{:1200}{1211:}{1215:}PROCEDURE GETRTOKEN;LABEL 20;
BEGIN 20:REPEAT GETTOKEN;UNTIL CURTOK<>2592;
IF(CURCS=0)OR(CURCS>2614)THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(1185);END;BEGIN HELPPTR:=5;HELPLINE[4]:=1186;
HELPLINE[3]:=1187;HELPLINE[2]:=1188;HELPLINE[1]:=1189;HELPLINE[0]:=1190;
END;IF CURCS=0 THEN BACKINPUT;CURTOK:=6709;INSERROR;GOTO 20;END;END;
{:1215}{1229:}PROCEDURE TRAPZEROGLUE;
BEGIN IF(MEM[CURVAL+1].INT=0)AND(MEM[CURVAL+2].INT=0)AND(MEM[CURVAL+3].
INT=0)THEN BEGIN MEM[0].HH.RH:=MEM[0].HH.RH+1;DELETEGLUERE(CURVAL);
CURVAL:=0;END;END;{:1229}{1236:}PROCEDURE DOREGISTERCO(A:SMALLNUMBER);
LABEL 40,10;VAR L,Q,R,S:HALFWORD;P:0..3;BEGIN Q:=CURCMD;
{1237:}BEGIN IF Q<>89 THEN BEGIN GETXTOKEN;
IF(CURCMD>=73)AND(CURCMD<=76)THEN BEGIN L:=CURCHR;P:=CURCMD-73;GOTO 40;
END;IF CURCMD<>89 THEN BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(685);END;PRINTCMDCHR(CURCMD,CURCHR);PRINT(686);PRINTCMDCHR(Q,0);
BEGIN HELPPTR:=1;HELPLINE[0]:=1211;END;ERROR;GOTO 10;END;END;P:=CURCHR;
SCANEIGHTBIT;CASE P OF 0:L:=CURVAL+5318;1:L:=CURVAL+5851;
2:L:=CURVAL+2900;3:L:=CURVAL+3156;END;END;40:{:1237};
IF Q=89 THEN SCANOPTIONAL ELSE IF SCANKEYWORD(1207)THEN;
ARITHERROR:=FALSE;
IF Q<91 THEN{1238:}IF P<2 THEN BEGIN IF P=0 THEN SCANINT ELSE SCANDIMEN(
FALSE,FALSE,FALSE);IF Q=90 THEN CURVAL:=CURVAL+EQTB[L].INT;
END ELSE BEGIN SCANGLUE(P);IF Q=90 THEN{1239:}BEGIN Q:=NEWSPEC(CURVAL);
R:=EQTB[L].HH.RH;DELETEGLUERE(CURVAL);
MEM[Q+1].INT:=MEM[Q+1].INT+MEM[R+1].INT;
IF MEM[Q+2].INT=0 THEN MEM[Q].HH.B0:=0;
IF MEM[Q].HH.B0=MEM[R].HH.B0 THEN MEM[Q+2].INT:=MEM[Q+2].INT+MEM[R+2].
INT ELSE IF(MEM[Q].HH.B0<MEM[R].HH.B0)AND(MEM[R+2].INT<>0)THEN BEGIN MEM
[Q+2].INT:=MEM[R+2].INT;MEM[Q].HH.B0:=MEM[R].HH.B0;END;
IF MEM[Q+3].INT=0 THEN MEM[Q].HH.B1:=0;
IF MEM[Q].HH.B1=MEM[R].HH.B1 THEN MEM[Q+3].INT:=MEM[Q+3].INT+MEM[R+3].
INT ELSE IF(MEM[Q].HH.B1<MEM[R].HH.B1)AND(MEM[R+3].INT<>0)THEN BEGIN MEM
[Q+3].INT:=MEM[R+3].INT;MEM[Q].HH.B1:=MEM[R].HH.B1;END;CURVAL:=Q;
END{:1239};END{:1238}ELSE{1240:}BEGIN SCANINT;
IF P<2 THEN IF Q=91 THEN IF P=0 THEN CURVAL:=MULTANDADD(EQTB[L].INT,
CURVAL,0,2147483647)ELSE CURVAL:=MULTANDADD(EQTB[L].INT,CURVAL,0,
1073741823)ELSE CURVAL:=XOVERN(EQTB[L].INT,CURVAL)ELSE BEGIN S:=EQTB[L].
HH.RH;R:=NEWSPEC(S);
IF Q=91 THEN BEGIN MEM[R+1].INT:=MULTANDADD(MEM[S+1].INT,CURVAL,0,
1073741823);MEM[R+2].INT:=MULTANDADD(MEM[S+2].INT,CURVAL,0,1073741823);
MEM[R+3].INT:=MULTANDADD(MEM[S+3].INT,CURVAL,0,1073741823);
END ELSE BEGIN MEM[R+1].INT:=XOVERN(MEM[S+1].INT,CURVAL);
MEM[R+2].INT:=XOVERN(MEM[S+2].INT,CURVAL);
MEM[R+3].INT:=XOVERN(MEM[S+3].INT,CURVAL);END;CURVAL:=R;END;END{:1240};
IF ARITHERROR THEN BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(1208);END;BEGIN HELPPTR:=2;HELPLINE[1]:=1209;HELPLINE[0]:=1210;
END;IF P>=2 THEN DELETEGLUERE(CURVAL);ERROR;GOTO 10;END;
IF P<2 THEN IF(A>=4)THEN GEQWORDDEFIN(L,CURVAL)ELSE EQWORDDEFINE(L,
CURVAL)ELSE BEGIN TRAPZEROGLUE;
IF(A>=4)THEN GEQDEFINE(L,117,CURVAL)ELSE EQDEFINE(L,117,CURVAL);END;
10:END;{:1236}{1243:}PROCEDURE ALTERAUX;VAR C:HALFWORD;
BEGIN IF CURCHR<>ABS(CURLIST.MODEFIELD)THEN REPORTILLEGA ELSE BEGIN C:=
CURCHR;SCANOPTIONAL;IF C=1 THEN BEGIN SCANDIMEN(FALSE,FALSE,FALSE);
CURLIST.AUXFIELD.INT:=CURVAL;END ELSE BEGIN SCANINT;
IF(CURVAL<=0)OR(CURVAL>32767)THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(1214);END;BEGIN HELPPTR:=1;HELPLINE[0]:=1215;END;
INTERROR(CURVAL);END ELSE CURLIST.AUXFIELD.HH.LH:=CURVAL;END;END;END;
{:1243}{1244:}PROCEDURE ALTERPREVGRA;VAR P:0..NESTSIZE;
BEGIN NEST[NESTPTR]:=CURLIST;P:=NESTPTR;
WHILE ABS(NEST[P].MODEFIELD)<>1 DO P:=P-1;SCANOPTIONAL;SCANINT;
IF CURVAL<0 THEN BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(956);END;PRINTESC(532);BEGIN HELPPTR:=1;HELPLINE[0]:=1216;END;
INTERROR(CURVAL);END ELSE BEGIN NEST[P].PGFIELD:=CURVAL;
CURLIST:=NEST[NESTPTR];END;END;{:1244}{1245:}PROCEDURE ALTERPAGESOF;
VAR C:0..7;BEGIN C:=CURCHR;SCANOPTIONAL;SCANDIMEN(FALSE,FALSE,FALSE);
PAGESOFAR[C]:=CURVAL;END;{:1245}{1246:}PROCEDURE ALTERINTEGER;
VAR C:0..1;BEGIN C:=CURCHR;SCANOPTIONAL;SCANINT;
IF C=0 THEN DEADCYCLES:=CURVAL ELSE INSERTPENALT:=CURVAL;END;
{:1246}{1247:}PROCEDURE ALTERBOXDIME;VAR C:SMALLNUMBER;B:EIGHTBITS;
BEGIN C:=CURCHR;SCANEIGHTBIT;B:=CURVAL;SCANOPTIONAL;
SCANDIMEN(FALSE,FALSE,FALSE);
IF EQTB[3678+B].HH.RH<>0 THEN MEM[EQTB[3678+B].HH.RH+C].INT:=CURVAL;END;
{:1247}{1257:}PROCEDURE NEWFONT(A:SMALLNUMBER);LABEL 50;VAR U:HALFWORD;
S:SCALED;F:INTERNALFONT;T:STRNUMBER;OLDSETTING:0..21;
FLUSHABLESTR:STRNUMBER;BEGIN IF JOBNAME=0 THEN OPENLOGFILE;GETRTOKEN;
U:=CURCS;
IF U>=514 THEN T:=HASH[U].RH ELSE IF U>=257 THEN IF U=513 THEN T:=1220
ELSE T:=U-257 ELSE BEGIN OLDSETTING:=SELECTOR;SELECTOR:=21;PRINT(1220);
PRINT(U-1);SELECTOR:=OLDSETTING;
BEGIN IF POOLPTR+1>POOLSIZE THEN OVERFLOW(257,POOLSIZE-INITPOOLPTR);END;
T:=MAKESTRING;END;IF(A>=4)THEN GEQDEFINE(U,87,0)ELSE EQDEFINE(U,87,0);
SCANOPTIONAL;SCANFILENAME;{1258:}NAMEINPROGRE:=TRUE;
IF SCANKEYWORD(1221)THEN{1259:}BEGIN SCANDIMEN(FALSE,FALSE,FALSE);
S:=CURVAL;
IF(S<=0)OR(S>=134217728)THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(1223);END;PRINTSCALED(S);PRINT(1224);
BEGIN HELPPTR:=2;HELPLINE[1]:=1225;HELPLINE[0]:=1226;END;ERROR;
S:=10*65536;END;END{:1259}ELSE IF SCANKEYWORD(1222)THEN BEGIN SCANINT;
S:=-CURVAL;
IF(CURVAL<=0)OR(CURVAL>32768)THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(552);END;BEGIN HELPPTR:=1;HELPLINE[0]:=553;END;
INTERROR(CURVAL);S:=-1000;END;END ELSE S:=-1000;
NAMEINPROGRE:=FALSE{:1258};{1260:}FLUSHABLESTR:=STRPTR-1;
FOR F:=1 TO FONTPTR DO IF STREQSTR(FONTNAME[F],CURNAME)AND STREQSTR(
FONTAREA[F],CURAREA)THEN BEGIN IF CURNAME=FLUSHABLESTR THEN BEGIN BEGIN
STRPTR:=STRPTR-1;POOLPTR:=STRSTART[STRPTR];END;CURNAME:=FONTNAME[F];END;
IF S>0 THEN BEGIN IF S=FONTSIZE[F]THEN GOTO 50;
END ELSE IF FONTSIZE[F]=XNOVERD(FONTDSIZE[F],-S,1000)THEN GOTO 50;
END{:1260};F:=READFONTINFO(U,CURNAME,CURAREA,S);50:EQTB[U].HH.RH:=F;
EQTB[2624+F]:=EQTB[U];HASH[2624+F].RH:=T;END;
{:1257}{1265:}PROCEDURE NEWINTERACTI;BEGIN PRINTNL(338);
INTERACTION:=CURCHR;
{75:}IF INTERACTION=0 THEN SELECTOR:=16 ELSE SELECTOR:=17{:75};
IF LOGOPENED THEN SELECTOR:=SELECTOR+2;END;
{:1265}PROCEDURE PREFIXEDCOMM;LABEL 30,10;VAR A:SMALLNUMBER;
F:INTERNALFONT;J:HALFWORD;K:FONTINDEX;P,Q:HALFWORD;N:INTEGER;E:BOOLEAN;
BEGIN A:=0;
WHILE CURCMD=93 DO BEGIN IF NOT ODD(A DIV CURCHR)THEN A:=A+CURCHR;
{404:}REPEAT GETXTOKEN;UNTIL(CURCMD<>10)AND(CURCMD<>0){:404};
IF CURCMD<=70 THEN{1212:}BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(1180);END;PRINTCMDCHR(CURCMD,CURCHR);PRINTCHAR(39);
BEGIN HELPPTR:=1;HELPLINE[0]:=1181;END;BACKERROR;GOTO 10;END{:1212};END;
{1213:}IF(CURCMD<>97)AND(A MOD 4<>0)THEN BEGIN BEGIN IF INTERACTION=3
THEN;PRINTNL(262);PRINT(685);END;PRINTESC(1172);PRINT(1182);
PRINTESC(1173);PRINT(1183);PRINTCMDCHR(CURCMD,CURCHR);PRINTCHAR(39);
BEGIN HELPPTR:=1;HELPLINE[0]:=1184;END;ERROR;END{:1213};
{1214:}IF EQTB[5306].INT<>0 THEN IF EQTB[5306].INT<0 THEN BEGIN IF(A>=4)
THEN A:=A-4;END ELSE BEGIN IF NOT(A>=4)THEN A:=A+4;END{:1214};
CASE CURCMD OF{1217:}87:IF(A>=4)THEN GEQDEFINE(3934,120,CURCHR)ELSE
EQDEFINE(3934,120,CURCHR);
{:1217}{1218:}97:BEGIN IF ODD(CURCHR)AND NOT(A>=4)AND(EQTB[5306].INT>=0)
THEN A:=A+4;E:=(CURCHR>=2);GETRTOKEN;P:=CURCS;Q:=SCANTOKS(TRUE,E);
IF(A>=4)THEN GEQDEFINE(P,111+(A MOD 4),DEFREF)ELSE EQDEFINE(P,111+(A MOD
4),DEFREF);END;{:1218}{1221:}94:BEGIN N:=CURCHR;GETRTOKEN;P:=CURCS;
IF N=0 THEN BEGIN REPEAT GETTOKEN;UNTIL CURCMD<>10;
IF CURTOK=3133 THEN BEGIN GETTOKEN;IF CURCMD=10 THEN GETTOKEN;END;
END ELSE BEGIN GETTOKEN;Q:=CURTOK;GETTOKEN;BACKINPUT;CURTOK:=Q;
BACKINPUT;END;
IF CURCMD>=111 THEN MEM[CURCHR].HH.LH:=MEM[CURCHR].HH.LH+1;
IF(A>=4)THEN GEQDEFINE(P,CURCMD,CURCHR)ELSE EQDEFINE(P,CURCMD,CURCHR);
END;{:1221}{1224:}95:BEGIN N:=CURCHR;GETRTOKEN;P:=CURCS;
IF(A>=4)THEN GEQDEFINE(P,0,256)ELSE EQDEFINE(P,0,256);SCANOPTIONAL;
CASE N OF 0:BEGIN SCANCHARNUM;
IF(A>=4)THEN GEQDEFINE(P,68,CURVAL)ELSE EQDEFINE(P,68,CURVAL);END;
1:BEGIN SCANFIFTEENB;
IF(A>=4)THEN GEQDEFINE(P,69,CURVAL)ELSE EQDEFINE(P,69,CURVAL);END;
ELSE BEGIN SCANEIGHTBIT;
CASE N OF 2:IF(A>=4)THEN GEQDEFINE(P,73,5318+CURVAL)ELSE EQDEFINE(P,73,
5318+CURVAL);
3:IF(A>=4)THEN GEQDEFINE(P,74,5851+CURVAL)ELSE EQDEFINE(P,74,5851+CURVAL
);
4:IF(A>=4)THEN GEQDEFINE(P,75,2900+CURVAL)ELSE EQDEFINE(P,75,2900+CURVAL
);
5:IF(A>=4)THEN GEQDEFINE(P,76,3156+CURVAL)ELSE EQDEFINE(P,76,3156+CURVAL
);
6:IF(A>=4)THEN GEQDEFINE(P,72,3422+CURVAL)ELSE EQDEFINE(P,72,3422+CURVAL
);END;END END;END;{:1224}{1225:}96:BEGIN SCANINT;N:=CURVAL;
IF NOT SCANKEYWORD(843)THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(1074);END;BEGIN HELPPTR:=2;HELPLINE[1]:=1201;
HELPLINE[0]:=1202;END;ERROR;END;GETRTOKEN;P:=CURCS;READTOKS(N,P);
IF(A>=4)THEN GEQDEFINE(P,111,CURVAL)ELSE EQDEFINE(P,111,CURVAL);END;
{:1225}{1226:}71,72:BEGIN Q:=CURCS;IF CURCMD=71 THEN BEGIN SCANEIGHTBIT;
P:=3422+CURVAL;END ELSE P:=CURCHR;SCANOPTIONAL;{404:}REPEAT GETXTOKEN;
UNTIL(CURCMD<>10)AND(CURCMD<>0){:404};
IF CURCMD<>1 THEN{1227:}BEGIN IF CURCMD=71 THEN BEGIN SCANEIGHTBIT;
CURCMD:=72;CURCHR:=3422+CURVAL;END;
IF CURCMD=72 THEN BEGIN Q:=EQTB[CURCHR].HH.RH;
IF Q=0 THEN IF(A>=4)THEN GEQDEFINE(P,101,0)ELSE EQDEFINE(P,101,0)ELSE
BEGIN MEM[Q].HH.LH:=MEM[Q].HH.LH+1;
IF(A>=4)THEN GEQDEFINE(P,111,Q)ELSE EQDEFINE(P,111,Q);END;GOTO 30;END;
END{:1227};BACKINPUT;CURCS:=Q;Q:=SCANTOKS(FALSE,FALSE);
IF MEM[DEFREF].HH.RH=0 THEN BEGIN IF(A>=4)THEN GEQDEFINE(P,101,0)ELSE
EQDEFINE(P,101,0);BEGIN MEM[DEFREF].HH.RH:=AVAIL;AVAIL:=DEFREF;
DYNUSED:=DYNUSED-1;END;
END ELSE BEGIN IF P=3413 THEN BEGIN MEM[Q].HH.RH:=GETAVAIL;
Q:=MEM[Q].HH.RH;MEM[Q].HH.LH:=637;Q:=GETAVAIL;MEM[Q].HH.LH:=379;
MEM[Q].HH.RH:=MEM[DEFREF].HH.RH;MEM[DEFREF].HH.RH:=Q;END;
IF(A>=4)THEN GEQDEFINE(P,111,DEFREF)ELSE EQDEFINE(P,111,DEFREF);END;END;
{:1226}{1228:}73:BEGIN P:=CURCHR;SCANOPTIONAL;SCANINT;
IF(A>=4)THEN GEQWORDDEFIN(P,CURVAL)ELSE EQWORDDEFINE(P,CURVAL);END;
74:BEGIN P:=CURCHR;SCANOPTIONAL;SCANDIMEN(FALSE,FALSE,FALSE);
IF(A>=4)THEN GEQWORDDEFIN(P,CURVAL)ELSE EQWORDDEFINE(P,CURVAL);END;
75,76:BEGIN P:=CURCHR;N:=CURCMD;SCANOPTIONAL;
IF N=76 THEN SCANGLUE(3)ELSE SCANGLUE(2);TRAPZEROGLUE;
IF(A>=4)THEN GEQDEFINE(P,117,CURVAL)ELSE EQDEFINE(P,117,CURVAL);END;
{:1228}{1232:}85:BEGIN{1233:}IF CURCHR=3983 THEN N:=15 ELSE IF CURCHR=
5007 THEN N:=32768 ELSE IF CURCHR=4751 THEN N:=32767 ELSE IF CURCHR=5574
THEN N:=16777215 ELSE N:=255{:1233};P:=CURCHR;SCANCHARNUM;P:=P+CURVAL;
SCANOPTIONAL;SCANINT;
IF((CURVAL<0)AND(P<5574))OR(CURVAL>N)THEN BEGIN BEGIN IF INTERACTION=3
THEN;PRINTNL(262);PRINT(1203);END;PRINTINT(CURVAL);
IF P<5574 THEN PRINT(1204)ELSE PRINT(1205);PRINTINT(N);BEGIN HELPPTR:=1;
HELPLINE[0]:=1206;END;ERROR;CURVAL:=0;END;
IF P<5007 THEN IF(A>=4)THEN GEQDEFINE(P,120,CURVAL)ELSE EQDEFINE(P,120,
CURVAL)ELSE IF P<5574 THEN IF(A>=4)THEN GEQDEFINE(P,120,CURVAL)ELSE
EQDEFINE(P,120,CURVAL)ELSE IF(A>=4)THEN GEQWORDDEFIN(P,CURVAL)ELSE
EQWORDDEFINE(P,CURVAL);END;{:1232}{1234:}86:BEGIN P:=CURCHR;
SCANFOURBITI;P:=P+CURVAL;SCANOPTIONAL;SCANFONTIDEN;
IF(A>=4)THEN GEQDEFINE(P,120,CURVAL)ELSE EQDEFINE(P,120,CURVAL);END;
{:1234}{1235:}89,90,91,92:DOREGISTERCO(A);
{:1235}{1241:}98:BEGIN SCANEIGHTBIT;
IF(A>=4)THEN N:=256+CURVAL ELSE N:=CURVAL;SCANOPTIONAL;
IF SETBOXALLOWE THEN SCANBOX(1073741824+N)ELSE BEGIN BEGIN IF
INTERACTION=3 THEN;PRINTNL(262);PRINT(680);END;PRINTESC(536);
BEGIN HELPPTR:=2;HELPLINE[1]:=1212;HELPLINE[0]:=1213;END;ERROR;END;END;
{:1241}{1242:}79:ALTERAUX;80:ALTERPREVGRA;81:ALTERPAGESOF;
82:ALTERINTEGER;83:ALTERBOXDIME;{:1242}{1248:}84:BEGIN SCANOPTIONAL;
SCANINT;N:=CURVAL;IF N<=0 THEN P:=0 ELSE BEGIN P:=GETNODE(2*N+1);
MEM[P].HH.LH:=N;FOR J:=1 TO N DO BEGIN SCANDIMEN(FALSE,FALSE,FALSE);
MEM[P+2*J-1].INT:=CURVAL;SCANDIMEN(FALSE,FALSE,FALSE);
MEM[P+2*J].INT:=CURVAL;END;END;
IF(A>=4)THEN GEQDEFINE(3412,118,P)ELSE EQDEFINE(3412,118,P);END;
{:1248}{1252:}99:IF CURCHR=1 THEN BEGIN NEWPATTERNS;GOTO 30;
BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(1217);END;HELPPTR:=0;
ERROR;REPEAT GETTOKEN;UNTIL CURCMD=2;GOTO 10;
END ELSE BEGIN NEWHYPHEXCEP;GOTO 30;END;
{:1252}{1253:}77:BEGIN FINDFONTDIME(TRUE);K:=CURVAL;SCANOPTIONAL;
SCANDIMEN(FALSE,FALSE,FALSE);FONTINFO[K].INT:=CURVAL;END;
78:BEGIN N:=CURCHR;SCANFONTIDEN;F:=CURVAL;SCANOPTIONAL;SCANINT;
IF N=0 THEN HYPHENCHAR[F]:=CURVAL ELSE SKEWCHAR[F]:=CURVAL;END;
{:1253}{1256:}88:NEWFONT(A);{:1256}{1264:}100:NEWINTERACTI;
{:1264}ELSE CONFUSION(1179)END;
30:{1269:}IF AFTERTOKEN<>0 THEN BEGIN CURTOK:=AFTERTOKEN;BACKINPUT;
AFTERTOKEN:=0;END{:1269};10:END;{:1211}{1270:}PROCEDURE DOASSIGNMENT;
LABEL 10;BEGIN WHILE TRUE DO BEGIN{404:}REPEAT GETXTOKEN;
UNTIL(CURCMD<>10)AND(CURCMD<>0){:404};IF CURCMD<=70 THEN GOTO 10;
SETBOXALLOWE:=FALSE;PREFIXEDCOMM;SETBOXALLOWE:=TRUE;END;10:END;
{:1270}{1275:}PROCEDURE OPENORCLOSEI;VAR C:0..1;N:0..15;BEGIN C:=CURCHR;
SCANFOURBITI;N:=CURVAL;IF READOPEN[N]<>2 THEN BEGIN ACLOSE(READFILE[N]);
READOPEN[N]:=2;END;IF C<>0 THEN BEGIN SCANOPTIONAL;SCANFILENAME;
IF CUREXT=338 THEN CUREXT:=791;PACKFILENAME(CURNAME,CURAREA,CUREXT);
IF AOPENIN(READFILE[N])THEN READOPEN[N]:=1;END;END;
{:1275}{1279:}PROCEDURE ISSUEMESSAGE;VAR OLDSETTING:0..21;C:0..1;
S:STRNUMBER;BEGIN C:=CURCHR;MEM[29988].HH.RH:=SCANTOKS(FALSE,TRUE);
OLDSETTING:=SELECTOR;SELECTOR:=21;TOKENSHOW(DEFREF);
SELECTOR:=OLDSETTING;FLUSHLIST(DEFREF);
BEGIN IF POOLPTR+1>POOLSIZE THEN OVERFLOW(257,POOLSIZE-INITPOOLPTR);END;
S:=MAKESTRING;
IF C=0 THEN{1280:}BEGIN IF TERMOFFSET+(STRSTART[S+1]-STRSTART[S])>
MAXPRINTLINE-2 THEN PRINTLN ELSE IF(TERMOFFSET>0)OR(FILEOFFSET>0)THEN
PRINTCHAR(32);SLOWPRINT(S);FLUSH(OUTPUT);
END{:1280}ELSE{1283:}BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(338);END;SLOWPRINT(S);
IF EQTB[3421].HH.RH<>0 THEN USEERRHELP:=TRUE ELSE IF LONGHELPSEEN THEN
BEGIN HELPPTR:=1;HELPLINE[0]:=1233;
END ELSE BEGIN IF INTERACTION<3 THEN LONGHELPSEEN:=TRUE;
BEGIN HELPPTR:=4;HELPLINE[3]:=1234;HELPLINE[2]:=1235;HELPLINE[1]:=1236;
HELPLINE[0]:=1237;END;END;ERROR;USEERRHELP:=FALSE;END{:1283};
BEGIN STRPTR:=STRPTR-1;POOLPTR:=STRSTART[STRPTR];END;END;
{:1279}{1288:}PROCEDURE SHIFTCASE;VAR B:HALFWORD;P:HALFWORD;T:HALFWORD;
C:EIGHTBITS;BEGIN B:=CURCHR;P:=SCANTOKS(FALSE,FALSE);
P:=MEM[DEFREF].HH.RH;WHILE P<>0 DO BEGIN{1289:}T:=MEM[P].HH.LH;
IF T<4352 THEN BEGIN C:=T MOD 256;
IF EQTB[B+C].HH.RH<>0 THEN MEM[P].HH.LH:=T-C+EQTB[B+C].HH.RH;END{:1289};
P:=MEM[P].HH.RH;END;BEGINTOKENLI(MEM[DEFREF].HH.RH,3);
BEGIN MEM[DEFREF].HH.RH:=AVAIL;AVAIL:=DEFREF;DYNUSED:=DYNUSED-1;END;END;
{:1288}{1293:}PROCEDURE SHOWWHATEVER;LABEL 50;VAR P:HALFWORD;
BEGIN CASE CURCHR OF 3:BEGIN BEGINDIAGNOS;SHOWACTIVITI;END;
1:{1296:}BEGIN SCANEIGHTBIT;BEGINDIAGNOS;PRINTNL(1255);PRINTINT(CURVAL);
PRINTCHAR(61);
IF EQTB[3678+CURVAL].HH.RH=0 THEN PRINT(410)ELSE SHOWBOX(EQTB[3678+
CURVAL].HH.RH);END{:1296};0:{1294:}BEGIN GETTOKEN;IF INTERACTION=3 THEN;
PRINTNL(1249);IF CURCS<>0 THEN BEGIN SPRINTCS(CURCS);PRINTCHAR(61);END;
PRINTMEANING;GOTO 50;END{:1294};ELSE{1297:}BEGIN P:=THETOKS;
IF INTERACTION=3 THEN;PRINTNL(1249);TOKENSHOW(29997);
FLUSHLIST(MEM[29997].HH.RH);GOTO 50;END{:1297}END;
{1298:}ENDDIAGNOSTI(TRUE);BEGIN IF INTERACTION=3 THEN;PRINTNL(262);
PRINT(1256);END;
IF SELECTOR=19 THEN IF EQTB[5292].INT<=0 THEN BEGIN SELECTOR:=17;
PRINT(1257);SELECTOR:=19;END{:1298};
50:IF INTERACTION<3 THEN BEGIN HELPPTR:=0;ERRORCOUNT:=ERRORCOUNT-1;
END ELSE IF EQTB[5292].INT>0 THEN BEGIN BEGIN HELPPTR:=3;
HELPLINE[2]:=1244;HELPLINE[1]:=1245;HELPLINE[0]:=1246;END;
END ELSE BEGIN BEGIN HELPPTR:=5;HELPLINE[4]:=1244;HELPLINE[3]:=1245;
HELPLINE[2]:=1246;HELPLINE[1]:=1247;HELPLINE[0]:=1248;END;END;ERROR;END;
{:1293}{1302:}PROCEDURE STOREFMTFILE;LABEL 41,42,31,32;
VAR J,K,L:INTEGER;P,Q:HALFWORD;X:INTEGER;W:FOURQUARTERS;
BEGIN{1304:}IF SAVEPTR<>0 THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(1259);END;BEGIN HELPPTR:=1;HELPLINE[0]:=1260;END;
BEGIN IF INTERACTION=3 THEN INTERACTION:=2;IF LOGOPENED THEN ERROR;
{IF INTERACTION>0 THEN DEBUGHELP;}HISTORY:=3;JUMPOUT;END;END{:1304};
{1328:}SELECTOR:=21;PRINT(1273);PRINT(JOBNAME);PRINTCHAR(32);
PRINTINT(EQTB[5286].INT);PRINTCHAR(46);PRINTINT(EQTB[5285].INT);
PRINTCHAR(46);PRINTINT(EQTB[5284].INT);PRINTCHAR(41);
IF INTERACTION=0 THEN SELECTOR:=18 ELSE SELECTOR:=19;
BEGIN IF POOLPTR+1>POOLSIZE THEN OVERFLOW(257,POOLSIZE-INITPOOLPTR);END;
FORMATIDENT:=MAKESTRING;PACKJOBNAME(786);
WHILE NOT WOPENOUT(FMTFILE)DO PROMPTFILENA(1274,786);PRINTNL(1275);
SLOWPRINT(WMAKENAMESTR(FMTFILE));BEGIN STRPTR:=STRPTR-1;
POOLPTR:=STRSTART[STRPTR];END;PRINTNL(338);
SLOWPRINT(FORMATIDENT){:1328};{1307:}BEGIN FMTFILE^.INT:=305924274;
PUT(FMTFILE);END;BEGIN FMTFILE^.INT:=0;PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=30000;PUT(FMTFILE);END;BEGIN FMTFILE^.INT:=6106;
PUT(FMTFILE);END;BEGIN FMTFILE^.INT:=1777;PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=307;PUT(FMTFILE);END{:1307};
{1309:}BEGIN FMTFILE^.INT:=POOLPTR;PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=STRPTR;PUT(FMTFILE);END;
FOR K:=0 TO STRPTR DO BEGIN FMTFILE^.INT:=STRSTART[K];PUT(FMTFILE);END;
K:=0;WHILE K+4<POOLPTR DO BEGIN W.B0:=STRPOOL[K];W.B1:=STRPOOL[K+1];
W.B2:=STRPOOL[K+2];W.B3:=STRPOOL[K+3];BEGIN FMTFILE^.QQQQ:=W;
PUT(FMTFILE);END;K:=K+4;END;K:=POOLPTR-4;W.B0:=STRPOOL[K];
W.B1:=STRPOOL[K+1];W.B2:=STRPOOL[K+2];W.B3:=STRPOOL[K+3];
BEGIN FMTFILE^.QQQQ:=W;PUT(FMTFILE);END;PRINTLN;PRINTINT(STRPTR);
PRINT(1261);PRINTINT(POOLPTR){:1309};{1311:}SORTAVAIL;VARUSED:=0;
BEGIN FMTFILE^.INT:=LOMEMMAX;PUT(FMTFILE);END;BEGIN FMTFILE^.INT:=ROVER;
PUT(FMTFILE);END;P:=0;Q:=ROVER;X:=0;
REPEAT FOR K:=P TO Q+1 DO BEGIN FMTFILE^:=MEM[K];PUT(FMTFILE);END;
X:=X+Q+2-P;VARUSED:=VARUSED+Q-P;P:=Q+MEM[Q].HH.LH;Q:=MEM[Q+1].HH.RH;
UNTIL Q=ROVER;VARUSED:=VARUSED+LOMEMMAX-P;DYNUSED:=MEMEND+1-HIMEMMIN;
FOR K:=P TO LOMEMMAX DO BEGIN FMTFILE^:=MEM[K];PUT(FMTFILE);END;
X:=X+LOMEMMAX+1-P;BEGIN FMTFILE^.INT:=HIMEMMIN;PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=AVAIL;PUT(FMTFILE);END;
FOR K:=HIMEMMIN TO MEMEND DO BEGIN FMTFILE^:=MEM[K];PUT(FMTFILE);END;
X:=X+MEMEND+1-HIMEMMIN;P:=AVAIL;WHILE P<>0 DO BEGIN DYNUSED:=DYNUSED-1;
P:=MEM[P].HH.RH;END;BEGIN FMTFILE^.INT:=VARUSED;PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=DYNUSED;PUT(FMTFILE);END;PRINTLN;PRINTINT(X);
PRINT(1262);PRINTINT(VARUSED);PRINTCHAR(38);PRINTINT(DYNUSED){:1311};
{1313:}{1315:}K:=1;REPEAT J:=K;
WHILE J<5262 DO BEGIN IF(EQTB[J].HH.RH=EQTB[J+1].HH.RH)AND(EQTB[J].HH.B0
=EQTB[J+1].HH.B0)AND(EQTB[J].HH.B1=EQTB[J+1].HH.B1)THEN GOTO 41;J:=J+1;
END;L:=5263;GOTO 31;41:J:=J+1;L:=J;
WHILE J<5262 DO BEGIN IF(EQTB[J].HH.RH<>EQTB[J+1].HH.RH)OR(EQTB[J].HH.B0
<>EQTB[J+1].HH.B0)OR(EQTB[J].HH.B1<>EQTB[J+1].HH.B1)THEN GOTO 31;J:=J+1;
END;31:BEGIN FMTFILE^.INT:=L-K;PUT(FMTFILE);END;
WHILE K<L DO BEGIN BEGIN FMTFILE^:=EQTB[K];PUT(FMTFILE);END;K:=K+1;END;
K:=J+1;BEGIN FMTFILE^.INT:=K-L;PUT(FMTFILE);END;UNTIL K=5263{:1315};
{1316:}REPEAT J:=K;
WHILE J<6106 DO BEGIN IF EQTB[J].INT=EQTB[J+1].INT THEN GOTO 42;J:=J+1;
END;L:=6107;GOTO 32;42:J:=J+1;L:=J;
WHILE J<6106 DO BEGIN IF EQTB[J].INT<>EQTB[J+1].INT THEN GOTO 32;J:=J+1;
END;32:BEGIN FMTFILE^.INT:=L-K;PUT(FMTFILE);END;
WHILE K<L DO BEGIN BEGIN FMTFILE^:=EQTB[K];PUT(FMTFILE);END;K:=K+1;END;
K:=J+1;BEGIN FMTFILE^.INT:=K-L;PUT(FMTFILE);END;UNTIL K>6106{:1316};
BEGIN FMTFILE^.INT:=PARLOC;PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=WRITELOC;PUT(FMTFILE);END;
{1318:}BEGIN FMTFILE^.INT:=HASHUSED;PUT(FMTFILE);END;
CSCOUNT:=2613-HASHUSED;
FOR P:=514 TO HASHUSED DO IF HASH[P].RH<>0 THEN BEGIN BEGIN FMTFILE^.INT
:=P;PUT(FMTFILE);END;BEGIN FMTFILE^.HH:=HASH[P];PUT(FMTFILE);END;
CSCOUNT:=CSCOUNT+1;END;
FOR P:=HASHUSED+1 TO 2880 DO BEGIN FMTFILE^.HH:=HASH[P];PUT(FMTFILE);
END;BEGIN FMTFILE^.INT:=CSCOUNT;PUT(FMTFILE);END;PRINTLN;
PRINTINT(CSCOUNT);PRINT(1263){:1318}{:1313};
{1320:}BEGIN FMTFILE^.INT:=FMEMPTR;PUT(FMTFILE);END;
FOR K:=0 TO FMEMPTR-1 DO BEGIN FMTFILE^:=FONTINFO[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=FONTPTR;PUT(FMTFILE);END;
FOR K:=0 TO FONTPTR DO{1322:}BEGIN BEGIN FMTFILE^.QQQQ:=FONTCHECK[K];
PUT(FMTFILE);END;BEGIN FMTFILE^.INT:=FONTSIZE[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=FONTDSIZE[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=FONTPARAMS[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=HYPHENCHAR[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=SKEWCHAR[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=FONTNAME[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=FONTAREA[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=FONTBC[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=FONTEC[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=CHARBASE[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=WIDTHBASE[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=HEIGHTBASE[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=DEPTHBASE[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=ITALICBASE[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=LIGKERNBASE[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=KERNBASE[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=EXTENBASE[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=PARAMBASE[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=FONTGLUE[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=BCHARLABEL[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=FONTBCHAR[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=FONTFALSEBCH[K];PUT(FMTFILE);END;PRINTNL(1266);
PRINTESC(HASH[2624+K].RH);PRINTCHAR(61);
PRINTFILENAM(FONTNAME[K],FONTAREA[K],338);
IF FONTSIZE[K]<>FONTDSIZE[K]THEN BEGIN PRINT(741);
PRINTSCALED(FONTSIZE[K]);PRINT(397);END;END{:1322};PRINTLN;
PRINTINT(FMEMPTR-7);PRINT(1264);PRINTINT(FONTPTR-0);PRINT(1265);
IF FONTPTR<>1 THEN PRINTCHAR(115){:1320};
{1324:}BEGIN FMTFILE^.INT:=HYPHCOUNT;PUT(FMTFILE);END;
FOR K:=0 TO 307 DO IF HYPHWORD[K]<>0 THEN BEGIN BEGIN FMTFILE^.INT:=K;
PUT(FMTFILE);END;BEGIN FMTFILE^.INT:=HYPHWORD[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=HYPHLIST[K];PUT(FMTFILE);END;END;PRINTLN;
PRINTINT(HYPHCOUNT);PRINT(1267);IF HYPHCOUNT<>1 THEN PRINTCHAR(115);
IF TRIENOTREADY THEN INITTRIE;BEGIN FMTFILE^.INT:=TRIEMAX;PUT(FMTFILE);
END;FOR K:=0 TO TRIEMAX DO BEGIN FMTFILE^.HH:=TRIE[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=TRIEOPPTR;PUT(FMTFILE);END;
FOR K:=1 TO TRIEOPPTR DO BEGIN BEGIN FMTFILE^.INT:=HYFDISTANCE[K];
PUT(FMTFILE);END;BEGIN FMTFILE^.INT:=HYFNUM[K];PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=HYFNEXT[K];PUT(FMTFILE);END;END;PRINTNL(1268);
PRINTINT(TRIEMAX);PRINT(1269);PRINTINT(TRIEOPPTR);PRINT(1270);
IF TRIEOPPTR<>1 THEN PRINTCHAR(115);PRINT(1271);PRINTINT(TRIEOPSIZE);
FOR K:=255 DOWNTO 0 DO IF TRIEUSED[K]>0 THEN BEGIN PRINTNL(801);
PRINTINT(TRIEUSED[K]);PRINT(1272);PRINTINT(K);BEGIN FMTFILE^.INT:=K;
PUT(FMTFILE);END;BEGIN FMTFILE^.INT:=TRIEUSED[K];PUT(FMTFILE);END;
END{:1324};{1326:}BEGIN FMTFILE^.INT:=INTERACTION;PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=FORMATIDENT;PUT(FMTFILE);END;
BEGIN FMTFILE^.INT:=69069;PUT(FMTFILE);END;EQTB[5294].INT:=0{:1326};
{1329:}WCLOSE(FMTFILE){:1329};END;
{:1302}{1348:}{1349:}PROCEDURE NEWWHATSIT(S:SMALLNUMBER;W:SMALLNUMBER);
VAR P:HALFWORD;BEGIN P:=GETNODE(W);MEM[P].HH.B0:=8;MEM[P].HH.B1:=S;
MEM[CURLIST.TAILFIELD].HH.RH:=P;CURLIST.TAILFIELD:=P;END;
{:1349}{1350:}PROCEDURE NEWWRITEWHAT(W:SMALLNUMBER);
BEGIN NEWWHATSIT(CURCHR,W);IF W<>2 THEN SCANFOURBITI ELSE BEGIN SCANINT;
IF CURVAL<0 THEN CURVAL:=17 ELSE IF CURVAL>15 THEN CURVAL:=16;END;
MEM[CURLIST.TAILFIELD+1].HH.LH:=CURVAL;END;{:1350}PROCEDURE DOEXTENSION;
VAR I,J,K:INTEGER;P,Q,R:HALFWORD;
BEGIN CASE CURCHR OF 0:{1351:}BEGIN NEWWRITEWHAT(3);SCANOPTIONAL;
SCANFILENAME;MEM[CURLIST.TAILFIELD+1].HH.RH:=CURNAME;
MEM[CURLIST.TAILFIELD+2].HH.LH:=CURAREA;
MEM[CURLIST.TAILFIELD+2].HH.RH:=CUREXT;END{:1351};
1:{1352:}BEGIN K:=CURCS;NEWWRITEWHAT(2);CURCS:=K;
P:=SCANTOKS(FALSE,FALSE);MEM[CURLIST.TAILFIELD+1].HH.RH:=DEFREF;
END{:1352};2:{1353:}BEGIN NEWWRITEWHAT(2);
MEM[CURLIST.TAILFIELD+1].HH.RH:=0;END{:1353};
3:{1354:}BEGIN NEWWHATSIT(3,2);MEM[CURLIST.TAILFIELD+1].HH.LH:=0;
P:=SCANTOKS(FALSE,TRUE);MEM[CURLIST.TAILFIELD+1].HH.RH:=DEFREF;
END{:1354};4:{1375:}BEGIN GETXTOKEN;
IF(CURCMD=59)AND(CURCHR<=2)THEN BEGIN P:=CURLIST.TAILFIELD;DOEXTENSION;
OUTWHAT(CURLIST.TAILFIELD);FLUSHNODELIS(CURLIST.TAILFIELD);
CURLIST.TAILFIELD:=P;MEM[P].HH.RH:=0;END ELSE BACKINPUT;END{:1375};
5:{1377:}IF ABS(CURLIST.MODEFIELD)<>102 THEN REPORTILLEGA ELSE BEGIN
NEWWHATSIT(4,2);SCANINT;
IF CURVAL<=0 THEN CURLIST.AUXFIELD.HH.RH:=0 ELSE IF CURVAL>255 THEN
CURLIST.AUXFIELD.HH.RH:=0 ELSE CURLIST.AUXFIELD.HH.RH:=CURVAL;
MEM[CURLIST.TAILFIELD+1].HH.RH:=CURLIST.AUXFIELD.HH.RH;
MEM[CURLIST.TAILFIELD+1].HH.B0:=NORMMIN(EQTB[5314].INT);
MEM[CURLIST.TAILFIELD+1].HH.B1:=NORMMIN(EQTB[5315].INT);END{:1377};
ELSE CONFUSION(1292)END;END;{:1348}{1376:}PROCEDURE FIXLANGUAGE;
VAR L:ASCIICODE;
BEGIN IF EQTB[5313].INT<=0 THEN L:=0 ELSE IF EQTB[5313].INT>255 THEN L:=
0 ELSE L:=EQTB[5313].INT;
IF L<>CURLIST.AUXFIELD.HH.RH THEN BEGIN NEWWHATSIT(4,2);
MEM[CURLIST.TAILFIELD+1].HH.RH:=L;CURLIST.AUXFIELD.HH.RH:=L;
MEM[CURLIST.TAILFIELD+1].HH.B0:=NORMMIN(EQTB[5314].INT);
MEM[CURLIST.TAILFIELD+1].HH.B1:=NORMMIN(EQTB[5315].INT);END;END;
{:1376}{1068:}PROCEDURE HANDLERIGHTB;VAR P,Q:HALFWORD;D:SCALED;
F:INTEGER;BEGIN CASE CURGROUP OF 1:UNSAVE;
0:BEGIN BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(1045);END;
BEGIN HELPPTR:=2;HELPLINE[1]:=1046;HELPLINE[0]:=1047;END;ERROR;END;
14,15,16:EXTRARIGHTBR;{1085:}2:PACKAGE(0);3:BEGIN ADJUSTTAIL:=29995;
PACKAGE(0);END;4:BEGIN ENDGRAF;PACKAGE(0);END;5:BEGIN ENDGRAF;
PACKAGE(4);END;{:1085}{1100:}11:BEGIN ENDGRAF;Q:=EQTB[2892].HH.RH;
MEM[Q].HH.RH:=MEM[Q].HH.RH+1;D:=EQTB[5836].INT;F:=EQTB[5305].INT;UNSAVE;
SAVEPTR:=SAVEPTR-1;
P:=VPACKAGE(MEM[CURLIST.HEADFIELD].HH.RH,0,1,1073741823);POPNEST;
IF SAVESTACK[SAVEPTR+0].INT<255 THEN BEGIN BEGIN MEM[CURLIST.TAILFIELD].
HH.RH:=GETNODE(5);CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
MEM[CURLIST.TAILFIELD].HH.B0:=3;
MEM[CURLIST.TAILFIELD].HH.B1:=SAVESTACK[SAVEPTR+0].INT;
MEM[CURLIST.TAILFIELD+3].INT:=MEM[P+3].INT+MEM[P+2].INT;
MEM[CURLIST.TAILFIELD+4].HH.LH:=MEM[P+5].HH.RH;
MEM[CURLIST.TAILFIELD+4].HH.RH:=Q;MEM[CURLIST.TAILFIELD+2].INT:=D;
MEM[CURLIST.TAILFIELD+1].INT:=F;
END ELSE BEGIN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=GETNODE(2);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
MEM[CURLIST.TAILFIELD].HH.B0:=5;MEM[CURLIST.TAILFIELD].HH.B1:=0;
MEM[CURLIST.TAILFIELD+1].INT:=MEM[P+5].HH.RH;DELETEGLUERE(Q);END;
FREENODE(P,7);IF NESTPTR=0 THEN BUILDPAGE;END;
8:{1026:}BEGIN IF(CURINPUT.LOCFIELD<>0)OR((CURINPUT.INDEXFIELD<>6)AND(
CURINPUT.INDEXFIELD<>3))THEN{1027:}BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(1011);END;BEGIN HELPPTR:=2;HELPLINE[1]:=1012;
HELPLINE[0]:=1013;END;ERROR;REPEAT GETTOKEN;UNTIL CURINPUT.LOCFIELD=0;
END{:1027};ENDTOKENLIST;ENDGRAF;UNSAVE;OUTPUTACTIVE:=FALSE;
INSERTPENALT:=0;
{1028:}IF EQTB[3933].HH.RH<>0 THEN BEGIN BEGIN IF INTERACTION=3 THEN;
PRINTNL(262);PRINT(1014);END;PRINTESC(409);PRINTINT(255);
BEGIN HELPPTR:=3;HELPLINE[2]:=1015;HELPLINE[1]:=1016;HELPLINE[0]:=1017;
END;BOXERROR(255);END{:1028};
IF CURLIST.TAILFIELD<>CURLIST.HEADFIELD THEN BEGIN MEM[PAGETAIL].HH.RH:=
MEM[CURLIST.HEADFIELD].HH.RH;PAGETAIL:=CURLIST.TAILFIELD;END;
IF MEM[29998].HH.RH<>0 THEN BEGIN IF MEM[29999].HH.RH=0 THEN NEST[0].
TAILFIELD:=PAGETAIL;MEM[PAGETAIL].HH.RH:=MEM[29999].HH.RH;
MEM[29999].HH.RH:=MEM[29998].HH.RH;MEM[29998].HH.RH:=0;PAGETAIL:=29998;
END;POPNEST;BUILDPAGE;END{:1026};{:1100}{1118:}10:BUILDDISCRET;
{:1118}{1132:}6:BEGIN BACKINPUT;CURTOK:=6710;
BEGIN IF INTERACTION=3 THEN;PRINTNL(262);PRINT(625);END;PRINTESC(900);
PRINT(626);BEGIN HELPPTR:=1;HELPLINE[0]:=1126;END;INSERROR;END;
{:1132}{1133:}7:BEGIN ENDGRAF;UNSAVE;ALIGNPEEK;END;
{:1133}{1168:}12:BEGIN ENDGRAF;UNSAVE;SAVEPTR:=SAVEPTR-2;
P:=VPACKAGE(MEM[CURLIST.HEADFIELD].HH.RH,SAVESTACK[SAVEPTR+1].INT,
SAVESTACK[SAVEPTR+0].INT,1073741823);POPNEST;
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWNOAD;
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
MEM[CURLIST.TAILFIELD].HH.B0:=29;MEM[CURLIST.TAILFIELD+1].HH.RH:=2;
MEM[CURLIST.TAILFIELD+1].HH.LH:=P;END;{:1168}{1173:}13:BUILDCHOICES;
{:1173}{1186:}9:BEGIN UNSAVE;SAVEPTR:=SAVEPTR-1;
MEM[SAVESTACK[SAVEPTR+0].INT].HH.RH:=3;P:=FINMLIST(0);
MEM[SAVESTACK[SAVEPTR+0].INT].HH.LH:=P;
IF P<>0 THEN IF MEM[P].HH.RH=0 THEN IF MEM[P].HH.B0=16 THEN BEGIN IF MEM
[P+3].HH.RH=0 THEN IF MEM[P+2].HH.RH=0 THEN BEGIN MEM[SAVESTACK[SAVEPTR
+0].INT].HH:=MEM[P+1].HH;FREENODE(P,4);END;
END ELSE IF MEM[P].HH.B0=28 THEN IF SAVESTACK[SAVEPTR+0].INT=CURLIST.
TAILFIELD+1 THEN IF MEM[CURLIST.TAILFIELD].HH.B0=16 THEN{1187:}BEGIN Q:=
CURLIST.HEADFIELD;
WHILE MEM[Q].HH.RH<>CURLIST.TAILFIELD DO Q:=MEM[Q].HH.RH;
MEM[Q].HH.RH:=P;FREENODE(CURLIST.TAILFIELD,4);CURLIST.TAILFIELD:=P;
END{:1187};END;{:1186}ELSE CONFUSION(1048)END;END;
{:1068}PROCEDURE MAINCONTROL;
LABEL 60,21,70,80,90,91,92,95,100,101,110,111,112,120,10;VAR T:INTEGER;
BEGIN IF EQTB[3419].HH.RH<>0 THEN BEGINTOKENLI(EQTB[3419].HH.RH,12);
60:GETXTOKEN;
21:{1031:}IF INTERRUPT<>0 THEN IF OKTOINTERRUP THEN BEGIN BACKINPUT;
BEGIN IF INTERRUPT<>0 THEN PAUSEFORINST;END;GOTO 60;END;
{IF PANICKING THEN CHECKMEM(FALSE);}
IF EQTB[5299].INT>0 THEN SHOWCURCMDCH{:1031};
CASE ABS(CURLIST.MODEFIELD)+CURCMD OF 113,114,170:GOTO 70;
118:BEGIN SCANCHARNUM;CURCHR:=CURVAL;GOTO 70;END;167:BEGIN GETXTOKEN;
IF(CURCMD=11)OR(CURCMD=12)OR(CURCMD=68)OR(CURCMD=16)THEN CANCELBOUNDA:=
TRUE;GOTO 21;END;
112:IF CURLIST.AUXFIELD.HH.LH=1000 THEN GOTO 120 ELSE APPSPACE;
166,267:GOTO 120;{1045:}1,102,203,11,213,268:;
40,141,242:BEGIN{406:}REPEAT GETXTOKEN;UNTIL CURCMD<>10{:406};GOTO 21;
END;15:IF ITSALLOVER THEN GOTO 10;
{1048:}23,123,224,71,172,273,{:1048}{1098:}39,{:1098}{1111:}45,{:1111}
{1144:}49,150,{:1144}7,108,209:REPORTILLEGA;
{1046:}8,109,9,110,18,119,70,171,51,152,16,117,50,151,53,154,67,168,54,
155,55,156,57,158,56,157,31,132,52,153,29,130,47,148,212,216,217,230,227
,236,239{:1046}:INSERTDOLLAR;
{1056:}37,137,238:BEGIN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=SCANRULESPEC
;CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
IF ABS(CURLIST.MODEFIELD)=1 THEN CURLIST.AUXFIELD.INT:=-65536000 ELSE IF
ABS(CURLIST.MODEFIELD)=102 THEN CURLIST.AUXFIELD.HH.LH:=1000;END;
{:1056}{1057:}28,128,229,231:APPENDGLUE;30,131,232,233:APPENDKERN;
{:1057}{1063:}2,103:NEWSAVELEVEL(1);62,163,264:NEWSAVELEVEL(14);
63,164,265:IF CURGROUP=14 THEN UNSAVE ELSE OFFSAVE;
{:1063}{1067:}3,104,205:HANDLERIGHTB;
{:1067}{1073:}22,124,225:BEGIN T:=CURCHR;SCANDIMEN(FALSE,FALSE,FALSE);
IF T=0 THEN SCANBOX(CURVAL)ELSE SCANBOX(-CURVAL);END;
32,133,234:SCANBOX(1073742237+CURCHR);21,122,223:BEGINBOX(0);
{:1073}{1090:}44:NEWGRAF(CURCHR>0);
12,13,17,69,4,24,36,46,48,27,34,65,66:BEGIN BACKINPUT;NEWGRAF(TRUE);END;
{:1090}{1092:}145,246:INDENTINHMOD;{:1092}{1094:}14:BEGIN NORMALPARAGR;
IF CURLIST.MODEFIELD>0 THEN BUILDPAGE;END;
115:BEGIN IF ALIGNSTATE<0 THEN OFFSAVE;ENDGRAF;
IF CURLIST.MODEFIELD=1 THEN BUILDPAGE;END;
116,129,138,126,134:HEADFORVMODE;
{:1094}{1097:}38,139,240,140,241:BEGININSERTO;19,120,221:MAKEMARK;
{:1097}{1102:}43,144,245:APPENDPENALT;
{:1102}{1104:}26,127,228:DELETELAST;{:1104}{1109:}25,125,226:UNPACKAGE;
{:1109}{1112:}146:APPENDITALIC;
247:BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWKERN(0);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
{:1112}{1116:}149,250:APPENDDISCRE;{:1116}{1122:}147:MAKEACCENT;
{:1122}{1126:}6,107,208,5,106,207:ALIGNERROR;35,136,237:NOALIGNERROR;
64,165,266:OMITERROR;{:1126}{1130:}33,135:INITALIGN;
235:IF PRIVILEGED THEN IF CURGROUP=15 THEN INITALIGN ELSE OFFSAVE;
10,111:DOENDV;{:1130}{1134:}68,169,270:CSERROR;
{:1134}{1137:}105:INITMATH;
{:1137}{1140:}251:IF PRIVILEGED THEN IF CURGROUP=15 THEN STARTEQNO ELSE
OFFSAVE;
{:1140}{1150:}204:BEGIN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWNOAD;
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;BACKINPUT;
SCANMATH(CURLIST.TAILFIELD+1);END;
{:1150}{1154:}214,215,271:SETMATHCHAR(EQTB[5007+CURCHR].HH.RH);
219:BEGIN SCANCHARNUM;CURCHR:=CURVAL;
SETMATHCHAR(EQTB[5007+CURCHR].HH.RH);END;220:BEGIN SCANFIFTEENB;
SETMATHCHAR(CURVAL);END;272:SETMATHCHAR(CURCHR);218:BEGIN SCANTWENTYSE;
SETMATHCHAR(CURVAL DIV 4096);END;
{:1154}{1158:}253:BEGIN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWNOAD;
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
MEM[CURLIST.TAILFIELD].HH.B0:=CURCHR;SCANMATH(CURLIST.TAILFIELD+1);END;
254:MATHLIMITSWI;{:1158}{1162:}269:MATHRADICAL;
{:1162}{1164:}248,249:MATHAC;{:1164}{1167:}259:BEGIN SCANSPEC(12,FALSE);
NORMALPARAGR;PUSHNEST;CURLIST.MODEFIELD:=-1;
CURLIST.AUXFIELD.INT:=-65536000;
IF EQTB[3418].HH.RH<>0 THEN BEGINTOKENLI(EQTB[3418].HH.RH,11);END;
{:1167}{1171:}256:BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWSTYLE(CURCHR);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
258:BEGIN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWGLUE(0);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;
MEM[CURLIST.TAILFIELD].HH.B1:=98;END;257:APPENDCHOICE;
{:1171}{1175:}211,210:SUBSUP;{:1175}{1180:}255:MATHFRACTION;
{:1180}{1190:}252:MATHLEFTRIGH;
{:1190}{1193:}206:IF CURGROUP=15 THEN AFTERMATH ELSE OFFSAVE;
{:1193}{1210:}72,173,274,73,174,275,74,175,276,75,176,277,76,177,278,77,
178,279,78,179,280,79,180,281,80,181,282,81,182,283,82,183,284,83,184,
285,84,185,286,85,186,287,86,187,288,87,188,289,88,189,290,89,190,291,90
,191,292,91,192,293,92,193,294,93,194,295,94,195,296,95,196,297,96,197,
298,97,198,299,98,199,300,99,200,301,100,201,302,101,202,303:
PREFIXEDCOMM;{:1210}{1268:}41,142,243:BEGIN GETTOKEN;AFTERTOKEN:=CURTOK;
END;{:1268}{1271:}42,143,244:BEGIN GETTOKEN;SAVEFORAFTER(CURTOK);END;
{:1271}{1274:}61,162,263:OPENORCLOSEI;
{:1274}{1276:}59,160,261:ISSUEMESSAGE;
{:1276}{1285:}58,159,260:SHIFTCASE;
{:1285}{1290:}20,121,222:SHOWWHATEVER;
{:1290}{1347:}60,161,262:DOEXTENSION;{:1347}{:1045}END;GOTO 60;
70:{1034:}MAINS:=EQTB[4751+CURCHR].HH.RH;
IF MAINS=1000 THEN CURLIST.AUXFIELD.HH.LH:=1000 ELSE IF MAINS<1000 THEN
BEGIN IF MAINS>0 THEN CURLIST.AUXFIELD.HH.LH:=MAINS;
END ELSE IF CURLIST.AUXFIELD.HH.LH<1000 THEN CURLIST.AUXFIELD.HH.LH:=
1000 ELSE CURLIST.AUXFIELD.HH.LH:=MAINS;MAINF:=EQTB[3934].HH.RH;
BCHAR:=FONTBCHAR[MAINF];FALSEBCHAR:=FONTFALSEBCH[MAINF];
IF CURLIST.MODEFIELD>0 THEN IF EQTB[5313].INT<>CURLIST.AUXFIELD.HH.RH
THEN FIXLANGUAGE;BEGIN LIGSTACK:=AVAIL;
IF LIGSTACK=0 THEN LIGSTACK:=GETAVAIL ELSE BEGIN AVAIL:=MEM[LIGSTACK].HH
.RH;MEM[LIGSTACK].HH.RH:=0;DYNUSED:=DYNUSED+1;END;END;
MEM[LIGSTACK].HH.B0:=MAINF;CURL:=CURCHR;MEM[LIGSTACK].HH.B1:=CURL;
CURQ:=CURLIST.TAILFIELD;IF CANCELBOUNDA THEN BEGIN CANCELBOUNDA:=FALSE;
MAINK:=0;END ELSE MAINK:=BCHARLABEL[MAINF];IF MAINK=0 THEN GOTO 92;
CURR:=CURL;CURL:=256;GOTO 111;
80:{1035:}IF CURL<256 THEN BEGIN IF MEM[CURQ].HH.RH>0 THEN IF MEM[
CURLIST.TAILFIELD].HH.B1=HYPHENCHAR[MAINF]THEN INSDISC:=TRUE;
IF LIGATUREPRES THEN BEGIN MAINP:=NEWLIGATURE(MAINF,CURL,MEM[CURQ].HH.RH
);IF LFTHIT THEN BEGIN MEM[MAINP].HH.B1:=2;LFTHIT:=FALSE;END;
IF RTHIT THEN IF LIGSTACK=0 THEN BEGIN MEM[MAINP].HH.B1:=MEM[MAINP].HH.
B1+1;RTHIT:=FALSE;END;MEM[CURQ].HH.RH:=MAINP;CURLIST.TAILFIELD:=MAINP;
LIGATUREPRES:=FALSE;END;IF INSDISC THEN BEGIN INSDISC:=FALSE;
IF CURLIST.MODEFIELD>0 THEN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWDISC;
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;END;END{:1035};
90:{1036:}IF LIGSTACK=0 THEN GOTO 21;CURQ:=CURLIST.TAILFIELD;
CURL:=MEM[LIGSTACK].HH.B1;91:IF NOT(LIGSTACK>=HIMEMMIN)THEN GOTO 95;
92:IF(CURCHR<FONTBC[MAINF])OR(CURCHR>FONTEC[MAINF])THEN BEGIN
CHARWARNING(MAINF,CURCHR);BEGIN MEM[LIGSTACK].HH.RH:=AVAIL;
AVAIL:=LIGSTACK;DYNUSED:=DYNUSED-1;END;GOTO 60;END;
MAINI:=FONTINFO[CHARBASE[MAINF]+CURL].QQQQ;
IF NOT(MAINI.B0>0)THEN BEGIN CHARWARNING(MAINF,CURCHR);
BEGIN MEM[LIGSTACK].HH.RH:=AVAIL;AVAIL:=LIGSTACK;DYNUSED:=DYNUSED-1;END;
GOTO 60;END;MEM[CURLIST.TAILFIELD].HH.RH:=LIGSTACK;
CURLIST.TAILFIELD:=LIGSTACK{:1036};100:{1038:}GETNEXT;
IF CURCMD=11 THEN GOTO 101;IF CURCMD=12 THEN GOTO 101;
IF CURCMD=68 THEN GOTO 101;XTOKEN;IF CURCMD=11 THEN GOTO 101;
IF CURCMD=12 THEN GOTO 101;IF CURCMD=68 THEN GOTO 101;
IF CURCMD=16 THEN BEGIN SCANCHARNUM;CURCHR:=CURVAL;GOTO 101;END;
IF CURCMD=65 THEN BCHAR:=256;CURR:=BCHAR;LIGSTACK:=0;GOTO 110;
101:MAINS:=EQTB[4751+CURCHR].HH.RH;
IF MAINS=1000 THEN CURLIST.AUXFIELD.HH.LH:=1000 ELSE IF MAINS<1000 THEN
BEGIN IF MAINS>0 THEN CURLIST.AUXFIELD.HH.LH:=MAINS;
END ELSE IF CURLIST.AUXFIELD.HH.LH<1000 THEN CURLIST.AUXFIELD.HH.LH:=
1000 ELSE CURLIST.AUXFIELD.HH.LH:=MAINS;BEGIN LIGSTACK:=AVAIL;
IF LIGSTACK=0 THEN LIGSTACK:=GETAVAIL ELSE BEGIN AVAIL:=MEM[LIGSTACK].HH
.RH;MEM[LIGSTACK].HH.RH:=0;DYNUSED:=DYNUSED+1;END;END;
MEM[LIGSTACK].HH.B0:=MAINF;CURR:=CURCHR;MEM[LIGSTACK].HH.B1:=CURR;
IF CURR=FALSEBCHAR THEN CURR:=256{:1038};
110:{1039:}IF((MAINI.B2)MOD 4)<>1 THEN GOTO 80;IF CURR=256 THEN GOTO 80;
MAINK:=LIGKERNBASE[MAINF]+MAINI.B3;MAINJ:=FONTINFO[MAINK].QQQQ;
IF MAINJ.B0<=128 THEN GOTO 112;
MAINK:=LIGKERNBASE[MAINF]+256*MAINJ.B2+MAINJ.B3+32768-256*(128);
111:MAINJ:=FONTINFO[MAINK].QQQQ;
112:IF MAINJ.B1=CURR THEN IF MAINJ.B0<=128 THEN{1040:}BEGIN IF MAINJ.B2
>=128 THEN BEGIN IF CURL<256 THEN BEGIN IF MEM[CURQ].HH.RH>0 THEN IF MEM
[CURLIST.TAILFIELD].HH.B1=HYPHENCHAR[MAINF]THEN INSDISC:=TRUE;
IF LIGATUREPRES THEN BEGIN MAINP:=NEWLIGATURE(MAINF,CURL,MEM[CURQ].HH.RH
);IF LFTHIT THEN BEGIN MEM[MAINP].HH.B1:=2;LFTHIT:=FALSE;END;
IF RTHIT THEN IF LIGSTACK=0 THEN BEGIN MEM[MAINP].HH.B1:=MEM[MAINP].HH.
B1+1;RTHIT:=FALSE;END;MEM[CURQ].HH.RH:=MAINP;CURLIST.TAILFIELD:=MAINP;
LIGATUREPRES:=FALSE;END;IF INSDISC THEN BEGIN INSDISC:=FALSE;
IF CURLIST.MODEFIELD>0 THEN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWDISC;
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;END;END;
BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWKERN(FONTINFO[KERNBASE[MAINF]+256
*MAINJ.B2+MAINJ.B3].INT);
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;GOTO 90;END;
IF CURL=256 THEN LFTHIT:=TRUE ELSE IF LIGSTACK=0 THEN RTHIT:=TRUE;
BEGIN IF INTERRUPT<>0 THEN PAUSEFORINST;END;
CASE MAINJ.B2 OF 1,5:BEGIN CURL:=MAINJ.B3;
MAINI:=FONTINFO[CHARBASE[MAINF]+CURL].QQQQ;LIGATUREPRES:=TRUE;END;
2,6:BEGIN CURR:=MAINJ.B3;
IF LIGSTACK=0 THEN BEGIN LIGSTACK:=NEWLIGITEM(CURR);BCHAR:=256;
END ELSE IF(LIGSTACK>=HIMEMMIN)THEN BEGIN MAINP:=LIGSTACK;
LIGSTACK:=NEWLIGITEM(CURR);MEM[LIGSTACK+1].HH.RH:=MAINP;
END ELSE MEM[LIGSTACK].HH.B1:=CURR;END;3:BEGIN CURR:=MAINJ.B3;
MAINP:=LIGSTACK;LIGSTACK:=NEWLIGITEM(CURR);MEM[LIGSTACK].HH.RH:=MAINP;
END;7,11:BEGIN IF CURL<256 THEN BEGIN IF MEM[CURQ].HH.RH>0 THEN IF MEM[
CURLIST.TAILFIELD].HH.B1=HYPHENCHAR[MAINF]THEN INSDISC:=TRUE;
IF LIGATUREPRES THEN BEGIN MAINP:=NEWLIGATURE(MAINF,CURL,MEM[CURQ].HH.RH
);IF LFTHIT THEN BEGIN MEM[MAINP].HH.B1:=2;LFTHIT:=FALSE;END;
IF FALSE THEN IF LIGSTACK=0 THEN BEGIN MEM[MAINP].HH.B1:=MEM[MAINP].HH.
B1+1;RTHIT:=FALSE;END;MEM[CURQ].HH.RH:=MAINP;CURLIST.TAILFIELD:=MAINP;
LIGATUREPRES:=FALSE;END;IF INSDISC THEN BEGIN INSDISC:=FALSE;
IF CURLIST.MODEFIELD>0 THEN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=NEWDISC;
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;END;END;
CURQ:=CURLIST.TAILFIELD;CURL:=MAINJ.B3;
MAINI:=FONTINFO[CHARBASE[MAINF]+CURL].QQQQ;LIGATUREPRES:=TRUE;END;
ELSE BEGIN CURL:=MAINJ.B3;LIGATUREPRES:=TRUE;
IF LIGSTACK=0 THEN GOTO 80 ELSE GOTO 91;END END;
IF MAINJ.B2>4 THEN IF MAINJ.B2<>7 THEN GOTO 80;
IF CURL<256 THEN GOTO 110;MAINK:=BCHARLABEL[MAINF];GOTO 111;END{:1040};
IF MAINJ.B0=0 THEN MAINK:=MAINK+1 ELSE BEGIN IF MAINJ.B0>=128 THEN GOTO
80;MAINK:=MAINK+MAINJ.B0+1;END;GOTO 111{:1039};
95:{1037:}MAINP:=MEM[LIGSTACK+1].HH.RH;
IF MAINP>0 THEN BEGIN MEM[CURLIST.TAILFIELD].HH.RH:=MAINP;
CURLIST.TAILFIELD:=MEM[CURLIST.TAILFIELD].HH.RH;END;TEMPPTR:=LIGSTACK;
LIGSTACK:=MEM[TEMPPTR].HH.RH;FREENODE(TEMPPTR,2);
MAINI:=FONTINFO[CHARBASE[MAINF]+CURL].QQQQ;LIGATUREPRES:=TRUE;
IF LIGSTACK=0 THEN IF MAINP>0 THEN GOTO 100 ELSE CURR:=BCHAR ELSE CURR:=
MEM[LIGSTACK].HH.B1;GOTO 110{:1037}{:1034};
120:{1041:}IF EQTB[2894].HH.RH=0 THEN BEGIN{1042:}BEGIN MAINP:=FONTGLUE[
EQTB[3934].HH.RH];IF MAINP=0 THEN BEGIN MAINP:=NEWSPEC(0);
MAINK:=PARAMBASE[EQTB[3934].HH.RH]+2;
MEM[MAINP+1].INT:=FONTINFO[MAINK].INT;
MEM[MAINP+2].INT:=FONTINFO[MAINK+1].INT;
MEM[MAINP+3].INT:=FONTINFO[MAINK+2].INT;
FONTGLUE[EQTB[3934].HH.RH]:=MAINP;END;END{:1042};
TEMPPTR:=NEWGLUE(MAINP);END ELSE TEMPPTR:=NEWPARAMGLUE(12);
MEM[CURLIST.TAILFIELD].HH.RH:=TEMPPTR;CURLIST.TAILFIELD:=TEMPPTR;
GOTO 60{:1041};10:END;{:1030}{1284:}PROCEDURE GIVEERRHELP;
BEGIN TOKENSHOW(EQTB[3421].HH.RH);END;
{:1284}{1303:}{524:}FUNCTION OPENFMTFILE:BOOLEAN;LABEL 40,10;
VAR J:0..BUFSIZE;BEGIN J:=CURINPUT.LOCFIELD;
IF BUFFER[CURINPUT.LOCFIELD]=38 THEN BEGIN CURINPUT.LOCFIELD:=CURINPUT.
LOCFIELD+1;J:=CURINPUT.LOCFIELD;BUFFER[LAST]:=32;
WHILE BUFFER[J]<>32 DO J:=J+1;PACKBUFFERED(0,CURINPUT.LOCFIELD,J-1);
IF WOPENIN(FMTFILE)THEN GOTO 40;PACKBUFFERED(11,CURINPUT.LOCFIELD,J-1);
IF WOPENIN(FMTFILE)THEN GOTO 40;;
WRITELN(OUTPUT,'Sorry, I can''t find that format;',' will try PLAIN.');
FLUSH(OUTPUT);END;PACKBUFFERED(16,1,0);
IF NOT WOPENIN(FMTFILE)THEN BEGIN;
WRITELN(OUTPUT,'I can''t find TeXformats/plain.fmt!');
OPENFMTFILE:=FALSE;GOTO 10;END;40:CURINPUT.LOCFIELD:=J;
OPENFMTFILE:=TRUE;10:END;{:524}FUNCTION LOADFMTFILE:BOOLEAN;
LABEL 6666,10;VAR J,K:INTEGER;P,Q:HALFWORD;X:INTEGER;W:FOURQUARTERS;
BEGIN{1308:}X:=FMTFILE^.INT;IF X<>305924274 THEN GOTO 6666;
BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;IF X<>0 THEN GOTO 6666;
BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;IF X<>30000 THEN GOTO 6666;
BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;IF X<>6106 THEN GOTO 6666;
BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;IF X<>1777 THEN GOTO 6666;
BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;IF X<>307 THEN GOTO 6666{:1308};
{1310:}BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF X<0 THEN GOTO 6666;IF X>POOLSIZE THEN BEGIN;
WRITELN(OUTPUT,'---! Must increase the ','string pool size');GOTO 6666;
END ELSE POOLPTR:=X;END;BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF X<0 THEN GOTO 6666;IF X>MAXSTRINGS THEN BEGIN;
WRITELN(OUTPUT,'---! Must increase the ','max strings');GOTO 6666;
END ELSE STRPTR:=X;END;FOR K:=0 TO STRPTR DO BEGIN BEGIN GET(FMTFILE);
X:=FMTFILE^.INT;END;
IF(X<0)OR(X>POOLPTR)THEN GOTO 6666 ELSE STRSTART[K]:=X;END;K:=0;
WHILE K+4<POOLPTR DO BEGIN BEGIN GET(FMTFILE);W:=FMTFILE^.QQQQ;END;
STRPOOL[K]:=W.B0;STRPOOL[K+1]:=W.B1;STRPOOL[K+2]:=W.B2;
STRPOOL[K+3]:=W.B3;K:=K+4;END;K:=POOLPTR-4;BEGIN GET(FMTFILE);
W:=FMTFILE^.QQQQ;END;STRPOOL[K]:=W.B0;STRPOOL[K+1]:=W.B1;
STRPOOL[K+2]:=W.B2;STRPOOL[K+3]:=W.B3;INITSTRPTR:=STRPTR;
INITPOOLPTR:=POOLPTR{:1310};{1312:}BEGIN BEGIN GET(FMTFILE);
X:=FMTFILE^.INT;END;
IF(X<1019)OR(X>29986)THEN GOTO 6666 ELSE LOMEMMAX:=X;END;
BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<20)OR(X>LOMEMMAX)THEN GOTO 6666 ELSE ROVER:=X;END;P:=0;Q:=ROVER;
REPEAT FOR K:=P TO Q+1 DO BEGIN GET(FMTFILE);MEM[K]:=FMTFILE^;END;
P:=Q+MEM[Q].HH.LH;
IF(P>LOMEMMAX)OR((Q>=MEM[Q+1].HH.RH)AND(MEM[Q+1].HH.RH<>ROVER))THEN GOTO
6666;Q:=MEM[Q+1].HH.RH;UNTIL Q=ROVER;
FOR K:=P TO LOMEMMAX DO BEGIN GET(FMTFILE);MEM[K]:=FMTFILE^;END;
IF MEMMIN<-2 THEN BEGIN P:=MEM[ROVER+1].HH.LH;Q:=MEMMIN+1;
MEM[MEMMIN].HH.RH:=0;MEM[MEMMIN].HH.LH:=0;MEM[P+1].HH.RH:=Q;
MEM[ROVER+1].HH.LH:=Q;MEM[Q+1].HH.RH:=ROVER;MEM[Q+1].HH.LH:=P;
MEM[Q].HH.RH:=65535;MEM[Q].HH.LH:=-0-Q;END;BEGIN BEGIN GET(FMTFILE);
X:=FMTFILE^.INT;END;
IF(X<LOMEMMAX+1)OR(X>29987)THEN GOTO 6666 ELSE HIMEMMIN:=X;END;
BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<0)OR(X>30000)THEN GOTO 6666 ELSE AVAIL:=X;END;MEMEND:=30000;
FOR K:=HIMEMMIN TO MEMEND DO BEGIN GET(FMTFILE);MEM[K]:=FMTFILE^;END;
BEGIN GET(FMTFILE);VARUSED:=FMTFILE^.INT;END;BEGIN GET(FMTFILE);
DYNUSED:=FMTFILE^.INT;END{:1312};{1314:}{1317:}K:=1;
REPEAT BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<1)OR(K+X>6107)THEN GOTO 6666;
FOR J:=K TO K+X-1 DO BEGIN GET(FMTFILE);EQTB[J]:=FMTFILE^;END;K:=K+X;
BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<0)OR(K+X>6107)THEN GOTO 6666;
FOR J:=K TO K+X-1 DO EQTB[J]:=EQTB[K-1];K:=K+X;UNTIL K>6106{:1317};
BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<514)OR(X>2614)THEN GOTO 6666 ELSE PARLOC:=X;END;
PARTOKEN:=4095+PARLOC;BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<514)OR(X>2614)THEN GOTO 6666 ELSE WRITELOC:=X;END;
{1319:}BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<514)OR(X>2614)THEN GOTO 6666 ELSE HASHUSED:=X;END;P:=513;
REPEAT BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<P+1)OR(X>HASHUSED)THEN GOTO 6666 ELSE P:=X;END;BEGIN GET(FMTFILE);
HASH[P]:=FMTFILE^.HH;END;UNTIL P=HASHUSED;
FOR P:=HASHUSED+1 TO 2880 DO BEGIN GET(FMTFILE);HASH[P]:=FMTFILE^.HH;
END;BEGIN GET(FMTFILE);CSCOUNT:=FMTFILE^.INT;END{:1319}{:1314};
{1321:}BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF X<7 THEN GOTO 6666;IF X>FONTMEMSIZE THEN BEGIN;
WRITELN(OUTPUT,'---! Must increase the ','font mem size');GOTO 6666;
END ELSE FMEMPTR:=X;END;FOR K:=0 TO FMEMPTR-1 DO BEGIN GET(FMTFILE);
FONTINFO[K]:=FMTFILE^;END;BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF X<0 THEN GOTO 6666;IF X>FONTMAX THEN BEGIN;
WRITELN(OUTPUT,'---! Must increase the ','font max');GOTO 6666;
END ELSE FONTPTR:=X;END;
FOR K:=0 TO FONTPTR DO{1323:}BEGIN BEGIN GET(FMTFILE);
FONTCHECK[K]:=FMTFILE^.QQQQ;END;BEGIN GET(FMTFILE);
FONTSIZE[K]:=FMTFILE^.INT;END;BEGIN GET(FMTFILE);
FONTDSIZE[K]:=FMTFILE^.INT;END;BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;
END;IF(X<0)OR(X>65535)THEN GOTO 6666 ELSE FONTPARAMS[K]:=X;END;
BEGIN GET(FMTFILE);HYPHENCHAR[K]:=FMTFILE^.INT;END;BEGIN GET(FMTFILE);
SKEWCHAR[K]:=FMTFILE^.INT;END;BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;
END;IF(X<0)OR(X>STRPTR)THEN GOTO 6666 ELSE FONTNAME[K]:=X;END;
BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<0)OR(X>STRPTR)THEN GOTO 6666 ELSE FONTAREA[K]:=X;END;
BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<0)OR(X>255)THEN GOTO 6666 ELSE FONTBC[K]:=X;END;
BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<0)OR(X>255)THEN GOTO 6666 ELSE FONTEC[K]:=X;END;BEGIN GET(FMTFILE);
CHARBASE[K]:=FMTFILE^.INT;END;BEGIN GET(FMTFILE);
WIDTHBASE[K]:=FMTFILE^.INT;END;BEGIN GET(FMTFILE);
HEIGHTBASE[K]:=FMTFILE^.INT;END;BEGIN GET(FMTFILE);
DEPTHBASE[K]:=FMTFILE^.INT;END;BEGIN GET(FMTFILE);
ITALICBASE[K]:=FMTFILE^.INT;END;BEGIN GET(FMTFILE);
LIGKERNBASE[K]:=FMTFILE^.INT;END;BEGIN GET(FMTFILE);
KERNBASE[K]:=FMTFILE^.INT;END;BEGIN GET(FMTFILE);
EXTENBASE[K]:=FMTFILE^.INT;END;BEGIN GET(FMTFILE);
PARAMBASE[K]:=FMTFILE^.INT;END;BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;
END;IF(X<0)OR(X>LOMEMMAX)THEN GOTO 6666 ELSE FONTGLUE[K]:=X;END;
BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<0)OR(X>FMEMPTR-1)THEN GOTO 6666 ELSE BCHARLABEL[K]:=X;END;
BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<0)OR(X>256)THEN GOTO 6666 ELSE FONTBCHAR[K]:=X;END;
BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<0)OR(X>256)THEN GOTO 6666 ELSE FONTFALSEBCH[K]:=X;END;
END{:1323}{:1321};{1325:}BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<0)OR(X>307)THEN GOTO 6666 ELSE HYPHCOUNT:=X;END;
FOR K:=1 TO HYPHCOUNT DO BEGIN BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;
END;IF(X<0)OR(X>307)THEN GOTO 6666 ELSE J:=X;END;
BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<0)OR(X>STRPTR)THEN GOTO 6666 ELSE HYPHWORD[J]:=X;END;
BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<0)OR(X>65535)THEN GOTO 6666 ELSE HYPHLIST[J]:=X;END;END;
BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;IF X<0 THEN GOTO 6666;
IF X>TRIESIZE THEN BEGIN;
WRITELN(OUTPUT,'---! Must increase the ','trie size');GOTO 6666;
END ELSE J:=X;END;TRIEMAX:=J;FOR K:=0 TO J DO BEGIN GET(FMTFILE);
TRIE[K]:=FMTFILE^.HH;END;BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF X<0 THEN GOTO 6666;IF X>TRIEOPSIZE THEN BEGIN;
WRITELN(OUTPUT,'---! Must increase the ','trie op size');GOTO 6666;
END ELSE J:=X;END;TRIEOPPTR:=J;
FOR K:=1 TO J DO BEGIN BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<0)OR(X>63)THEN GOTO 6666 ELSE HYFDISTANCE[K]:=X;END;
BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<0)OR(X>63)THEN GOTO 6666 ELSE HYFNUM[K]:=X;END;
BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<0)OR(X>255)THEN GOTO 6666 ELSE HYFNEXT[K]:=X;END;END;
FOR K:=0 TO 255 DO TRIEUSED[K]:=0;K:=256;
WHILE J>0 DO BEGIN BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<0)OR(X>K-1)THEN GOTO 6666 ELSE K:=X;END;BEGIN BEGIN GET(FMTFILE);
X:=FMTFILE^.INT;END;IF(X<1)OR(X>J)THEN GOTO 6666 ELSE X:=X;END;
TRIEUSED[K]:=X;J:=J-X;OPSTART[K]:=J;END;TRIENOTREADY:=FALSE{:1325};
{1327:}BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<0)OR(X>3)THEN GOTO 6666 ELSE INTERACTION:=X;END;
BEGIN BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<0)OR(X>STRPTR)THEN GOTO 6666 ELSE FORMATIDENT:=X;END;
BEGIN GET(FMTFILE);X:=FMTFILE^.INT;END;
IF(X<>69069)THEN GOTO 6666{:1327};LOADFMTFILE:=TRUE;GOTO 10;6666:;
WRITELN(OUTPUT,'(Fatal format file error; I''m stymied)');
LOADFMTFILE:=FALSE;10:END;{:1303}{1330:}{1333:}PROCEDURE CLOSEFILESAN;
VAR K:INTEGER;
BEGIN{1378:}FOR K:=0 TO 15 DO IF WRITEOPEN[K]THEN ACLOSE(WRITEFILE[K])
{:1378};EQTB[5312].INT:=-1;
IF EQTB[5294].INT>0 THEN{1334:}IF LOGOPENED THEN BEGIN WRITELN(LOGFILE,
' ');WRITELN(LOGFILE,'Here is how much of TeX''s memory',' you used:');
WRITE(LOGFILE,' ',STRPTR-INITSTRPTR:1,' string');
IF STRPTR<>INITSTRPTR+1 THEN WRITE(LOGFILE,'s');
WRITELN(LOGFILE,' out of ',MAXSTRINGS-INITSTRPTR:1);
WRITELN(LOGFILE,' ',POOLPTR-INITPOOLPTR:1,' string characters out of ',
POOLSIZE-INITPOOLPTR:1);
WRITELN(LOGFILE,' ',LOMEMMAX-MEMMIN+MEMEND-HIMEMMIN+2:1,
' words of memory out of ',MEMEND+1-MEMMIN:1);
WRITELN(LOGFILE,' ',CSCOUNT:1,' multiletter control sequences out of ',
2100:1);
WRITE(LOGFILE,' ',FMEMPTR:1,' words of font info for ',FONTPTR-0:1,
' font');IF FONTPTR<>1 THEN WRITE(LOGFILE,'s');
WRITELN(LOGFILE,', out of ',FONTMEMSIZE:1,' for ',FONTMAX-0:1);
WRITE(LOGFILE,' ',HYPHCOUNT:1,' hyphenation exception');
IF HYPHCOUNT<>1 THEN WRITE(LOGFILE,'s');
WRITELN(LOGFILE,' out of ',307:1);
WRITELN(LOGFILE,' ',MAXINSTACK:1,'i,',MAXNESTSTACK:1,'n,',MAXPARAMSTAC:1
,'p,',MAXBUFSTACK+1:1,'b,',MAXSAVESTACK+6:1,'s stack positions out of ',
STACKSIZE:1,'i,',NESTSIZE:1,'n,',PARAMSIZE:1,'p,',BUFSIZE:1,'b,',
SAVESIZE:1,'s');END{:1334};;
{642:}WHILE CURS>-1 DO BEGIN IF CURS>0 THEN BEGIN DVIBUF[DVIPTR]:=142;
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;
END ELSE BEGIN BEGIN DVIBUF[DVIPTR]:=140;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;TOTALPAGES:=TOTALPAGES+1;END;
CURS:=CURS-1;END;
IF TOTALPAGES=0 THEN PRINTNL(838)ELSE BEGIN BEGIN DVIBUF[DVIPTR]:=248;
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;DVIFOUR(LASTBOP);
LASTBOP:=DVIOFFSET+DVIPTR-5;DVIFOUR(25400000);DVIFOUR(473628672);
PREPAREMAG;DVIFOUR(EQTB[5280].INT);DVIFOUR(MAXV);DVIFOUR(MAXH);
BEGIN DVIBUF[DVIPTR]:=MAXPUSH DIV 256;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;
BEGIN DVIBUF[DVIPTR]:=MAXPUSH MOD 256;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;
BEGIN DVIBUF[DVIPTR]:=(TOTALPAGES DIV 256)MOD 256;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;
BEGIN DVIBUF[DVIPTR]:=TOTALPAGES MOD 256;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;
{643:}WHILE FONTPTR>0 DO BEGIN IF FONTUSED[FONTPTR]THEN DVIFONTDEF(
FONTPTR);FONTPTR:=FONTPTR-1;END{:643};BEGIN DVIBUF[DVIPTR]:=249;
DVIPTR:=DVIPTR+1;IF DVIPTR=DVILIMIT THEN DVISWAP;END;DVIFOUR(LASTBOP);
BEGIN DVIBUF[DVIPTR]:=2;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;K:=4+((DVIBUFSIZE-DVIPTR)MOD 4);
WHILE K>0 DO BEGIN BEGIN DVIBUF[DVIPTR]:=223;DVIPTR:=DVIPTR+1;
IF DVIPTR=DVILIMIT THEN DVISWAP;END;K:=K-1;END;
{599:}IF DVILIMIT=HALFBUF THEN WRITEDVI(HALFBUF,DVIBUFSIZE-1);
IF DVIPTR>0 THEN WRITEDVI(0,DVIPTR-1){:599};PRINTNL(839);
SLOWPRINT(OUTPUTFILENA);PRINT(286);PRINTINT(TOTALPAGES);PRINT(840);
IF TOTALPAGES<>1 THEN PRINTCHAR(115);PRINT(841);
PRINTINT(DVIOFFSET+DVIPTR);PRINT(842);BCLOSE(DVIFILE);END{:642};
IF LOGOPENED THEN BEGIN WRITELN(LOGFILE);ACLOSE(LOGFILE);
SELECTOR:=SELECTOR-2;IF SELECTOR=17 THEN BEGIN PRINTNL(1276);
SLOWPRINT(LOGNAME);PRINTCHAR(46);PRINTLN;END;END;END;
{:1333}{1335:}PROCEDURE FINALCLEANUP;LABEL 10;VAR C:SMALLNUMBER;
BEGIN C:=CURCHR;IF C<>1 THEN EQTB[5312].INT:=-1;
IF JOBNAME=0 THEN OPENLOGFILE;
WHILE INPUTPTR>0 DO IF CURINPUT.STATEFIELD=0 THEN ENDTOKENLIST ELSE
ENDFILEREADI;WHILE OPENPARENS>0 DO BEGIN PRINT(1277);
OPENPARENS:=OPENPARENS-1;END;IF CURLEVEL>1 THEN BEGIN PRINTNL(40);
PRINTESC(1278);PRINT(1279);PRINTINT(CURLEVEL-1);PRINTCHAR(41);END;
WHILE CONDPTR<>0 DO BEGIN PRINTNL(40);PRINTESC(1278);PRINT(1280);
PRINTCMDCHR(105,CURIF);IF IFLINE<>0 THEN BEGIN PRINT(1281);
PRINTINT(IFLINE);END;PRINT(1282);IFLINE:=MEM[CONDPTR+1].INT;
CURIF:=MEM[CONDPTR].HH.B1;TEMPPTR:=CONDPTR;CONDPTR:=MEM[CONDPTR].HH.RH;
FREENODE(TEMPPTR,2);END;
IF HISTORY<>0 THEN IF((HISTORY=1)OR(INTERACTION<3))THEN IF SELECTOR=19
THEN BEGIN SELECTOR:=17;PRINTNL(1283);SELECTOR:=19;END;
IF C=1 THEN BEGIN FOR C:=0 TO 4 DO IF CURMARK[C]<>0 THEN DELETETOKENR(
CURMARK[C]);IF LASTGLUE<>65535 THEN DELETEGLUERE(LASTGLUE);STOREFMTFILE;
GOTO 10;PRINTNL(1284);GOTO 10;END;10:END;
{:1335}{1336:}PROCEDURE INITPRIM;BEGIN NONEWCONTROL:=FALSE;
{226:}PRIMITIVE(376,75,2882);PRIMITIVE(377,75,2883);
PRIMITIVE(378,75,2884);PRIMITIVE(379,75,2885);PRIMITIVE(380,75,2886);
PRIMITIVE(381,75,2887);PRIMITIVE(382,75,2888);PRIMITIVE(383,75,2889);
PRIMITIVE(384,75,2890);PRIMITIVE(385,75,2891);PRIMITIVE(386,75,2892);
PRIMITIVE(387,75,2893);PRIMITIVE(388,75,2894);PRIMITIVE(389,75,2895);
PRIMITIVE(390,75,2896);PRIMITIVE(391,76,2897);PRIMITIVE(392,76,2898);
PRIMITIVE(393,76,2899);{:226}{230:}PRIMITIVE(398,72,3413);
PRIMITIVE(399,72,3414);PRIMITIVE(400,72,3415);PRIMITIVE(401,72,3416);
PRIMITIVE(402,72,3417);PRIMITIVE(403,72,3418);PRIMITIVE(404,72,3419);
PRIMITIVE(405,72,3420);PRIMITIVE(406,72,3421);
{:230}{238:}PRIMITIVE(420,73,5263);PRIMITIVE(421,73,5264);
PRIMITIVE(422,73,5265);PRIMITIVE(423,73,5266);PRIMITIVE(424,73,5267);
PRIMITIVE(425,73,5268);PRIMITIVE(426,73,5269);PRIMITIVE(427,73,5270);
PRIMITIVE(428,73,5271);PRIMITIVE(429,73,5272);PRIMITIVE(430,73,5273);
PRIMITIVE(431,73,5274);PRIMITIVE(432,73,5275);PRIMITIVE(433,73,5276);
PRIMITIVE(434,73,5277);PRIMITIVE(435,73,5278);PRIMITIVE(436,73,5279);
PRIMITIVE(437,73,5280);PRIMITIVE(438,73,5281);PRIMITIVE(439,73,5282);
PRIMITIVE(440,73,5283);PRIMITIVE(441,73,5284);PRIMITIVE(442,73,5285);
PRIMITIVE(443,73,5286);PRIMITIVE(444,73,5287);PRIMITIVE(445,73,5288);
PRIMITIVE(446,73,5289);PRIMITIVE(447,73,5290);PRIMITIVE(448,73,5291);
PRIMITIVE(449,73,5292);PRIMITIVE(450,73,5293);PRIMITIVE(451,73,5294);
PRIMITIVE(452,73,5295);PRIMITIVE(453,73,5296);PRIMITIVE(454,73,5297);
PRIMITIVE(455,73,5298);PRIMITIVE(456,73,5299);PRIMITIVE(457,73,5300);
PRIMITIVE(458,73,5301);PRIMITIVE(459,73,5302);PRIMITIVE(460,73,5303);
PRIMITIVE(461,73,5304);PRIMITIVE(462,73,5305);PRIMITIVE(463,73,5306);
PRIMITIVE(464,73,5307);PRIMITIVE(465,73,5308);PRIMITIVE(466,73,5309);
PRIMITIVE(467,73,5310);PRIMITIVE(468,73,5311);PRIMITIVE(469,73,5312);
PRIMITIVE(470,73,5313);PRIMITIVE(471,73,5314);PRIMITIVE(472,73,5315);
PRIMITIVE(473,73,5316);PRIMITIVE(474,73,5317);
{:238}{248:}PRIMITIVE(478,74,5830);PRIMITIVE(479,74,5831);
PRIMITIVE(480,74,5832);PRIMITIVE(481,74,5833);PRIMITIVE(482,74,5834);
PRIMITIVE(483,74,5835);PRIMITIVE(484,74,5836);PRIMITIVE(485,74,5837);
PRIMITIVE(486,74,5838);PRIMITIVE(487,74,5839);PRIMITIVE(488,74,5840);
PRIMITIVE(489,74,5841);PRIMITIVE(490,74,5842);PRIMITIVE(491,74,5843);
PRIMITIVE(492,74,5844);PRIMITIVE(493,74,5845);PRIMITIVE(494,74,5846);
PRIMITIVE(495,74,5847);PRIMITIVE(496,74,5848);PRIMITIVE(497,74,5849);
PRIMITIVE(498,74,5850);{:248}{265:}PRIMITIVE(32,64,0);
PRIMITIVE(47,44,0);PRIMITIVE(508,45,0);PRIMITIVE(509,90,0);
PRIMITIVE(510,40,0);PRIMITIVE(511,41,0);PRIMITIVE(512,61,0);
PRIMITIVE(513,16,0);PRIMITIVE(504,107,0);PRIMITIVE(514,15,0);
PRIMITIVE(515,92,0);PRIMITIVE(505,67,0);PRIMITIVE(516,62,0);
HASH[2616].RH:=516;EQTB[2616]:=EQTB[CURVAL];PRIMITIVE(517,102,0);
PRIMITIVE(518,88,0);PRIMITIVE(519,77,0);PRIMITIVE(520,32,0);
PRIMITIVE(521,36,0);PRIMITIVE(522,39,0);PRIMITIVE(330,37,0);
PRIMITIVE(351,18,0);PRIMITIVE(523,46,0);PRIMITIVE(524,17,0);
PRIMITIVE(525,54,0);PRIMITIVE(526,91,0);PRIMITIVE(527,34,0);
PRIMITIVE(528,65,0);PRIMITIVE(529,103,0);PRIMITIVE(335,55,0);
PRIMITIVE(530,63,0);PRIMITIVE(408,84,0);PRIMITIVE(531,42,0);
PRIMITIVE(532,80,0);PRIMITIVE(533,66,0);PRIMITIVE(534,96,0);
PRIMITIVE(535,0,256);HASH[2621].RH:=535;EQTB[2621]:=EQTB[CURVAL];
PRIMITIVE(536,98,0);PRIMITIVE(537,109,0);PRIMITIVE(407,71,0);
PRIMITIVE(352,38,0);PRIMITIVE(538,33,0);PRIMITIVE(539,56,0);
PRIMITIVE(540,35,0);{:265}{334:}PRIMITIVE(597,13,256);PARLOC:=CURVAL;
PARTOKEN:=4095+PARLOC;{:334}{376:}PRIMITIVE(629,104,0);
PRIMITIVE(630,104,1);{:376}{384:}PRIMITIVE(631,110,0);
PRIMITIVE(632,110,1);PRIMITIVE(633,110,2);PRIMITIVE(634,110,3);
PRIMITIVE(635,110,4);{:384}{411:}PRIMITIVE(476,89,0);
PRIMITIVE(500,89,1);PRIMITIVE(395,89,2);PRIMITIVE(396,89,3);
{:411}{416:}PRIMITIVE(668,79,102);PRIMITIVE(669,79,1);
PRIMITIVE(670,82,0);PRIMITIVE(671,82,1);PRIMITIVE(672,83,1);
PRIMITIVE(673,83,3);PRIMITIVE(674,83,2);PRIMITIVE(675,70,0);
PRIMITIVE(676,70,1);PRIMITIVE(677,70,2);PRIMITIVE(678,70,3);
PRIMITIVE(679,70,4);{:416}{468:}PRIMITIVE(735,108,0);
PRIMITIVE(736,108,1);PRIMITIVE(737,108,2);PRIMITIVE(738,108,3);
PRIMITIVE(739,108,4);PRIMITIVE(740,108,5);
{:468}{487:}PRIMITIVE(757,105,0);PRIMITIVE(758,105,1);
PRIMITIVE(759,105,2);PRIMITIVE(760,105,3);PRIMITIVE(761,105,4);
PRIMITIVE(762,105,5);PRIMITIVE(763,105,6);PRIMITIVE(764,105,7);
PRIMITIVE(765,105,8);PRIMITIVE(766,105,9);PRIMITIVE(767,105,10);
PRIMITIVE(768,105,11);PRIMITIVE(769,105,12);PRIMITIVE(770,105,13);
PRIMITIVE(771,105,14);PRIMITIVE(772,105,15);PRIMITIVE(773,105,16);
{:487}{491:}PRIMITIVE(774,106,2);HASH[2618].RH:=774;
EQTB[2618]:=EQTB[CURVAL];PRIMITIVE(775,106,4);PRIMITIVE(776,106,3);
{:491}{553:}PRIMITIVE(802,87,0);HASH[2624].RH:=802;
EQTB[2624]:=EQTB[CURVAL];{:553}{780:}PRIMITIVE(899,4,256);
PRIMITIVE(900,5,257);HASH[2615].RH:=900;EQTB[2615]:=EQTB[CURVAL];
PRIMITIVE(901,5,258);HASH[2619].RH:=902;HASH[2620].RH:=902;
EQTB[2620].HH.B0:=9;EQTB[2620].HH.RH:=29989;EQTB[2620].HH.B1:=1;
EQTB[2619]:=EQTB[2620];EQTB[2619].HH.B0:=115;
{:780}{983:}PRIMITIVE(971,81,0);PRIMITIVE(972,81,1);PRIMITIVE(973,81,2);
PRIMITIVE(974,81,3);PRIMITIVE(975,81,4);PRIMITIVE(976,81,5);
PRIMITIVE(977,81,6);PRIMITIVE(978,81,7);
{:983}{1052:}PRIMITIVE(1026,14,0);PRIMITIVE(1027,14,1);
{:1052}{1058:}PRIMITIVE(1028,26,4);PRIMITIVE(1029,26,0);
PRIMITIVE(1030,26,1);PRIMITIVE(1031,26,2);PRIMITIVE(1032,26,3);
PRIMITIVE(1033,27,4);PRIMITIVE(1034,27,0);PRIMITIVE(1035,27,1);
PRIMITIVE(1036,27,2);PRIMITIVE(1037,27,3);PRIMITIVE(336,28,5);
PRIMITIVE(340,29,1);PRIMITIVE(342,30,99);
{:1058}{1071:}PRIMITIVE(1055,21,1);PRIMITIVE(1056,21,0);
PRIMITIVE(1057,22,1);PRIMITIVE(1058,22,0);PRIMITIVE(409,20,0);
PRIMITIVE(1059,20,1);PRIMITIVE(1060,20,2);PRIMITIVE(966,20,3);
PRIMITIVE(1061,20,4);PRIMITIVE(968,20,5);PRIMITIVE(1062,20,106);
PRIMITIVE(1063,31,99);PRIMITIVE(1064,31,100);PRIMITIVE(1065,31,101);
PRIMITIVE(1066,31,102);{:1071}{1088:}PRIMITIVE(1081,43,1);
PRIMITIVE(1082,43,0);{:1088}{1107:}PRIMITIVE(1091,25,12);
PRIMITIVE(1092,25,11);PRIMITIVE(1093,25,10);PRIMITIVE(1094,23,0);
PRIMITIVE(1095,23,1);PRIMITIVE(1096,24,0);PRIMITIVE(1097,24,1);
{:1107}{1114:}PRIMITIVE(45,47,1);PRIMITIVE(349,47,0);
{:1114}{1141:}PRIMITIVE(1128,48,0);PRIMITIVE(1129,48,1);
{:1141}{1156:}PRIMITIVE(867,50,16);PRIMITIVE(868,50,17);
PRIMITIVE(869,50,18);PRIMITIVE(870,50,19);PRIMITIVE(871,50,20);
PRIMITIVE(872,50,21);PRIMITIVE(873,50,22);PRIMITIVE(874,50,23);
PRIMITIVE(876,50,26);PRIMITIVE(875,50,27);PRIMITIVE(1130,51,0);
PRIMITIVE(879,51,1);PRIMITIVE(880,51,2);
{:1156}{1169:}PRIMITIVE(862,53,0);PRIMITIVE(863,53,2);
PRIMITIVE(864,53,4);PRIMITIVE(865,53,6);
{:1169}{1178:}PRIMITIVE(1148,52,0);PRIMITIVE(1149,52,1);
PRIMITIVE(1150,52,2);PRIMITIVE(1151,52,3);PRIMITIVE(1152,52,4);
PRIMITIVE(1153,52,5);{:1178}{1188:}PRIMITIVE(877,49,30);
PRIMITIVE(878,49,31);HASH[2617].RH:=878;EQTB[2617]:=EQTB[CURVAL];
{:1188}{1208:}PRIMITIVE(1172,93,1);PRIMITIVE(1173,93,2);
PRIMITIVE(1174,93,4);PRIMITIVE(1175,97,0);PRIMITIVE(1176,97,1);
PRIMITIVE(1177,97,2);PRIMITIVE(1178,97,3);
{:1208}{1219:}PRIMITIVE(1192,94,0);PRIMITIVE(1193,94,1);
{:1219}{1222:}PRIMITIVE(1194,95,0);PRIMITIVE(1195,95,1);
PRIMITIVE(1196,95,2);PRIMITIVE(1197,95,3);PRIMITIVE(1198,95,4);
PRIMITIVE(1199,95,5);PRIMITIVE(1200,95,6);
{:1222}{1230:}PRIMITIVE(415,85,3983);PRIMITIVE(419,85,5007);
PRIMITIVE(416,85,4239);PRIMITIVE(417,85,4495);PRIMITIVE(418,85,4751);
PRIMITIVE(477,85,5574);PRIMITIVE(412,86,3935);PRIMITIVE(413,86,3951);
PRIMITIVE(414,86,3967);{:1230}{1250:}PRIMITIVE(942,99,0);
PRIMITIVE(954,99,1);{:1250}{1254:}PRIMITIVE(1218,78,0);
PRIMITIVE(1219,78,1);{:1254}{1262:}PRIMITIVE(274,100,0);
PRIMITIVE(275,100,1);PRIMITIVE(276,100,2);PRIMITIVE(1228,100,3);
{:1262}{1272:}PRIMITIVE(1229,60,1);PRIMITIVE(1230,60,0);
{:1272}{1277:}PRIMITIVE(1231,58,0);PRIMITIVE(1232,58,1);
{:1277}{1286:}PRIMITIVE(1238,57,4239);PRIMITIVE(1239,57,4495);
{:1286}{1291:}PRIMITIVE(1240,19,0);PRIMITIVE(1241,19,1);
PRIMITIVE(1242,19,2);PRIMITIVE(1243,19,3);
{:1291}{1344:}PRIMITIVE(1286,59,0);PRIMITIVE(594,59,1);WRITELOC:=CURVAL;
PRIMITIVE(1287,59,2);PRIMITIVE(1288,59,3);PRIMITIVE(1289,59,4);
PRIMITIVE(1290,59,5);{:1344};NONEWCONTROL:=TRUE;END;
{:1336}{1338:}{PROCEDURE DEBUGHELP;LABEL 888,10;VAR K,L,M,N:INTEGER;
BEGIN;WHILE TRUE DO BEGIN;PRINTNL(1285);FLUSH(OUTPUT);
IF EOF(INPUT)THEN GOTO 10;READ(INPUT,M);
IF M<0 THEN GOTO 10 ELSE IF M=0 THEN BEGIN GOTO 888;888:M:=0;
['BREAKPOINT']END ELSE BEGIN IF EOF(INPUT)THEN GOTO 10;READ(INPUT,N);
CASE M OF[1339:]1:PRINTWORD(MEM[N]);2:PRINTINT(MEM[N].HH.LH);
3:PRINTINT(MEM[N].HH.RH);4:PRINTWORD(EQTB[N]);5:PRINTWORD(FONTINFO[N]);
6:PRINTWORD(SAVESTACK[N]);7:SHOWBOX(N);8:BEGIN BREADTHMAX:=10000;
DEPTHTHRESHO:=POOLSIZE-POOLPTR-10;SHOWNODELIST(N);END;
9:SHOWTOKENLIS(N,0,1000);10:SLOWPRINT(N);11:CHECKMEM(N>0);
12:SEARCHMEM(N);13:BEGIN IF EOF(INPUT)THEN GOTO 10;READ(INPUT,L);
PRINTCMDCHR(N,L);END;14:FOR K:=0 TO N DO PRINT(BUFFER[K]);
15:BEGIN FONTINSHORTD:=0;SHORTDISPLAY(N);END;
16:PANICKING:=NOT PANICKING;[:1339]ELSE PRINT(63)END;END;END;10:END;}
{:1338}{1380:}PROCEDURE EXECEDITOR;CONST ARGSIZE=100;EDITOR='vi';
{EDITOR='ed';}EDITORLENGTH=2;VAR I,L:INTEGER;J:POOLPOINTER;S:STRNUMBER;
SEL:INTEGER;EDITORARG,LINEARG,FILEARG:ARRAY[1..ARGSIZE]OF CHAR;
ARGV:ARRAY[0..3]OF PCHAR;BEGIN L:=EDITORLENGTH;
FOR J:=1 TO L DO EDITORARG[J]:=EDITOR[J];EDITORARG[L+1]:=CHR(0);
SEL:=SELECTOR;SELECTOR:=21;PRINTINT(LINE);SELECTOR:=SEL;S:=MAKESTRING;
LINEARG[1]:='+';J:=STRSTART[S];L:=(STRSTART[S+1]-STRSTART[S])+1;
FOR I:=2 TO L DO BEGIN LINEARG[I]:=XCHR[STRPOOL[J]];J:=J+1 END;
LINEARG[L+1]:=CHR(0);J:=STRSTART[INPUTSTACK[BASEPTR].NAMEFIELD];
L:=(STRSTART[INPUTSTACK[BASEPTR].NAMEFIELD+1]-STRSTART[INPUTSTACK[
BASEPTR].NAMEFIELD]);IF L+1>ARGSIZE THEN BEGIN WRITELN(
'File name longer than 100 bytes! Nice try!');HALT(100);END;
FOR I:=1 TO L DO BEGIN FILEARG[I]:=XCHR[STRPOOL[J]];J:=J+1 END;
FILEARG[L+1]:=CHR(0);ARGV[0]:=@EDITORARG;ARGV[1]:=@LINEARG;
ARGV[2]:=@FILEARG;ARGV[3]:=NIL;{ARGV[1]:=@FILEARG;ARGV[2]:=NIL;}
FPEXECVP(EDITOR,ARGV);WRITELN('Sorry, executing the editor failed.');
END;{:1380}{:1330}{1332:}BEGIN HISTORY:=3;;
IF READYALREADY=314159 THEN GOTO 1;{14:}BAD:=0;
IF(HALFERRORLIN<30)OR(HALFERRORLIN>ERRORLINE-15)THEN BAD:=1;
IF MAXPRINTLINE<60 THEN BAD:=2;IF DVIBUFSIZE MOD 8<>0 THEN BAD:=3;
IF 1100>30000 THEN BAD:=4;IF 1777>2100 THEN BAD:=5;
IF MAXINOPEN>=128 THEN BAD:=6;IF 30000<267 THEN BAD:=7;
{:14}{111:}IF(MEMMIN<>0)OR(MEMMAX<>30000)THEN BAD:=10;
IF(MEMMIN>0)OR(MEMMAX<30000)THEN BAD:=10;IF(0>0)OR(255<127)THEN BAD:=11;
IF(0>0)OR(65535<32767)THEN BAD:=12;IF(0<0)OR(255>65535)THEN BAD:=13;
IF(MEMMIN<0)OR(MEMMAX>=65535)OR(-0-MEMMIN>65536)THEN BAD:=14;
IF(0<0)OR(FONTMAX>255)THEN BAD:=15;IF FONTMAX>256 THEN BAD:=16;
IF(SAVESIZE>65535)OR(MAXSTRINGS>65535)THEN BAD:=17;
IF BUFSIZE>65535 THEN BAD:=18;IF 255<255 THEN BAD:=19;
{:111}{290:}IF 6976>65535 THEN BAD:=21;
{:290}{522:}IF 20>FILENAMESIZE THEN BAD:=31;
{:522}{1249:}IF 2*65535<30000-MEMMIN THEN BAD:=41;
{:1249}IF BAD>0 THEN BEGIN WRITELN(OUTPUT,
'Ouch---my internal constants have been clobbered!','---case ',BAD:1);
GOTO 9999;END;INITIALIZE;IF NOT GETSTRINGSST THEN GOTO 9999;INITPRIM;
INITSTRPTR:=STRPTR;INITPOOLPTR:=POOLPTR;FIXDATEANDTI;
READYALREADY:=314159;1:{55:}SELECTOR:=17;TALLY:=0;TERMOFFSET:=0;
FILEOFFSET:=0;{:55}{61:}WRITE(OUTPUT,'This is TeX-FPC, 4th ed.');
IF FORMATIDENT=0 THEN WRITELN(OUTPUT,' (no format preloaded)')ELSE BEGIN
SLOWPRINT(FORMATIDENT);PRINTLN;END;FLUSH(OUTPUT);{:61}{528:}JOBNAME:=0;
NAMEINPROGRE:=FALSE;LOGOPENED:=FALSE;{:528}{533:}OUTPUTFILENA:=0;{:533};
{1337:}BEGIN{331:}BEGIN INPUTPTR:=0;MAXINSTACK:=0;INOPEN:=0;
OPENPARENS:=0;MAXBUFSTACK:=0;PARAMPTR:=0;MAXPARAMSTAC:=0;FIRST:=BUFSIZE;
REPEAT BUFFER[FIRST]:=0;FIRST:=FIRST-1;UNTIL FIRST=0;SCANNERSTATU:=0;
WARNINGINDEX:=0;FIRST:=1;CURINPUT.STATEFIELD:=33;CURINPUT.STARTFIELD:=1;
CURINPUT.INDEXFIELD:=0;LINE:=0;CURINPUT.NAMEFIELD:=0;FORCEEOF:=FALSE;
ALIGNSTATE:=1000000;IF NOT INITTERMINAL THEN GOTO 9999;
CURINPUT.LIMITFIELD:=LAST;FIRST:=LAST+1;END{:331};
IF(FORMATIDENT=0)OR(BUFFER[CURINPUT.LOCFIELD]=38)THEN BEGIN IF
FORMATIDENT<>0 THEN INITIALIZE;IF NOT OPENFMTFILE THEN GOTO 9999;
IF NOT LOADFMTFILE THEN BEGIN WCLOSE(FMTFILE);GOTO 9999;END;
WCLOSE(FMTFILE);
WHILE(CURINPUT.LOCFIELD<CURINPUT.LIMITFIELD)AND(BUFFER[CURINPUT.LOCFIELD
]=32)DO CURINPUT.LOCFIELD:=CURINPUT.LOCFIELD+1;END;
IF(EQTB[5311].INT<0)OR(EQTB[5311].INT>255)THEN CURINPUT.LIMITFIELD:=
CURINPUT.LIMITFIELD-1 ELSE BUFFER[CURINPUT.LIMITFIELD]:=EQTB[5311].INT;
FIXDATEANDTI;{765:}MAGICOFFSET:=STRSTART[893]-9*16{:765};
{75:}IF INTERACTION=0 THEN SELECTOR:=16 ELSE SELECTOR:=17{:75};
IF(CURINPUT.LOCFIELD<CURINPUT.LIMITFIELD)AND(EQTB[3983+BUFFER[CURINPUT.
LOCFIELD]].HH.RH<>0)THEN STARTINPUT;END{:1337};HISTORY:=0;MAINCONTROL;
FINALCLEANUP;9998:CLOSEFILESAN;9999:IF WANTEDIT THEN EXECEDITOR;
HALT(HISTORY);END.{:1332}
